//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
// 
namespace Energistics.Generator.WITSML200 {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_WellboreCompletion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_WellCompletion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_ToolErrorTermSet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_ToolErrorModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_StimJob))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_StimJobStage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_StimPerforationsCluster))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_Risk))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_Rig))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_FormationMarkerSet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_FormationMarker))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_DepthRegImage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_WellCMLedger))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_OpsReport))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_Trajectory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_DownholeComponent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_WellboreGeology))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_ShowEvaluation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_InterpretedGeology))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_CuttingsGeology))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_Log))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_Channel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_ChannelSet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_CementJob))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_CementJobEvaluation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_WellboreGeometry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_BhaRun))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_FluidsReport))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_DrillReport))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_Tubular))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_Attachment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_Wellbore))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_Well))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_DataAssuranceRecord))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectedCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_EpcExternalPartReference))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    [System.Xml.Serialization.XmlRootAttribute("AbstractDataObject", Namespace="http://www.energistics.org/energyml/data/commonv2", IsNullable=false)]
    public abstract partial class AbstractObject {
        
        private ObjectAlias[] aliasesField;
        
        private Citation citationField;
        
        private CustomData customDataField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string objectVersionField;
        
        private string schemaVersionField;
        
        private string uuidField;
        
        private ExistenceKind existenceKindField;
        
        private bool existenceKindFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Aliases")]
        public ObjectAlias[] Aliases {
            get {
                return this.aliasesField;
            }
            set {
                this.aliasesField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public Citation Citation {
            get {
                return this.citationField;
            }
            set {
                this.citationField = value;
            }
        }
        
        /// <remarks/>
        public CustomData CustomData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectVersion {
            get {
                return this.objectVersionField;
            }
            set {
                this.objectVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string schemaVersion {
            get {
                return this.schemaVersionField;
            }
            set {
                this.schemaVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A list of lifecycle states like actual, required, planned, predicted, etc. These are used to qualify any top-level element (from Epicentre 2.1).</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("A list of lifecycle states like actual, required, planned, predicted, etc. These " +
            "are used to qualify any top-level element (from Epicentre 2.1).")]
        public ExistenceKind existenceKind {
            get {
                return this.existenceKindField;
            }
            set {
                this.existenceKindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool existenceKindSpecified {
            get {
                return this.existenceKindFieldSpecified;
            }
            set {
                this.existenceKindFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ObjectAlias {
        
        private string identifierField;
        
        private string descriptionField;
        
        private string authorityField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string Identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string authority {
            get {
                return this.authorityField;
            }
            set {
                this.authorityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class GravelPackInterval {
        
        private string downholeStringRefIDField;
        
        private MdInterval gravelPackMdIntervalField;
        
        private TvdInterval gravelPackTvdIntervalField;
        
        private EventInfo eventHistoryField;
        
        private string[] geologyFeatureRefIDField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private IntervalStatusHistory[] statusHistoryField;
        
        private string uidField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string DownholeStringRefID {
            get {
                return this.downholeStringRefIDField;
            }
            set {
                this.downholeStringRefIDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gravel packed measured depth interval for this completion.</summary>
        [System.ComponentModel.DescriptionAttribute("Gravel packed measured depth interval for this completion.")]
        public MdInterval GravelPackMdInterval {
            get {
                return this.gravelPackMdIntervalField;
            }
            set {
                this.gravelPackMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gravel packed true vertical depth interval for this completion.</summary>
        [System.ComponentModel.DescriptionAttribute("Gravel packed true vertical depth interval for this completion.")]
        public TvdInterval GravelPackTvdInterval {
            get {
                return this.gravelPackTvdIntervalField;
            }
            set {
                this.gravelPackTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The contactInterval event information</summary>
        [System.ComponentModel.DescriptionAttribute("The contactInterval event information")]
        public EventInfo EventHistory {
            get {
                return this.eventHistoryField;
            }
            set {
                this.eventHistoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GeologyFeatureRefID")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string[] GeologyFeatureRefID {
            get {
                return this.geologyFeatureRefIDField;
            }
            set {
                this.geologyFeatureRefIDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StatusHistory")]
        public IntervalStatusHistory[] StatusHistory {
            get {
                return this.statusHistoryField;
            }
            set {
                this.statusHistoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class MdInterval {
        
        private LengthMeasure mdTopField;
        
        private LengthMeasure mdBaseField;
        
        private string datumField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public LengthMeasure MdTop {
            get {
                return this.mdTopField;
            }
            set {
                this.mdTopField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public LengthMeasure MdBase {
            get {
                return this.mdBaseField;
            }
            set {
                this.mdBaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string datum {
            get {
                return this.datumField;
            }
            set {
                this.datumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class LengthMeasure {
        
        private LengthUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum LengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.1 ft")]
        Item01ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.1 ft[US]")]
        Item01ftUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.1 in")]
        Item01in,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.1 yd")]
        Item01yd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/16 in")]
        Item116in,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/2 ft")]
        Item12ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/32 in")]
        Item132in,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/64 in")]
        Item164in,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10 ft")]
        Item10ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10 in")]
        Item10in,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10 km")]
        Item10km,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("100 ft")]
        Item100ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("100 km")]
        Item100km,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 ft")]
        Item1000ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("30 ft")]
        Item30ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("30 m")]
        Item30m,
        
        /// <remarks/>
        angstrom,
        
        /// <remarks/>
        chain,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chain[BnA]")]
        chainBnA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chain[BnB]")]
        chainBnB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chain[Cla]")]
        chainCla,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chain[Ind37]")]
        chainInd37,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chain[Se]")]
        chainSe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chain[SeT]")]
        chainSeT,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chain[US]")]
        chainUS,
        
        /// <remarks/>
        cm,
        
        /// <remarks/>
        dam,
        
        /// <remarks/>
        dm,
        
        /// <remarks/>
        Em,
        
        /// <remarks/>
        fathom,
        
        /// <remarks/>
        fm,
        
        /// <remarks/>
        ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft[BnA]")]
        ftBnA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft[BnB]")]
        ftBnB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft[Br36]")]
        ftBr36,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft[Br65]")]
        ftBr65,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft[Cla]")]
        ftCla,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft[GC]")]
        ftGC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft[Ind]")]
        ftInd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft[Ind37]")]
        ftInd37,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft[Ind62]")]
        ftInd62,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft[Ind75]")]
        ftInd75,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft[Se]")]
        ftSe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft[SeT]")]
        ftSeT,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft[US]")]
        ftUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fur[US]")]
        furUS,
        
        /// <remarks/>
        Gm,
        
        /// <remarks/>
        hm,
        
        /// <remarks/>
        @in,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in[US]")]
        inUS,
        
        /// <remarks/>
        km,
        
        /// <remarks/>
        link,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("link[BnA]")]
        linkBnA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("link[BnB]")]
        linkBnB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("link[Cla]")]
        linkCla,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("link[Se]")]
        linkSe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("link[SeT]")]
        linkSeT,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("link[US]")]
        linkUS,
        
        /// <remarks/>
        m,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m[Ger]")]
        mGer,
        
        /// <remarks/>
        mi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mi[naut]")]
        minaut,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mi[nautUK]")]
        minautUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mi[US]")]
        miUS,
        
        /// <remarks/>
        mil,
        
        /// <remarks/>
        mm,
        
        /// <remarks/>
        Mm,
        
        /// <remarks/>
        nm,
        
        /// <remarks/>
        pm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rod[US]")]
        rodUS,
        
        /// <remarks/>
        Tm,
        
        /// <remarks/>
        um,
        
        /// <remarks/>
        yd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("yd[BnA]")]
        ydBnA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("yd[BnB]")]
        ydBnB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("yd[Cla]")]
        ydCla,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("yd[Ind]")]
        ydInd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("yd[Ind37]")]
        ydInd37,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("yd[Ind62]")]
        ydInd62,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("yd[Ind75]")]
        ydInd75,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("yd[Se]")]
        ydSe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("yd[SeT]")]
        ydSeT,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("yd[US]")]
        ydUS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class TvdInterval {
        
        private LengthMeasure tvdTopField;
        
        private string datumField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public LengthMeasure TvdTop {
            get {
                return this.tvdTopField;
            }
            set {
                this.tvdTopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string datum {
            get {
                return this.datumField;
            }
            set {
                this.datumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class EventInfo {
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private EventRefInfo beginEventField;
        
        private EventRefInfo endEventField;
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public EventRefInfo BeginEvent {
            get {
                return this.beginEventField;
            }
            set {
                this.beginEventField = value;
            }
        }
        
        /// <remarks/>
        public EventRefInfo EndEvent {
            get {
                return this.endEventField;
            }
            set {
                this.endEventField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ExtensionNameValue {
        
        private string nameField;
        
        private string valueField;
        
        private string measureClassField;
        
        private string dTimField;
        
        private int indexField;
        
        private bool indexFieldSpecified;
        
        private string descriptionField;
        
        /// <remarks/>
        /// <summary>The name of the extension. Each standard name should document the expected measure class. Each standard name should document the expected maximum size.  For numeric values the size should be in terms of xsd types such as int, long, short, byte, float or double. For strings, the maximum length should be defined in number of characters. Local extensions to the list of standard names are allowed but it is strongly recommended that the names and definitions be approved by the  WITSML SIG Technical Team before use.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The name of the extension. Each standard name should document the expected measure class. Each standard name should document the expected maximum size.  For numeric values the size should be in terms of xsd types such as int, long, short, byte, float or double. For strings, the maximum length should be defined in number of characters. Local extensions to the list of standard names are allowed but it is strongly recommended that the names and definitions be approved by the  WITSML SIG Technical Team before use.")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The value of the extension. This may also include a uom attribute. The content should conform to constraints defined by the data type.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The value of the extension. This may also include a uom attribute. The content sh" +
            "ould conform to constraints defined by the data type.")]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of the measure. For example, "length". This should be specified if the value requires a unit of measure.</summary>
        [System.ComponentModel.DescriptionAttribute("The kind of the measure. For example, \"length\". This should be specified if the v" +
            "alue requires a unit of measure.")]
        public string MeasureClass {
            get {
                return this.measureClassField;
            }
            set {
                this.measureClassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date-time associated with the value.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The date-time associated with the value.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Indexes things with the same name.  That is, 1 indicates the first one, 2 incidates the second one, etc.</summary>
        [System.ComponentModel.DescriptionAttribute("Indexes things with the same name.  That is, 1 indicates the first one, 2 incidat" +
            "es the second one, etc.")]
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual description of the extension.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A textual description of the extension.")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class EventRefInfo {
        
        private string eventRefIDField;
        
        private string eventDateField;
        
        /// <remarks/>
        /// <summary>The referencing eventledger ID</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The referencing eventledger ID")]
        public string EventRefID {
            get {
                return this.eventRefIDField;
            }
            set {
                this.eventRefIDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>install/pull date</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("install/pull date")]
        public string EventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class IntervalStatusHistory {
        
        private string physicalStatusField;
        
        private string startDateField;
        
        private string endDateField;
        
        private MdInterval statusMdIntervalField;
        
        private double allocationFactorField;
        
        private bool allocationFactorFieldSpecified;
        
        private string commentField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The physical status of an interval (e.g., open, closed, proposed)</summary>
        [System.ComponentModel.DescriptionAttribute("The physical status of an interval (e.g., open, closed, proposed)")]
        public string PhysicalStatus {
            get {
                return this.physicalStatusField;
            }
            set {
                this.physicalStatusField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The start date of status and allocation factor</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The start date of status and allocation factor")]
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The end date of status and allocation factor</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The end date of status and allocation factor")]
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth interval over which this status is valid for the given time frame.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth interval over which this status is valid for the given time frame." +
            "")]
        public MdInterval StatusMdInterval {
            get {
                return this.statusMdIntervalField;
            }
            set {
                this.statusMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>defines the proportional amount of fluid from the well completion  that is flowing through this interval whithin a wellbore</summary>
        [System.ComponentModel.DescriptionAttribute("defines the proportional amount of fluid from the well completion  that is flowin" +
            "g through this interval whithin a wellbore")]
        public double AllocationFactor {
            get {
                return this.allocationFactorField;
            }
            set {
                this.allocationFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllocationFactorSpecified {
            get {
                return this.allocationFactorFieldSpecified;
            }
            set {
                this.allocationFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A remark about the interval over this period of time</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A remark about the interval over this period of time")]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class PerforationStatusHistory {
        
        private string perforationStatusField;
        
        private string startDateField;
        
        private string endDateField;
        
        private MdInterval perforationMdIntervalField;
        
        private TvdInterval perforationTvdIntervalField;
        
        private double allocationFactorField;
        
        private bool allocationFactorFieldSpecified;
        
        private string commentField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>perforation status</summary>
        [System.ComponentModel.DescriptionAttribute("perforation status")]
        public string PerforationStatus {
            get {
                return this.perforationStatusField;
            }
            set {
                this.perforationStatusField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>the start date of status</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("the start date of status")]
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>the end date of status</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("the end date of status")]
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Overall measured depth interval for this perforated interval..</summary>
        [System.ComponentModel.DescriptionAttribute("Overall measured depth interval for this perforated interval..")]
        public MdInterval PerforationMdInterval {
            get {
                return this.perforationMdIntervalField;
            }
            set {
                this.perforationMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Overall true vertical depth interval for this perforated interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Overall true vertical depth interval for this perforated interval.")]
        public TvdInterval PerforationTvdInterval {
            get {
                return this.perforationTvdIntervalField;
            }
            set {
                this.perforationTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>defines the proportional amount of fluid from the well completion  that is flowing through this interval whithin a wellbore</summary>
        [System.ComponentModel.DescriptionAttribute("defines the proportional amount of fluid from the well completion  that is flowin" +
            "g through this interval whithin a wellbore")]
        public double AllocationFactor {
            get {
                return this.allocationFactorField;
            }
            set {
                this.allocationFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllocationFactorSpecified {
            get {
                return this.allocationFactorFieldSpecified;
            }
            set {
                this.allocationFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The description about the status</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("The description about the status")]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class PerforationSetInterval {
        
        private string perforationSetRefIDField;
        
        private MdInterval perforationSetMdIntervalField;
        
        private TvdInterval perforationSetTvdIntervalField;
        
        private EventInfo eventHistoryField;
        
        private string[] geologyFeatureRefIDField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private PerforationStatusHistory[] perforationStatusHistoryField;
        
        private string uidField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string PerforationSetRefID {
            get {
                return this.perforationSetRefIDField;
            }
            set {
                this.perforationSetRefIDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Overall measured depth interval for this perforation set.</summary>
        [System.ComponentModel.DescriptionAttribute("Overall measured depth interval for this perforation set.")]
        public MdInterval PerforationSetMdInterval {
            get {
                return this.perforationSetMdIntervalField;
            }
            set {
                this.perforationSetMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Overall true vertical depth interval for this perforation set.</summary>
        [System.ComponentModel.DescriptionAttribute("Overall true vertical depth interval for this perforation set.")]
        public TvdInterval PerforationSetTvdInterval {
            get {
                return this.perforationSetTvdIntervalField;
            }
            set {
                this.perforationSetTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The contactInterval event information</summary>
        [System.ComponentModel.DescriptionAttribute("The contactInterval event information")]
        public EventInfo EventHistory {
            get {
                return this.eventHistoryField;
            }
            set {
                this.eventHistoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GeologyFeatureRefID")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string[] GeologyFeatureRefID {
            get {
                return this.geologyFeatureRefIDField;
            }
            set {
                this.geologyFeatureRefIDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PerforationStatusHistory")]
        public PerforationStatusHistory[] PerforationStatusHistory {
            get {
                return this.perforationStatusHistoryField;
            }
            set {
                this.perforationStatusHistoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class OpenHoleInterval {
        
        private string boreholeStringRefIDField;
        
        private MdInterval openHoleMdIntervalField;
        
        private TvdInterval openHoleTvdIntervalField;
        
        private EventInfo eventHistoryField;
        
        private string[] geologyFeatureRefIDField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private IntervalStatusHistory[] statusHistoryField;
        
        private string uidField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string BoreholeStringRefID {
            get {
                return this.boreholeStringRefIDField;
            }
            set {
                this.boreholeStringRefIDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Open hole measured depth interval for this completion.</summary>
        [System.ComponentModel.DescriptionAttribute("Open hole measured depth interval for this completion.")]
        public MdInterval OpenHoleMdInterval {
            get {
                return this.openHoleMdIntervalField;
            }
            set {
                this.openHoleMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Open hole true vertical depth interval for this completion.</summary>
        [System.ComponentModel.DescriptionAttribute("Open hole true vertical depth interval for this completion.")]
        public TvdInterval OpenHoleTvdInterval {
            get {
                return this.openHoleTvdIntervalField;
            }
            set {
                this.openHoleTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The contactInterval event information</summary>
        [System.ComponentModel.DescriptionAttribute("The contactInterval event information")]
        public EventInfo EventHistory {
            get {
                return this.eventHistoryField;
            }
            set {
                this.eventHistoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GeologyFeatureRefID")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string[] GeologyFeatureRefID {
            get {
                return this.geologyFeatureRefIDField;
            }
            set {
                this.geologyFeatureRefIDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StatusHistory")]
        public IntervalStatusHistory[] StatusHistory {
            get {
                return this.statusHistoryField;
            }
            set {
                this.statusHistoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class SlotsInterval {
        
        private string stringEquipmentRefUIDField;
        
        private MdInterval slottedMdIntervalField;
        
        private TvdInterval slottedTvdIntervalField;
        
        private EventInfo eventHistoryField;
        
        private string[] geologyFeatureRefIDField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private IntervalStatusHistory[] statusHistoryField;
        
        private string uidField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string StringEquipmentRefUID {
            get {
                return this.stringEquipmentRefUIDField;
            }
            set {
                this.stringEquipmentRefUIDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Slotted measured depth interval for this completion.</summary>
        [System.ComponentModel.DescriptionAttribute("Slotted measured depth interval for this completion.")]
        public MdInterval SlottedMdInterval {
            get {
                return this.slottedMdIntervalField;
            }
            set {
                this.slottedMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Slotted true vertical depth interval for this completion.</summary>
        [System.ComponentModel.DescriptionAttribute("Slotted true vertical depth interval for this completion.")]
        public TvdInterval SlottedTvdInterval {
            get {
                return this.slottedTvdIntervalField;
            }
            set {
                this.slottedTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The contactInterval event information</summary>
        [System.ComponentModel.DescriptionAttribute("The contactInterval event information")]
        public EventInfo EventHistory {
            get {
                return this.eventHistoryField;
            }
            set {
                this.eventHistoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GeologyFeatureRefID")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string[] GeologyFeatureRefID {
            get {
                return this.geologyFeatureRefIDField;
            }
            set {
                this.geologyFeatureRefIDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StatusHistory")]
        public IntervalStatusHistory[] StatusHistory {
            get {
                return this.statusHistoryField;
            }
            set {
                this.statusHistoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class ContactIntervalSet {
        
        private SlotsInterval[] slotsIntervalField;
        
        private OpenHoleInterval[] openHoleIntervalField;
        
        private PerforationSetInterval[] perforationSetIntervalField;
        
        private GravelPackInterval[] gravelPackIntervalField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SlotsInterval")]
        public SlotsInterval[] SlotsInterval {
            get {
                return this.slotsIntervalField;
            }
            set {
                this.slotsIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OpenHoleInterval")]
        public OpenHoleInterval[] OpenHoleInterval {
            get {
                return this.openHoleIntervalField;
            }
            set {
                this.openHoleIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PerforationSetInterval")]
        public PerforationSetInterval[] PerforationSetInterval {
            get {
                return this.perforationSetIntervalField;
            }
            set {
                this.perforationSetIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GravelPackInterval")]
        public GravelPackInterval[] GravelPackInterval {
            get {
                return this.gravelPackIntervalField;
            }
            set {
                this.gravelPackIntervalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class CompletionStatusHistory {
        
        private string statusField;
        
        private string startDateField;
        
        private string endDateField;
        
        private MdInterval perforationMdIntervalField;
        
        private string commentField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Completion status</summary>
        [System.ComponentModel.DescriptionAttribute("Completion status")]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>the start date of status</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("the start date of status")]
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>the end date of status</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("the end date of status")]
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth interval between the top and the base of the perforations.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth interval between the top and the base of the perforations.")]
        public MdInterval PerforationMdInterval {
            get {
                return this.perforationMdIntervalField;
            }
            set {
                this.perforationMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The description about the status</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("The description about the status")]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class IscwsaErrorCoefficient {
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string itemField;
        
        private ItemChoiceType itemElementNameField;
        
        private string uidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Azi", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("Depth", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("Inc", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("Tvd", typeof(string))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2", IncludeInSchema=false)]
    public enum ItemChoiceType {
        
        /// <remarks/>
        Azi,
        
        /// <remarks/>
        Depth,
        
        /// <remarks/>
        Inc,
        
        /// <remarks/>
        Tvd,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class IscwsaErrorTerm {
        
        private string nameField;
        
        private ErrorTermSource typeField;
        
        private bool typeFieldSpecified;
        
        private string measureClassField;
        
        private string labelField;
        
        private string descriptionField;
        
        private SurveyToolOperatingMode[] operatingModeField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private IscwsaErrorCoefficient[] errorCoefficientField;
        
        private string uidField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public ErrorTermSource Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string MeasureClass {
            get {
                return this.measureClassField;
            }
            set {
                this.measureClassField = value;
            }
        }
        
        /// <remarks/>
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OperatingMode")]
        public SurveyToolOperatingMode[] OperatingMode {
            get {
                return this.operatingModeField;
            }
            set {
                this.operatingModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ErrorCoefficient")]
        public IscwsaErrorCoefficient[] ErrorCoefficient {
            get {
                return this.errorCoefficientField;
            }
            set {
                this.errorCoefficientField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ErrorTermSource {
        
        /// <remarks/>
        sensor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("azimuth reference")]
        azimuthreference,
        
        /// <remarks/>
        magnetic,
        
        /// <remarks/>
        alignment,
        
        /// <remarks/>
        misalignment,
        
        /// <remarks/>
        depth,
        
        /// <remarks/>
        reference,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum SurveyToolOperatingMode {
        
        /// <remarks/>
        unknown,
        
        /// <remarks/>
        stationary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("continuous XY")]
        continuousXY,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("continuous Z")]
        continuousZ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("continuous XYZ")]
        continuousXYZ,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class IscwsaNomenclatureConstant {
        
        private string nameField;
        
        private double valueField;
        
        private string unitField;
        
        private string descriptionField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class IscwsaNameAndDescription {
        
        private string nameField;
        
        private string descriptionField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class IscwsaNomenclature {
        
        private IscwsaNameAndDescription[] parameterField;
        
        private IscwsaNameAndDescription[] functionField;
        
        private IscwsaNomenclatureConstant[] constantField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Parameter")]
        public IscwsaNameAndDescription[] Parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Function")]
        public IscwsaNameAndDescription[] Function {
            get {
                return this.functionField;
            }
            set {
                this.functionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Constant")]
        public IscwsaNomenclatureConstant[] Constant {
            get {
                return this.constantField;
            }
            set {
                this.constantField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class MeasureOrQuantity {
        
        private string uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class IscwsaErrorTermValue {
        
        private string termField;
        
        private ErrorPropagationMode propField;
        
        private double biasField;
        
        private bool biasFieldSpecified;
        
        private string commentField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private MeasureOrQuantity valueField;
        
        private string uidField;
        
        /// <remarks/>
        public string Term {
            get {
                return this.termField;
            }
            set {
                this.termField = value;
            }
        }
        
        /// <remarks/>
        public ErrorPropagationMode Prop {
            get {
                return this.propField;
            }
            set {
                this.propField = value;
            }
        }
        
        /// <remarks/>
        public double Bias {
            get {
                return this.biasField;
            }
            set {
                this.biasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BiasSpecified {
            get {
                return this.biasFieldSpecified;
            }
            set {
                this.biasFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public MeasureOrQuantity Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ErrorPropagationMode {
        
        /// <remarks/>
        B,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        S,
        
        /// <remarks/>
        W,
        
        /// <remarks/>
        G,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class IscwsaModelParameters {
        
        private ErrorModelMisalignmentMode misalignmentModeField;
        
        private PlaneAngleMeasure gyroInitializationField;
        
        private LengthMeasure gyroReinitializationDistanceField;
        
        private bool switchingField;
        
        private bool switchingFieldSpecified;
        
        private double noiseReductionFactorField;
        
        private bool noiseReductionFactorFieldSpecified;
        
        private LengthPerTimeMeasure gyroRunningSpeedField;
        
        /// <remarks/>
        public ErrorModelMisalignmentMode MisalignmentMode {
            get {
                return this.misalignmentModeField;
            }
            set {
                this.misalignmentModeField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure GyroInitialization {
            get {
                return this.gyroInitializationField;
            }
            set {
                this.gyroInitializationField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure GyroReinitializationDistance {
            get {
                return this.gyroReinitializationDistanceField;
            }
            set {
                this.gyroReinitializationDistanceField = value;
            }
        }
        
        /// <remarks/>
        public bool Switching {
            get {
                return this.switchingField;
            }
            set {
                this.switchingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SwitchingSpecified {
            get {
                return this.switchingFieldSpecified;
            }
            set {
                this.switchingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double NoiseReductionFactor {
            get {
                return this.noiseReductionFactorField;
            }
            set {
                this.noiseReductionFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoiseReductionFactorSpecified {
            get {
                return this.noiseReductionFactorFieldSpecified;
            }
            set {
                this.noiseReductionFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public LengthPerTimeMeasure GyroRunningSpeed {
            get {
                return this.gyroRunningSpeedField;
            }
            set {
                this.gyroRunningSpeedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ErrorModelMisalignmentMode {
        
        /// <remarks/>
        unknown,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class PlaneAngleMeasure {
        
        private PlaneAngleUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PlaneAngleUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum PlaneAngleUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.001 seca")]
        Item0001seca,
        
        /// <remarks/>
        ccgr,
        
        /// <remarks/>
        cgr,
        
        /// <remarks/>
        dega,
        
        /// <remarks/>
        gon,
        
        /// <remarks/>
        krad,
        
        /// <remarks/>
        mila,
        
        /// <remarks/>
        mina,
        
        /// <remarks/>
        Mrad,
        
        /// <remarks/>
        mrad,
        
        /// <remarks/>
        rad,
        
        /// <remarks/>
        rev,
        
        /// <remarks/>
        seca,
        
        /// <remarks/>
        urad,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class LengthPerTimeMeasure {
        
        private LengthPerTimeUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LengthPerTimeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum LengthPerTimeUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 ft/h")]
        Item1000fth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 ft/s")]
        Item1000fts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm/a")]
        cma,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm/s")]
        cms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm/s")]
        dms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/d")]
        ftd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/h")]
        fth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/min")]
        ftmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/ms")]
        ftms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/s")]
        fts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/us")]
        ftus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/a")]
        ina,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/min")]
        inmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/s")]
        ins,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km/h")]
        kmh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km/s")]
        kms,
        
        /// <remarks/>
        knot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/d")]
        md,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/h")]
        mh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/min")]
        mmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/ms")]
        mms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/s")]
        ms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mi/h")]
        mih,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mil/a")]
        mila,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mm/a")]
        mma,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mm/s")]
        mms1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nm/s")]
        nms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("um/s")]
        ums,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class IscwsaSurveyToolOperatingInterval {
        
        private SurveyToolOperatingMode modeField;
        
        private PlaneAngleMeasure startField;
        
        private PlaneAngleMeasure endField;
        
        private LengthPerTimeMeasure speedField;
        
        private TimeMeasure sampleRateField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        public SurveyToolOperatingMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure Start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure End {
            get {
                return this.endField;
            }
            set {
                this.endField = value;
            }
        }
        
        /// <remarks/>
        public LengthPerTimeMeasure Speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure SampleRate {
            get {
                return this.sampleRateField;
            }
            set {
                this.sampleRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class TimeMeasure {
        
        private TimeUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public TimeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum TimeUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/2 ms")]
        Item12ms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("100 ka[t]")]
        Item100kat,
        
        /// <remarks/>
        a,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("a[t]")]
        at,
        
        /// <remarks/>
        ca,
        
        /// <remarks/>
        cs,
        
        /// <remarks/>
        d,
        
        /// <remarks/>
        ds,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ea[t]")]
        Eat,
        
        /// <remarks/>
        fa,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ga[t]")]
        Gat,
        
        /// <remarks/>
        h,
        
        /// <remarks/>
        hs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ka[t]")]
        kat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ma[t]")]
        Mat,
        
        /// <remarks/>
        min,
        
        /// <remarks/>
        ms,
        
        /// <remarks/>
        na,
        
        /// <remarks/>
        ns,
        
        /// <remarks/>
        ps,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ta[t]")]
        Tat,
        
        /// <remarks/>
        us,
        
        /// <remarks/>
        wk,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class IscwsaSurveyToolOperatingCondition {
        
        private string parameterField;
        
        private GenericMeasure minField;
        
        private GenericMeasure maxField;
        
        private string valueField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        public string Parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        public GenericMeasure Min {
            get {
                return this.minField;
            }
            set {
                this.minField = value;
            }
        }
        
        /// <remarks/>
        public GenericMeasure Max {
            get {
                return this.maxField;
            }
            set {
                this.maxField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class GenericMeasure {
        
        private string uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class IscwsaAuthorizationData {
        
        private string authorField;
        
        private string sourceField;
        
        private string authorityField;
        
        private AuthorizationStatus statusField;
        
        private string versionField;
        
        private string commentField;
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string Authority {
            get {
                return this.authorityField;
            }
            set {
                this.authorityField = value;
            }
        }
        
        /// <remarks/>
        public AuthorizationStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum AuthorizationStatus {
        
        /// <remarks/>
        draft,
        
        /// <remarks/>
        authorized,
        
        /// <remarks/>
        superceded,
        
        /// <remarks/>
        withdrawn,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimPerforationsClustersLibrary {
        
        private DataObjectReference clusterField;
        
        private DataObjectReference[] stimPerforationsClusterField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference Cluster {
            get {
                return this.clusterField;
            }
            set {
                this.clusterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StimPerforationsCluster")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference[] StimPerforationsCluster {
            get {
                return this.stimPerforationsClusterField;
            }
            set {
                this.stimPerforationsClusterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class DataObjectReference {
        
        private string contentTypeField;
        
        private string titleField;
        
        private string uuidField;
        
        private string uuidAuthorityField;
        
        private string versionStringField;
        
        /// <remarks/>
        /// <summary>The content type of the referenced element.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("The content type of the referenced element.")]
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reference to an object using its global UID.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}")]
        [System.ComponentModel.DescriptionAttribute("Reference to an object using its global UID.")]
        public string Uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The authority that issued and maintains the uuid of the referenced object. Used mainly in alias context.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The authority that issued and maintains the uuid of the referenced object. Used m" +
            "ainly in alias context.")]
        public string UuidAuthority {
            get {
                return this.uuidAuthorityField;
            }
            set {
                this.uuidAuthorityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Indicates the version of the object which is referenced.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Indicates the version of the object which is referenced.")]
        public string VersionString {
            get {
                return this.versionStringField;
            }
            set {
                this.versionStringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class TO_BE_DELETED_Coordinates {
        
        private string longitudeField;
        
        private string sourceField;
        
        private string datumField;
        
        private string latitudeField;
        
        /// <remarks/>
        /// <summary>Well location longitude</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Well location longitude")]
        public string Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Source of the location data</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Source of the location data")]
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Well location datum</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Well location datum")]
        public string Datum {
            get {
                return this.datumField;
            }
            set {
                this.datumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Well location latitude</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Well location latitude")]
        public string Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class TO_BE_DELETED_InternalCorporateID {
        
        private string sourceCorpField;
        
        private string idField;
        
        private string sourceSystemField;
        
        /// <remarks/>
        /// <summary>Corporate this ID belongs to</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Corporate this ID belongs to")]
        public string SourceCorp {
            get {
                return this.sourceCorpField;
            }
            set {
                this.sourceCorpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>ID in internal corporate system</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("ID in internal corporate system")]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Source system (for instance SAP)</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Source system (for instance SAP)")]
        public string SourceSystem {
            get {
                return this.sourceSystemField;
            }
            set {
                this.sourceSystemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class TO_BE_DELETED_WellIdentification {
        
        private string filterSizeField;
        
        private string nameField;
        
        private string uWIField;
        
        private string leaseNameField;
        
        private string numberField;
        
        private TO_BE_DELETED_InternalCorporateID[] internalIDField;
        
        private TO_BE_DELETED_Coordinates[] geoCoordinatesField;
        
        /// <remarks/>
        /// <summary>Filter size.</summary>
        [System.ComponentModel.DescriptionAttribute("Filter size.")]
        public string FilterSize {
            get {
                return this.filterSizeField;
            }
            set {
                this.filterSizeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of the well</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Name of the well")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Universal Well ID (API number in US)</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Universal Well ID (API number in US)")]
        public string UWI {
            get {
                return this.uWIField;
            }
            set {
                this.uWIField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lease name of the well</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Lease name of the well")]
        public string LeaseName {
            get {
                return this.leaseNameField;
            }
            set {
                this.leaseNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Well Number</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Well Number")]
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InternalID")]
        public TO_BE_DELETED_InternalCorporateID[] InternalID {
            get {
                return this.internalIDField;
            }
            set {
                this.internalIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GeoCoordinates")]
        public TO_BE_DELETED_Coordinates[] GeoCoordinates {
            get {
                return this.geoCoordinatesField;
            }
            set {
                this.geoCoordinatesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimLogLibrary {
        
        private DataObjectReference logField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference Log {
            get {
                return this.logField;
            }
            set {
                this.logField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class RefLibrary {
        
        private string refIDField;
        
        private DataObjectReference[] stimPerforationsClusterField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}")]
        public string RefID {
            get {
                return this.refIDField;
            }
            set {
                this.refIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StimPerforationsCluster")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference[] StimPerforationsCluster {
            get {
                return this.stimPerforationsClusterField;
            }
            set {
                this.stimPerforationsClusterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimJobDiversion {
        
        private string contractorField;
        
        private StimJobDiversionMethodEnum methodField;
        
        private bool methodFieldSpecified;
        
        private string toolDescriptionField;
        
        private LengthMeasure elementSpacingField;
        
        /// <remarks/>
        /// <summary>Name of the diversion contractor.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Name of the diversion contractor.")]
        public string Contractor {
            get {
                return this.contractorField;
            }
            set {
                this.contractorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The diversion method used.</summary>
        [System.ComponentModel.DescriptionAttribute("The diversion method used.")]
        public StimJobDiversionMethodEnum Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MethodSpecified {
            get {
                return this.methodFieldSpecified;
            }
            set {
                this.methodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        public string ToolDescription {
            get {
                return this.toolDescriptionField;
            }
            set {
                this.toolDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure ElementSpacing {
            get {
                return this.elementSpacingField;
            }
            set {
                this.elementSpacingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum StimJobDiversionMethodEnum {
        
        /// <remarks/>
        BallSealer,
        
        /// <remarks/>
        Bands,
        
        /// <remarks/>
        Chemical,
        
        /// <remarks/>
        Fibers,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Packer,
        
        /// <remarks/>
        SolidParticle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Straddle-Packer")]
        StraddlePacker,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimReservoirInterval {
        
        private MeasuredDepthCoord mdLithTopField;
        
        private MeasuredDepthCoord mdLithBottomField;
        
        private PermeabilityRockMeasure lithFormationPermeabilityField;
        
        private PressureMeasure lithYoungsModulusField;
        
        private PressureMeasure lithPorePresField;
        
        private LengthMeasure lithNetPayThicknessField;
        
        private string lithNameField;
        
        private MeasuredDepthCoord mdGrossPayTopField;
        
        private MeasuredDepthCoord mdGrossPayBottomField;
        
        private LengthMeasure grossPayThicknessField;
        
        private LengthMeasure netPayThicknessField;
        
        private PressureMeasure netPayPorePresField;
        
        private IsothermalCompressibilityMeasure netPayFluidCompressibilityField;
        
        private DynamicViscosityMeasure netPayFluidViscosityField;
        
        private string netPayNameField;
        
        private PermeabilityRockMeasure netPayFormationPermeabilityField;
        
        private DimensionlessMeasure lithPoissonsRatioField;
        
        private VolumePerVolumeMeasure netPayFormationPorosityField;
        
        private PermeabilityRockMeasure formationPermeabilityField;
        
        private VolumePerVolumeMeasure formationPorosityField;
        
        private string nameFormationField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        /// <remarks/>
        /// <summary>Measured depth at top of interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at top of interval.")]
        public MeasuredDepthCoord MdLithTop {
            get {
                return this.mdLithTopField;
            }
            set {
                this.mdLithTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at base of interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at base of interval.")]
        public MeasuredDepthCoord MdLithBottom {
            get {
                return this.mdLithBottomField;
            }
            set {
                this.mdLithBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Formation permeability, a measurement of the ability of a fluid to flow  through a rock. Commonly measured in milliDarcys (1m2 = 0.000000000000986923 Darcy).</summary>
        [System.ComponentModel.DescriptionAttribute("Formation permeability, a measurement of the ability of a fluid to flow  through " +
            "a rock. Commonly measured in milliDarcys (1m2 = 0.000000000000986923 Darcy).")]
        public PermeabilityRockMeasure LithFormationPermeability {
            get {
                return this.lithFormationPermeabilityField;
            }
            set {
                this.lithFormationPermeabilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Young's modulus (E) is a measure of the stiffness of an isotropic elastic material. It is also known as the Young modulus, modulus of elasticity, elastic modulus (though Young's modulus is actually one  of several elastic moduli such as the bulk modulus and the shear modulus) or tensile modulus. It is  defined as the ratio of the uniaxial stress over the uniaxial strain.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Young's modulus (E) is a measure of the stiffness of an isotropic elastic material. It is also known as the Young modulus, modulus of elasticity, elastic modulus (though Young's modulus is actually one  of several elastic moduli such as the bulk modulus and the shear modulus) or tensile modulus. It is  defined as the ratio of the uniaxial stress over the uniaxial strain.")]
        public PressureMeasure LithYoungsModulus {
            get {
                return this.lithYoungsModulusField;
            }
            set {
                this.lithYoungsModulusField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Refers to the pressure of fluids held within a soil or rock, in gaps  between particles formation porosity.</summary>
        [System.ComponentModel.DescriptionAttribute("Refers to the pressure of fluids held within a soil or rock, in gaps  between par" +
            "ticles formation porosity.")]
        public PressureMeasure LithPorePres {
            get {
                return this.lithPorePresField;
            }
            set {
                this.lithPorePresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Net pay is computed. It is the thickness of rock that can deliver hydrocarbons  to the wellbore formation.</summary>
        [System.ComponentModel.DescriptionAttribute("Net pay is computed. It is the thickness of rock that can deliver hydrocarbons  t" +
            "o the wellbore formation.")]
        public LengthMeasure LithNetPayThickness {
            get {
                return this.lithNetPayThicknessField;
            }
            set {
                this.lithNetPayThicknessField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A name for the formation lithology.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A name for the formation lithology.")]
        public string LithName {
            get {
                return this.lithNameField;
            }
            set {
                this.lithNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of the top of the formation.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of the top of the formation.")]
        public MeasuredDepthCoord MdGrossPayTop {
            get {
                return this.mdGrossPayTopField;
            }
            set {
                this.mdGrossPayTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of the bottom of the formation.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of the bottom of the formation.")]
        public MeasuredDepthCoord MdGrossPayBottom {
            get {
                return this.mdGrossPayBottomField;
            }
            set {
                this.mdGrossPayBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The total thickness of the interval being treated, whether or  not it is productive.</summary>
        [System.ComponentModel.DescriptionAttribute("The total thickness of the interval being treated, whether or  not it is producti" +
            "ve.")]
        public LengthMeasure GrossPayThickness {
            get {
                return this.grossPayThicknessField;
            }
            set {
                this.grossPayThicknessField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The thickness of the most productive part of the interval.  Net pay is a subset of the gross.</summary>
        [System.ComponentModel.DescriptionAttribute("The thickness of the most productive part of the interval.  Net pay is a subset o" +
            "f the gross.")]
        public LengthMeasure NetPayThickness {
            get {
                return this.netPayThicknessField;
            }
            set {
                this.netPayThicknessField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pore pressure of the net pay.</summary>
        [System.ComponentModel.DescriptionAttribute("The pore pressure of the net pay.")]
        public PressureMeasure NetPayPorePres {
            get {
                return this.netPayPorePresField;
            }
            set {
                this.netPayPorePresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume change of the fluid in the net pay when pressure is applied.</summary>
        [System.ComponentModel.DescriptionAttribute("The volume change of the fluid in the net pay when pressure is applied.")]
        public IsothermalCompressibilityMeasure NetPayFluidCompressibility {
            get {
                return this.netPayFluidCompressibilityField;
            }
            set {
                this.netPayFluidCompressibilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>With respect to the net pay, a measurement of the internal resistance of a fluid to flow against itself. Expressed as the ratio of shear stress to shear rate.</summary>
        [System.ComponentModel.DescriptionAttribute("With respect to the net pay, a measurement of the internal resistance of a fluid " +
            "to flow against itself. Expressed as the ratio of shear stress to shear rate.")]
        public DynamicViscosityMeasure NetPayFluidViscosity {
            get {
                return this.netPayFluidViscosityField;
            }
            set {
                this.netPayFluidViscosityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name used for the net pay zone.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("The name used for the net pay zone.")]
        public string NetPayName {
            get {
                return this.netPayNameField;
            }
            set {
                this.netPayNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The permeability of the net pay.</summary>
        [System.ComponentModel.DescriptionAttribute("The permeability of the net pay.")]
        public PermeabilityRockMeasure NetPayFormationPermeability {
            get {
                return this.netPayFormationPermeabilityField;
            }
            set {
                this.netPayFormationPermeabilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The ratio of the relative contraction strain, or transverse strain (normal to the applied load),  divided by the relative extension strain, or axial strain (in the direction of the applied load).</summary>
        [System.ComponentModel.DescriptionAttribute("The ratio of the relative contraction strain, or transverse strain (normal to the" +
            " applied load),  divided by the relative extension strain, or axial strain (in t" +
            "he direction of the applied load).")]
        public DimensionlessMeasure LithPoissonsRatio {
            get {
                return this.lithPoissonsRatioField;
            }
            set {
                this.lithPoissonsRatioField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Porosity of the net pay formation.</summary>
        [System.ComponentModel.DescriptionAttribute("Porosity of the net pay formation.")]
        public VolumePerVolumeMeasure NetPayFormationPorosity {
            get {
                return this.netPayFormationPorosityField;
            }
            set {
                this.netPayFormationPorosityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Permeability of the formation.</summary>
        [System.ComponentModel.DescriptionAttribute("Permeability of the formation.")]
        public PermeabilityRockMeasure FormationPermeability {
            get {
                return this.formationPermeabilityField;
            }
            set {
                this.formationPermeabilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Porosity of the formation.</summary>
        [System.ComponentModel.DescriptionAttribute("Porosity of the formation.")]
        public VolumePerVolumeMeasure FormationPorosity {
            get {
                return this.formationPorosityField;
            }
            set {
                this.formationPorosityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of the formation.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Name of the formation.")]
        public string NameFormation {
            get {
                return this.nameFormationField;
            }
            set {
                this.nameFormationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class MeasuredDepthCoord {
        
        private LengthUom uomField;
        
        private bool uomFieldSpecified;
        
        private string datumField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uomSpecified {
            get {
                return this.uomFieldSpecified;
            }
            set {
                this.uomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string datum {
            get {
                return this.datumField;
            }
            set {
                this.datumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class PermeabilityRockMeasure {
        
        private PermeabilityRockUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PermeabilityRockUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum PermeabilityRockUom {
        
        /// <remarks/>
        D,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("D[API]")]
        DAPI,
        
        /// <remarks/>
        mD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("TD[API]")]
        TDAPI,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class PressureMeasure {
        
        private PressureUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PressureUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum PressureUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.01 lbf/ft2")]
        Item001lbfft2,
        
        /// <remarks/>
        at,
        
        /// <remarks/>
        atm,
        
        /// <remarks/>
        bar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cmH2O[4degC]")]
        cmH2O4degC,
        
        /// <remarks/>
        cPa,
        
        /// <remarks/>
        dPa,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dyne/cm2")]
        dynecm2,
        
        /// <remarks/>
        EPa,
        
        /// <remarks/>
        fPa,
        
        /// <remarks/>
        GPa,
        
        /// <remarks/>
        hbar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inH2O[39degF]")]
        inH2O39degF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inH2O[60degF]")]
        inH2O60degF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inHg[32degF]")]
        inHg32degF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inHg[60degF]")]
        inHg60degF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf/cm2")]
        kgfcm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf/m2")]
        kgfm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf/mm2")]
        kgfmm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kN/m2")]
        kNm2,
        
        /// <remarks/>
        kPa,
        
        /// <remarks/>
        kpsi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/ft2")]
        lbfft2,
        
        /// <remarks/>
        mbar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mmHg[0degC]")]
        mmHg0degC,
        
        /// <remarks/>
        mPa,
        
        /// <remarks/>
        MPa,
        
        /// <remarks/>
        Mpsi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N/m2")]
        Nm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N/mm2")]
        Nmm2,
        
        /// <remarks/>
        nPa,
        
        /// <remarks/>
        Pa,
        
        /// <remarks/>
        pPa,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonf[UK]/ft2")]
        tonfUKft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonf[US]/ft2")]
        tonfUSft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonf[US]/in2")]
        tonfUSin2,
        
        /// <remarks/>
        torr,
        
        /// <remarks/>
        TPa,
        
        /// <remarks/>
        ubar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("umHg[0degC]")]
        umHg0degC,
        
        /// <remarks/>
        uPa,
        
        /// <remarks/>
        upsi,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class IsothermalCompressibilityMeasure {
        
        private IsothermalCompressibilityUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public IsothermalCompressibilityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum IsothermalCompressibilityUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm3/(kW.h)")]
        dm3kWh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm3/MJ")]
        dm3MJ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/(kW.h)")]
        m3kWh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/J")]
        m3J,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mm3/J")]
        mm3J,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pt[UK]/(hp.h)")]
        ptUKhph,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class DynamicViscosityMeasure {
        
        private DynamicViscosityUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DynamicViscosityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum DynamicViscosityUom {
        
        /// <remarks/>
        cP,
        
        /// <remarks/>
        dP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dyne.s/cm2")]
        dynescm2,
        
        /// <remarks/>
        EP,
        
        /// <remarks/>
        fP,
        
        /// <remarks/>
        GP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf.s/m2")]
        kgfsm2,
        
        /// <remarks/>
        kP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf.s/ft2")]
        lbfsft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf.s/in2")]
        lbfsin2,
        
        /// <remarks/>
        mP,
        
        /// <remarks/>
        MP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mPa.s")]
        mPas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N.s/m2")]
        Nsm2,
        
        /// <remarks/>
        nP,
        
        /// <remarks/>
        P,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pa.s")]
        Pas,
        
        /// <remarks/>
        pP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("psi.s")]
        psis,
        
        /// <remarks/>
        TP,
        
        /// <remarks/>
        uP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class DimensionlessMeasure {
        
        private DimensionlessUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DimensionlessUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum DimensionlessUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        cEuc,
        
        /// <remarks/>
        dEuc,
        
        /// <remarks/>
        EEuc,
        
        /// <remarks/>
        Euc,
        
        /// <remarks/>
        fEuc,
        
        /// <remarks/>
        GEuc,
        
        /// <remarks/>
        kEuc,
        
        /// <remarks/>
        MEuc,
        
        /// <remarks/>
        mEuc,
        
        /// <remarks/>
        nEuc,
        
        /// <remarks/>
        pEuc,
        
        /// <remarks/>
        ppk,
        
        /// <remarks/>
        ppm,
        
        /// <remarks/>
        TEuc,
        
        /// <remarks/>
        uEuc,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class VolumePerVolumeMeasure {
        
        private VolumePerVolumeUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public VolumePerVolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum VolumePerVolumeUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%[vol]")]
        vol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.001 bbl/ft3")]
        Item0001bblft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.001 bbl/m3")]
        Item0001bblm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.001 gal[UK]/bbl")]
        Item0001galUKbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.001 gal[UK]/gal[UK]")]
        Item0001galUKgalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.001 gal[US]/bbl")]
        Item0001galUSbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.001 gal[US]/ft3")]
        Item0001galUSft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.001 gal[US]/gal[US]")]
        Item0001galUSgalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.001 pt[UK]/bbl")]
        Item0001ptUKbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.01 bbl/bbl")]
        Item001bblbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.1 gal[US]/bbl")]
        Item01galUSbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.1 L/bbl")]
        Item01Lbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.1 pt[US]/bbl")]
        Item01ptUSbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 ft3/bbl")]
        Item1000ft3bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 m3/m3")]
        Item1000m3m3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E-6 acre.ft/bbl")]
        Item1E6acreftbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E-6 bbl/ft3")]
        Item1E6bblft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E-6 bbl/m3")]
        Item1E6bblm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E6 bbl/(acre.ft)")]
        Item1E6bblacreft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E6 ft3/(acre.ft)")]
        Item1E6ft3acreft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E6 ft3/bbl")]
        Item1E6ft3bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/(acre.ft)")]
        bblacreft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/bbl")]
        bblbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/ft3")]
        bblft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/m3")]
        bblm3,
        
        /// <remarks/>
        cEuc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/cm3")]
        cm3cm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/L")]
        cm3L,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/m3")]
        cm3m3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm3/m3")]
        dm3m3,
        
        /// <remarks/>
        Euc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/bbl")]
        ft3bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/ft3")]
        ft3ft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[UK]/ft3")]
        galUKft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[US]/bbl")]
        galUSbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[US]/ft3")]
        galUSft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/m3")]
        Lm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/(ha.m)")]
        m3ham,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/bbl")]
        m3bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/m3")]
        m3m3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mL/gal[UK]")]
        mLgalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mL/gal[US]")]
        mLgalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mL/mL")]
        mLmL,
        
        /// <remarks/>
        ppk,
        
        /// <remarks/>
        ppm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ppm[vol]")]
        ppmvol,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class VolumePerLengthMeasure {
        
        private VolumePerLengthUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public VolumePerLengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum VolumePerLengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.01 dm3/km")]
        Item001dm3km,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.01 L/km")]
        Item001Lkm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/ft")]
        bblft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/in")]
        bblin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/mi")]
        bblmi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm3/m")]
        dm3m,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/ft")]
        ft3ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[UK]/mi")]
        galUKmi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[US]/ft")]
        galUSft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[US]/mi")]
        galUSmi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in3/ft")]
        in3ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/m")]
        Lm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/km")]
        m3km,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/m")]
        m3m,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimTubular {
        
        private string typeField;
        
        private LengthMeasure idField;
        
        private LengthMeasure odField;
        
        private MassPerLengthMeasure weightField;
        
        private MdInterval tubularMdIntervalField;
        
        private TvdInterval tubularTvdIntervalField;
        
        private VolumePerLengthMeasure volumeFactorField;
        
        private string[] extensionNameValueField;
        
        /// <remarks/>
        /// <summary>The type of tubular (e.g., casing, tubing, liner, packer, open hole, other).</summary>
        [System.ComponentModel.DescriptionAttribute("The type of tubular (e.g., casing, tubing, liner, packer, open hole, other).")]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The inside diameter of the tubular used.</summary>
        [System.ComponentModel.DescriptionAttribute("The inside diameter of the tubular used.")]
        public LengthMeasure Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The outside diameter of the tubular used.</summary>
        [System.ComponentModel.DescriptionAttribute("The outside diameter of the tubular used.")]
        public LengthMeasure Od {
            get {
                return this.odField;
            }
            set {
                this.odField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The weight per length of the tubular.</summary>
        [System.ComponentModel.DescriptionAttribute("The weight per length of the tubular.")]
        public MassPerLengthMeasure Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth interval over which the tubular was used.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth interval over which the tubular was used.")]
        public MdInterval TubularMdInterval {
            get {
                return this.tubularMdIntervalField;
            }
            set {
                this.tubularMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth interval over which the tubular was used.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth interval over which the tubular was used.")]
        public TvdInterval TubularTvdInterval {
            get {
                return this.tubularTvdIntervalField;
            }
            set {
                this.tubularTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume per length of the tubular.</summary>
        [System.ComponentModel.DescriptionAttribute("The volume per length of the tubular.")]
        public VolumePerLengthMeasure VolumeFactor {
            get {
                return this.volumeFactorField;
            }
            set {
                this.volumeFactorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public string[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class MassPerLengthMeasure {
        
        private MassPerLengthUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public MassPerLengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum MassPerLengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg.m/cm2")]
        kgmcm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/m")]
        kgm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("klbm/in")]
        klbmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/ft")]
        lbmft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mg/in")]
        Mgin,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimFlowPath {
        
        private PressureMeasure avgPmaxPacPresField;
        
        private string frictionFactorOpenHoleField;
        
        private PressureMeasure avgPmaxWeaklinkPresField;
        
        private PressureMeasure breakDownPresField;
        
        private MeasuredDepthCoord bridgePlugMDField;
        
        private ForcePerVolumeMeasure fractureGradientField;
        
        private PressureMeasure kindField;
        
        private PressureMeasure maxPmaxPacPresField;
        
        private PressureMeasure maxPmaxWeaklinkPresField;
        
        private MeasuredDepthCoord packerMDField;
        
        private string frictionFactorPipeField;
        
        private MeasuredDepthCoord tubingBottomMDField;
        
        private StimTubular[] tubularField;
        
        /// <remarks/>
        /// <summary>PMax prediction allows the tool assembly to be designed with expected pressures.  It determines maximum allowable surface pressure and is typically calculated as a single number by which the pressure relief valves are set. This variable is the average of all the pmax pressures calculated for this flow path.</summary>
        [System.ComponentModel.DescriptionAttribute(@"PMax prediction allows the tool assembly to be designed with expected pressures.  It determines maximum allowable surface pressure and is typically calculated as a single number by which the pressure relief valves are set. This variable is the average of all the pmax pressures calculated for this flow path.")]
        public PressureMeasure AvgPmaxPacPres {
            get {
                return this.avgPmaxPacPresField;
            }
            set {
                this.avgPmaxPacPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The friction factor used to compute open hole pressure loss.</summary>
        [System.ComponentModel.DescriptionAttribute("The friction factor used to compute open hole pressure loss.")]
        public string FrictionFactorOpenHole {
            get {
                return this.frictionFactorOpenHoleField;
            }
            set {
                this.frictionFactorOpenHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average allowable pressure for the zone of interest with respect  to the bottomhole assembly during the stimulation services.</summary>
        [System.ComponentModel.DescriptionAttribute("Average allowable pressure for the zone of interest with respect  to the bottomho" +
            "le assembly during the stimulation services.")]
        public PressureMeasure AvgPmaxWeaklinkPres {
            get {
                return this.avgPmaxWeaklinkPresField;
            }
            set {
                this.avgPmaxWeaklinkPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pressure at which the formation broke.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure at which the formation broke.")]
        public PressureMeasure BreakDownPres {
            get {
                return this.breakDownPresField;
            }
            set {
                this.breakDownPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth of a bridge plug.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth of a bridge plug.")]
        public MeasuredDepthCoord BridgePlugMD {
            get {
                return this.bridgePlugMDField;
            }
            set {
                this.bridgePlugMDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The formation fracture gradient for this treatment interval.</summary>
        [System.ComponentModel.DescriptionAttribute("The formation fracture gradient for this treatment interval.")]
        public ForcePerVolumeMeasure FractureGradient {
            get {
                return this.fractureGradientField;
            }
            set {
                this.fractureGradientField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of flow path.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of flow path.")]
        public PressureMeasure Kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>PMax prediction allows the tool assembly to be designed with expected pressures. It determines maximum allowable surface pressure and is typically calculated as a single number by which the pressure relief valves are set. This variable is the maximum of all the pmax pressures calculated for this flow path.</summary>
        [System.ComponentModel.DescriptionAttribute(@"PMax prediction allows the tool assembly to be designed with expected pressures. It determines maximum allowable surface pressure and is typically calculated as a single number by which the pressure relief valves are set. This variable is the maximum of all the pmax pressures calculated for this flow path.")]
        public PressureMeasure MaxPmaxPacPres {
            get {
                return this.maxPmaxPacPresField;
            }
            set {
                this.maxPmaxPacPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum allowable pressure for the zone of interest with respect to the bottomhole assembly during the stimulation services.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum allowable pressure for the zone of interest with respect to the bottomhol" +
            "e assembly during the stimulation services.")]
        public PressureMeasure MaxPmaxWeaklinkPres {
            get {
                return this.maxPmaxWeaklinkPresField;
            }
            set {
                this.maxPmaxWeaklinkPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth of a packer.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth of a packer.")]
        public MeasuredDepthCoord PackerMD {
            get {
                return this.packerMDField;
            }
            set {
                this.packerMDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The friction factor for the pipe, tubing, and/or casing.</summary>
        [System.ComponentModel.DescriptionAttribute("The friction factor for the pipe, tubing, and/or casing.")]
        public string FrictionFactorPipe {
            get {
                return this.frictionFactorPipeField;
            }
            set {
                this.frictionFactorPipeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum measured depth of the tubing used for treatment of a stage.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum measured depth of the tubing used for treatment of a stage.")]
        public MeasuredDepthCoord TubingBottomMD {
            get {
                return this.tubingBottomMDField;
            }
            set {
                this.tubingBottomMDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Tubular")]
        public StimTubular[] Tubular {
            get {
                return this.tubularField;
            }
            set {
                this.tubularField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ForcePerVolumeMeasure {
        
        private ForcePerVolumeUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ForcePerVolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum ForcePerVolumeUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.001 psi/ft")]
        Item0001psift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.01 psi/ft")]
        Item001psift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("atm/ft")]
        atmft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("atm/hm")]
        atmhm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("atm/m")]
        atmm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bar/km")]
        barkm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bar/m")]
        barm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("GPa/cm")]
        GPacm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kPa/hm")]
        kPahm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kPa/m")]
        kPam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/ft3")]
        lbfft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/gal[US]")]
        lbfgalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MPa/m")]
        MPam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N/m3")]
        Nm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pa/m")]
        Pam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("psi/ft")]
        psift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("psi/m")]
        psim,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimFluid {
        
        private string densityField;
        
        private ThermodynamicTemperatureMeasure fluidTempField;
        
        private string gelStrength10MinField;
        
        private string gelStrength10SecField;
        
        private bool isKillFluidField;
        
        private bool isKillFluidFieldSpecified;
        
        private DimensionlessMeasure specificGravityField;
        
        private DynamicViscosityMeasure viscosityField;
        
        private string descriptionField;
        
        private VolumeMeasure concentrationVolumeField;
        
        private string nameField;
        
        private string phField;
        
        private string purposeField;
        
        private StimFluidSubType subtypeField;
        
        private bool subtypeFieldSpecified;
        
        private string supplierField;
        
        private StimFluid typeField;
        
        private VolumeMeasure volumeField;
        
        private StimMaterialQuantity[] materialConcentrationAmountField;
        
        /// <remarks/>
        /// <summary>The density of the fluid.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of the fluid.")]
        public string Density {
            get {
                return this.densityField;
            }
            set {
                this.densityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature of the fluid at surface.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature of the fluid at surface.")]
        public ThermodynamicTemperatureMeasure FluidTemp {
            get {
                return this.fluidTempField;
            }
            set {
                this.fluidTempField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The shear stress measured at low shear rate after a mud has set quiescently for 10 minutes.</summary>
        [System.ComponentModel.DescriptionAttribute("The shear stress measured at low shear rate after a mud has set quiescently for 1" +
            "0 minutes.")]
        public string GelStrength10Min {
            get {
                return this.gelStrength10MinField;
            }
            set {
                this.gelStrength10MinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The shear stress measured at low shear rate after a mud has set quiescently for 10 seconds.</summary>
        [System.ComponentModel.DescriptionAttribute("The shear stress measured at low shear rate after a mud has set quiescently for 1" +
            "0 seconds.")]
        public string GelStrength10Sec {
            get {
                return this.gelStrength10SecField;
            }
            set {
                this.gelStrength10SecField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>If true, this fluid is a kill fluid.</summary>
        [System.ComponentModel.DescriptionAttribute("If true, this fluid is a kill fluid.")]
        public bool IsKillFluid {
            get {
                return this.isKillFluidField;
            }
            set {
                this.isKillFluidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsKillFluidSpecified {
            get {
                return this.isKillFluidFieldSpecified;
            }
            set {
                this.isKillFluidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The specific gravity of the fluid at surface.</summary>
        [System.ComponentModel.DescriptionAttribute("The specific gravity of the fluid at surface.")]
        public DimensionlessMeasure SpecificGravity {
            get {
                return this.specificGravityField;
            }
            set {
                this.specificGravityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Viscosity of stimulation fluid.</summary>
        [System.ComponentModel.DescriptionAttribute("Viscosity of stimulation fluid.")]
        public DynamicViscosityMeasure Viscosity {
            get {
                return this.viscosityField;
            }
            set {
                this.viscosityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The description of the fluid.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("The description of the fluid.")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The base measure for a material concentration.  For example, this might be 1 liter.  Then an additive specified through a material concentration might be 5ml which would indicate that the concentration of the additive is 5ml/liter.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The base measure for a material concentration.  For example, this might be 1 lite" +
            "r.  Then an additive specified through a material concentration might be 5ml whi" +
            "ch would indicate that the concentration of the additive is 5ml/liter.")]
        public VolumeMeasure ConcentrationVolume {
            get {
                return this.concentrationVolumeField;
            }
            set {
                this.concentrationVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the fluid.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("The name of the fluid.")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pH of the fluid.</summary>
        [System.ComponentModel.DescriptionAttribute("The pH of the fluid.")]
        public string PH {
            get {
                return this.phField;
            }
            set {
                this.phField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The purpose of the fluid.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("The purpose of the fluid.")]
        public string Purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The fluid subtypes.</summary>
        [System.ComponentModel.DescriptionAttribute("The fluid subtypes.")]
        public StimFluidSubType Subtype {
            get {
                return this.subtypeField;
            }
            set {
                this.subtypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubtypeSpecified {
            get {
                return this.subtypeFieldSpecified;
            }
            set {
                this.subtypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The supplier of the fluid.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("The supplier of the fluid.")]
        public string Supplier {
            get {
                return this.supplierField;
            }
            set {
                this.supplierField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The fluid types.</summary>
        [System.ComponentModel.DescriptionAttribute("The fluid types.")]
        public StimFluid Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of fluid.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of fluid.")]
        public VolumeMeasure Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MaterialConcentrationAmount")]
        public StimMaterialQuantity[] MaterialConcentrationAmount {
            get {
                return this.materialConcentrationAmountField;
            }
            set {
                this.materialConcentrationAmountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ThermodynamicTemperatureMeasure {
        
        private ThermodynamicTemperatureUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ThermodynamicTemperatureUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum ThermodynamicTemperatureUom {
        
        /// <remarks/>
        degC,
        
        /// <remarks/>
        degF,
        
        /// <remarks/>
        degR,
        
        /// <remarks/>
        K,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class VolumeMeasure {
        
        private VolumeUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public VolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum VolumeUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 bbl")]
        Item1000bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 ft3")]
        Item1000ft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 gal[UK]")]
        Item1000galUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 gal[US]")]
        Item1000galUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 m3")]
        Item1000m3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E-6 gal[US]")]
        Item1E6galUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E12 ft3")]
        Item1E12ft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E6 bbl")]
        Item1E6bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E6 ft3")]
        Item1E6ft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E6 m3")]
        Item1E6m3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E9 bbl")]
        Item1E9bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E9 ft3")]
        Item1E9ft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acre.ft")]
        acreft,
        
        /// <remarks/>
        bbl,
        
        /// <remarks/>
        cm3,
        
        /// <remarks/>
        dm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("floz[UK]")]
        flozUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("floz[US]")]
        flozUS,
        
        /// <remarks/>
        ft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[UK]")]
        galUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[US]")]
        galUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ha.m")]
        ham,
        
        /// <remarks/>
        hL,
        
        /// <remarks/>
        in3,
        
        /// <remarks/>
        km3,
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        m3,
        
        /// <remarks/>
        mi3,
        
        /// <remarks/>
        mL,
        
        /// <remarks/>
        mm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pt[UK]")]
        ptUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pt[US]")]
        ptUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("qt[UK]")]
        qtUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("qt[US]")]
        qtUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("um2.m")]
        um2m,
        
        /// <remarks/>
        yd3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum StimFluidSubType {
        
        /// <remarks/>
        acid,
        
        /// <remarks/>
        @base,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("carbon dioxide")]
        carbondioxide,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("carbon dioxide and nitrogen")]
        carbondioxideandnitrogen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("carbon dioxide and water")]
        carbondioxideandwater,
        
        /// <remarks/>
        condensate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cross-linked gel")]
        crosslinkedgel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crude oil")]
        crudeoil,
        
        /// <remarks/>
        diesel,
        
        /// <remarks/>
        foam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fracturing oil")]
        fracturingoil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fresh water")]
        freshwater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gelled acid")]
        gelledacid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gelled condensate")]
        gelledcondensate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gelled crude")]
        gelledcrude,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gelled diesel")]
        gelleddiesel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gelled oil")]
        gelledoil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gelled salt water")]
        gelledsaltwater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hot condensate")]
        hotcondensate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hot fresh water")]
        hotfreshwater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hot oil")]
        hotoil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hot salt water")]
        hotsaltwater,
        
        /// <remarks/>
        hybrid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("linear gel")]
        lineargel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("liquefied petroleum gas")]
        liquefiedpetroleumgas,
        
        /// <remarks/>
        nitrogen,
        
        /// <remarks/>
        oil,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("produced water")]
        producedwater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("salt water")]
        saltwater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("slick water")]
        slickwater,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimMaterialQuantity {
        
        private float amountField;
        
        private bool amountFieldSpecified;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string refIdField;
        
        private StimMaterialLibrary materialField;
        
        /// <remarks/>
        /// <summary>The quantity of material used.  The unit of measure is specified within the material referenced.</summary>
        [System.ComponentModel.DescriptionAttribute("The quantity of material used.  The unit of measure is specified within the mater" +
            "ial referenced.")]
        public float Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Material ID - equal to AbstractStimMaterial.RefId</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}")]
        [System.ComponentModel.DescriptionAttribute("Material ID - equal to AbstractStimMaterial.RefId")]
        public string RefId {
            get {
                return this.refIdField;
            }
            set {
                this.refIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public StimMaterialLibrary Material {
            get {
                return this.materialField;
            }
            set {
                this.materialField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimMaterialLibrary {
        
        private StimAdditive[] additivesField;
        
        private StimProppantAgent proppantAgentsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Additives")]
        public StimAdditive[] Additives {
            get {
                return this.additivesField;
            }
            set {
                this.additivesField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public StimProppantAgent ProppantAgents {
            get {
                return this.proppantAgentsField;
            }
            set {
                this.proppantAgentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimAdditive : StimMaterial {
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private StimAdditiveKindEnum additiveKindField;
        
        private bool additiveKindFieldSpecified;
        
        private string typeField;
        
        private string codeField;
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Additive type or function.</summary>
        [System.ComponentModel.DescriptionAttribute("Additive type or function.")]
        public StimAdditiveKindEnum AdditiveKind {
            get {
                return this.additiveKindField;
            }
            set {
                this.additiveKindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AdditiveKindSpecified {
            get {
                return this.additiveKindFieldSpecified;
            }
            set {
                this.additiveKindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum StimAdditiveKindEnum {
        
        /// <remarks/>
        Acid,
        
        /// <remarks/>
        Activator,
        
        /// <remarks/>
        Biocide,
        
        /// <remarks/>
        Breaker,
        
        /// <remarks/>
        Breaker_Aid,
        
        /// <remarks/>
        Buffer,
        
        /// <remarks/>
        Clay_Stabilizer,
        
        /// <remarks/>
        Corrosion_Inhibitor,
        
        /// <remarks/>
        Corrosion_Inhibitor_Aid,
        
        /// <remarks/>
        Crosslinker,
        
        /// <remarks/>
        Delaying_Agent,
        
        /// <remarks/>
        Fibers,
        
        /// <remarks/>
        Fluid_Loss_Additive,
        
        /// <remarks/>
        Foamer,
        
        /// <remarks/>
        Friction_Reducer,
        
        /// <remarks/>
        Gelling_Agent,
        
        /// <remarks/>
        Iron_Control_Additive,
        
        /// <remarks/>
        Mutual_Solvent,
        
        /// <remarks/>
        Not_Available,
        
        /// <remarks/>
        Salt,
        
        /// <remarks/>
        Stabilizer,
        
        /// <remarks/>
        Surfactant,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StimAdditive))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StimProppantAgent))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimMaterial {
        
        private StimMaterialKindEnum kindField;
        
        private bool kindFieldSpecified;
        
        private string nameField;
        
        private string refIdField;
        
        private string supplierField;
        
        private string unitOfMeasureField;
        
        /// <remarks/>
        public StimMaterialKindEnum Kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KindSpecified {
            get {
                return this.kindFieldSpecified;
            }
            set {
                this.kindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string RefId {
            get {
                return this.refIdField;
            }
            set {
                this.refIdField = value;
            }
        }
        
        /// <remarks/>
        public string Supplier {
            get {
                return this.supplierField;
            }
            set {
                this.supplierField = value;
            }
        }
        
        /// <remarks/>
        public string UnitOfMeasure {
            get {
                return this.unitOfMeasureField;
            }
            set {
                this.unitOfMeasureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum StimMaterialKindEnum {
        
        /// <remarks/>
        Additive,
        
        /// <remarks/>
        Brine,
        
        /// <remarks/>
        CO2,
        
        /// <remarks/>
        Gel,
        
        /// <remarks/>
        N2,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        ProppantAgent,
        
        /// <remarks/>
        Water,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimProppantAgent : StimMaterial {
        
        private double frictionCoefLaminarField;
        
        private bool frictionCoefLaminarFieldSpecified;
        
        private double frictionCoefTurbulentField;
        
        private bool frictionCoefTurbulentFieldSpecified;
        
        private string meshSizeHighField;
        
        private string meshSizeLowField;
        
        private string unconfinedCompressiveStrengthField;
        
        private StimProppantAgentKindEnum proppantAgentKindField;
        
        private bool proppantAgentKindFieldSpecified;
        
        private StimISO13503_2Properties[] iSO13503_2PropertiesField;
        
        private StimISO13503_5Point[] iSO13503_5PointField;
        
        /// <remarks/>
        /// <summary>Laminar Flow Friction Coefficient.</summary>
        [System.ComponentModel.DescriptionAttribute("Laminar Flow Friction Coefficient.")]
        public double FrictionCoefLaminar {
            get {
                return this.frictionCoefLaminarField;
            }
            set {
                this.frictionCoefLaminarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrictionCoefLaminarSpecified {
            get {
                return this.frictionCoefLaminarFieldSpecified;
            }
            set {
                this.frictionCoefLaminarFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Turbulent Flow Friction Coefficient.</summary>
        [System.ComponentModel.DescriptionAttribute("Turbulent Flow Friction Coefficient.")]
        public double FrictionCoefTurbulent {
            get {
                return this.frictionCoefTurbulentField;
            }
            set {
                this.frictionCoefTurbulentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrictionCoefTurbulentSpecified {
            get {
                return this.frictionCoefTurbulentFieldSpecified;
            }
            set {
                this.frictionCoefTurbulentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>High value of Sieve mesh size - for 40/70 Sand, this value would be 70.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("High value of Sieve mesh size - for 40/70 Sand, this value would be 70.")]
        public string MeshSizeHigh {
            get {
                return this.meshSizeHighField;
            }
            set {
                this.meshSizeHighField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Low value of Sieve mesh size - for 40/70 Sand, this value would be 40.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Low value of Sieve mesh size - for 40/70 Sand, this value would be 40.")]
        public string MeshSizeLow {
            get {
                return this.meshSizeLowField;
            }
            set {
                this.meshSizeLowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unconfined compressive strength of the proppant.</summary>
        [System.ComponentModel.DescriptionAttribute("The unconfined compressive strength of the proppant.")]
        public string UnconfinedCompressiveStrength {
            get {
                return this.unconfinedCompressiveStrengthField;
            }
            set {
                this.unconfinedCompressiveStrengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Proppant type or Function.</summary>
        [System.ComponentModel.DescriptionAttribute("Proppant type or Function.")]
        public StimProppantAgentKindEnum ProppantAgentKind {
            get {
                return this.proppantAgentKindField;
            }
            set {
                this.proppantAgentKindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProppantAgentKindSpecified {
            get {
                return this.proppantAgentKindFieldSpecified;
            }
            set {
                this.proppantAgentKindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ISO13503_2Properties")]
        public StimISO13503_2Properties[] ISO13503_2Properties {
            get {
                return this.iSO13503_2PropertiesField;
            }
            set {
                this.iSO13503_2PropertiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ISO13503_5Point")]
        public StimISO13503_5Point[] ISO13503_5Point {
            get {
                return this.iSO13503_5PointField;
            }
            set {
                this.iSO13503_5PointField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum StimProppantAgentKindEnum {
        
        /// <remarks/>
        Ceramic,
        
        /// <remarks/>
        Not_Available,
        
        /// <remarks/>
        Resin_Coated_Ceramic,
        
        /// <remarks/>
        Resin_Coated_Sand,
        
        /// <remarks/>
        Sand,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimISO13503_2Properties {
        
        private string absoluteDensityField;
        
        private float roundnessField;
        
        private bool roundnessFieldSpecified;
        
        private string acidSolubilityField;
        
        private string apparentDensityField;
        
        private ElectricCurrentDensityMeasure bulkDensityField;
        
        private MassMeasure lossOnIgnitiionField;
        
        private float sphericityField;
        
        private bool sphericityFieldSpecified;
        
        private float turbidityField;
        
        private bool turbidityFieldSpecified;
        
        private ISO13503_2CrushTestData[] crushTestDataField;
        
        private SieveAnalysisData[] sieveAnalysisDataField;
        
        /// <remarks/>
        /// <summary>The density of the particles with no volume considered for space between particles.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of the particles with no volume considered for space between particle" +
            "s.")]
        public string AbsoluteDensity {
            get {
                return this.absoluteDensityField;
            }
            set {
                this.absoluteDensityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Roundness of particles as defined by ISO13503.</summary>
        [System.ComponentModel.DescriptionAttribute("The Roundness of particles as defined by ISO13503.")]
        public float Roundness {
            get {
                return this.roundnessField;
            }
            set {
                this.roundnessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoundnessSpecified {
            get {
                return this.roundnessFieldSpecified;
            }
            set {
                this.roundnessFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The solubility of the proppant particles in acid.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="ENTITY")]
        [System.ComponentModel.DescriptionAttribute("The solubility of the proppant particles in acid.")]
        public string AcidSolubility {
            get {
                return this.acidSolubilityField;
            }
            set {
                this.acidSolubilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>{Definition Needed}</summary>
        [System.ComponentModel.DescriptionAttribute("{Definition Needed}")]
        public string ApparentDensity {
            get {
                return this.apparentDensityField;
            }
            set {
                this.apparentDensityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The bulk density where volume between particles is considered part of the mass/volume computation.</summary>
        [System.ComponentModel.DescriptionAttribute("The bulk density where volume between particles is considered part of the mass/vo" +
            "lume computation.")]
        public ElectricCurrentDensityMeasure BulkDensity {
            get {
                return this.bulkDensityField;
            }
            set {
                this.bulkDensityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Loss of ignition is the amount of material lost in a Loss On Ignition test.</summary>
        [System.ComponentModel.DescriptionAttribute("Loss of ignition is the amount of material lost in a Loss On Ignition test.")]
        public MassMeasure LossOnIgnitiion {
            get {
                return this.lossOnIgnitiionField;
            }
            set {
                this.lossOnIgnitiionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The sphericity of the particles.</summary>
        [System.ComponentModel.DescriptionAttribute("The sphericity of the particles.")]
        public float Sphericity {
            get {
                return this.sphericityField;
            }
            set {
                this.sphericityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SphericitySpecified {
            get {
                return this.sphericityFieldSpecified;
            }
            set {
                this.sphericityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Turbidity is a measure of water clarity how much the material suspended in water decreases the passage of light through the water.  Unit of measure may be Nephelometric Turbidity Unit (NTU), but may vary based upon the detector geometry.</summary>
        [System.ComponentModel.DescriptionAttribute("Turbidity is a measure of water clarity how much the material suspended in water " +
            "decreases the passage of light through the water.  Unit of measure may be Nephel" +
            "ometric Turbidity Unit (NTU), but may vary based upon the detector geometry.")]
        public float Turbidity {
            get {
                return this.turbidityField;
            }
            set {
                this.turbidityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TurbiditySpecified {
            get {
                return this.turbidityFieldSpecified;
            }
            set {
                this.turbidityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CrushTestData")]
        public ISO13503_2CrushTestData[] CrushTestData {
            get {
                return this.crushTestDataField;
            }
            set {
                this.crushTestDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SieveAnalysisData")]
        public SieveAnalysisData[] SieveAnalysisData {
            get {
                return this.sieveAnalysisDataField;
            }
            set {
                this.sieveAnalysisDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ElectricCurrentDensityMeasure {
        
        private ElectricCurrentDensityUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ElectricCurrentDensityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum ElectricCurrentDensityUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A/cm2")]
        Acm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A/ft2")]
        Aft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A/m2")]
        Am2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A/mm2")]
        Amm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mA/cm2")]
        mAcm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mA/ft2")]
        mAft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("uA/cm2")]
        uAcm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("uA/in2")]
        uAin2,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class MassMeasure {
        
        private MassUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public MassUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum MassUom {
        
        /// <remarks/>
        ag,
        
        /// <remarks/>
        cg,
        
        /// <remarks/>
        ct,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cwt[UK]")]
        cwtUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cwt[US]")]
        cwtUS,
        
        /// <remarks/>
        Eg,
        
        /// <remarks/>
        fg,
        
        /// <remarks/>
        g,
        
        /// <remarks/>
        Gg,
        
        /// <remarks/>
        grain,
        
        /// <remarks/>
        hg,
        
        /// <remarks/>
        kg,
        
        /// <remarks/>
        klbm,
        
        /// <remarks/>
        lbm,
        
        /// <remarks/>
        mg,
        
        /// <remarks/>
        Mg,
        
        /// <remarks/>
        ng,
        
        /// <remarks/>
        ozm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ozm[troy]")]
        ozmtroy,
        
        /// <remarks/>
        pg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sack[94lbm]")]
        sack94lbm,
        
        /// <remarks/>
        t,
        
        /// <remarks/>
        Tg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ton[UK]")]
        tonUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ton[US]")]
        tonUS,
        
        /// <remarks/>
        ug,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class ISO13503_2CrushTestData {
        
        private double finesField;
        
        private string stressField;
        
        /// <remarks/>
        /// <summary>Fines measured at a point during a crush test.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Fines measured at a point during a crush test.")]
        public double Fines {
            get {
                return this.finesField;
            }
            set {
                this.finesField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Stress measured at a point during a crush test.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Stress measured at a point during a crush test.")]
        public string Stress {
            get {
                return this.stressField;
            }
            set {
                this.stressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class SieveAnalysisData {
        
        private int meshSizeField;
        
        private string percentRetainedField;
        
        /// <remarks/>
        /// <summary>The mesh size used for a sieve analysis.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The mesh size used for a sieve analysis.")]
        public int MeshSize {
            get {
                return this.meshSizeField;
            }
            set {
                this.meshSizeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Percent of material retained in Sieve Analysis.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Percent of material retained in Sieve Analysis.")]
        public string PercentRetained {
            get {
                return this.percentRetainedField;
            }
            set {
                this.percentRetainedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimISO13503_5Point {
        
        private ElectricConductivityMeasure conductiviyField;
        
        private PermeabilityLengthMeasure permeabilityField;
        
        private string stressField;
        
        /// <remarks/>
        public ElectricConductivityMeasure Conductiviy {
            get {
                return this.conductiviyField;
            }
            set {
                this.conductiviyField = value;
            }
        }
        
        /// <remarks/>
        public PermeabilityLengthMeasure Permeability {
            get {
                return this.permeabilityField;
            }
            set {
                this.permeabilityField = value;
            }
        }
        
        /// <remarks/>
        public string Stress {
            get {
                return this.stressField;
            }
            set {
                this.stressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ElectricConductivityMeasure {
        
        private ElectricConductivityUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ElectricConductivityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum ElectricConductivityUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kS/m")]
        kSm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mS/cm")]
        mScm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mS/m")]
        mSm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("S/m")]
        Sm,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class PermeabilityLengthMeasure {
        
        private PermeabilityLengthUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PermeabilityLengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum PermeabilityLengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("D.ft")]
        Dft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("D.m")]
        Dm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mD.ft")]
        mDft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mD.m")]
        mDm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("TD[API].m")]
        TDAPIm,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimJobStep {
        
        private VolumePerVolumeMeasure avgBaseFluidQualityField;
        
        private StimMaterialQuantity[] avgMaterialUsePerMinuteBottomholeField;
        
        private long ballsUsedField;
        
        private bool ballsUsedFieldSpecified;
        
        private VolumeMeasure endDirtyMaterialPerMinuteField;
        
        private StimMaterialQuantity[] endMaterialUsedPerMinuteBottomholeField;
        
        private VolumeMeasure fluidVolCirculatedField;
        
        private VolumeMeasure fluidVolPumpedField;
        
        private VolumeMeasure fluidVolReturnedField;
        
        private VolumeMeasure fluidVolSqueezedField;
        
        private VolumeMeasure fluidVolWashedField;
        
        private ForcePerVolumeMeasure fractureGradientFinalField;
        
        private PressureMeasure pipeFrictionPressureField;
        
        private VolumeMeasure startDirtyMaterialPerMinuteField;
        
        private VolumePerVolumeMeasure avgCO2BaseFluidQualityField;
        
        private PowerMeasure avgHydraulicPowerField;
        
        private VolumePerVolumeMeasure avgInternalPhaseFractionField;
        
        private StimMaterialQuantity[] avgMaterialUsedPerMinuteField;
        
        private VolumePerVolumeMeasure avgN2BaseFluidQualityField;
        
        private PressureMeasure avgPresBottomholeField;
        
        private PressureMeasure avgPresSurfaceField;
        
        private MassPerVolumeMeasure avgPropConcField;
        
        private MassPerVolumeMeasure avgProppantConcBottomholeField;
        
        private MassPerVolumeMeasure avgProppantConcSurfaceField;
        
        private MassPerVolumeMeasure avgSlurryPropConcField;
        
        private ThermodynamicTemperatureMeasure avgTemperatureField;
        
        private VolumeMeasure avgVolumePerMinuteWellheadField;
        
        private long ballsRecoveredField;
        
        private bool ballsRecoveredFieldSpecified;
        
        private VolumeMeasure baseFluidBypassVolField;
        
        private VolumeMeasure baseFluidVolField;
        
        private string descriptionField;
        
        private string dTimEndField;
        
        private string dTimStartField;
        
        private StimMaterialQuantity[] endMaterialUsedPerMinuteField;
        
        private PressureMeasure endPresBottomholeField;
        
        private PressureMeasure endPresSurfaceField;
        
        private MassPerVolumeMeasure endProppantConcBottomholeField;
        
        private MassPerVolumeMeasure endProppantConcSurfaceField;
        
        private VolumePerTimeMeasure endStdRateSurfaceN2Field;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private VolumeMeasure fluidVolBaseField;
        
        private VolumeMeasure fluidVolSlurryField;
        
        private string frictionFactorField;
        
        private ForcePerVolumeMeasure fractureGradientInitialField;
        
        private string kindField;
        
        private PressureMeasure maxPresSurfaceField;
        
        private MassPerVolumeMeasure maxProppantConcSurfaceField;
        
        private MassPerVolumeMeasure maxSlurryPropConcField;
        
        private VolumeMeasure maxVolumePerMinuteWellheadField;
        
        private string nameField;
        
        private long numberField;
        
        private TimeMeasure pumpTimeField;
        
        private string[] startMaterialUsedPerMinuteField;
        
        private PressureMeasure startPresBottomholeField;
        
        private PressureMeasure startPresSurfaceField;
        
        private MassPerVolumeMeasure startProppantConcBottomholeField;
        
        private PowerMeasure maxHydraulicPowerField;
        
        private MassPerVolumeMeasure startProppantConcSurfaceField;
        
        private MassPerVolumeMeasure maxProppantConcBottomholeField;
        
        private string[] startMaterialUsedPerMinuteBottomHoleField;
        
        private VolumeMeasure wellheadVolField;
        
        private VolumePerTimeMeasure avgSlurryRateField;
        
        private StimMaterialQuantity[] materialUsedField;
        
        private StimMaterialQuantity[] maxMaterialUsedPerMinuteField;
        
        private StimFluid fluidField;
        
        /// <remarks/>
        /// <summary>Base quality percentage of foam.</summary>
        [System.ComponentModel.DescriptionAttribute("Base quality percentage of foam.")]
        public VolumePerVolumeMeasure AvgBaseFluidQuality {
            get {
                return this.avgBaseFluidQualityField;
            }
            set {
                this.avgBaseFluidQualityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average material amount used (pumpted) per minute at bottomhole.</summary>
        [System.Xml.Serialization.XmlElementAttribute("AvgMaterialUsePerMinuteBottomhole")]
        [System.ComponentModel.DescriptionAttribute("Average material amount used (pumpted) per minute at bottomhole.")]
        public StimMaterialQuantity[] AvgMaterialUsePerMinuteBottomhole {
            get {
                return this.avgMaterialUsePerMinuteBottomholeField;
            }
            set {
                this.avgMaterialUsePerMinuteBottomholeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Balls used during execution of the step.</summary>
        [System.ComponentModel.DescriptionAttribute("Balls used during execution of the step.")]
        public long BallsUsed {
            get {
                return this.ballsUsedField;
            }
            set {
                this.ballsUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BallsUsedSpecified {
            get {
                return this.ballsUsedFieldSpecified;
            }
            set {
                this.ballsUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ending dirty fluid pump volume per minute.</summary>
        [System.ComponentModel.DescriptionAttribute("Ending dirty fluid pump volume per minute.")]
        public VolumeMeasure EndDirtyMaterialPerMinute {
            get {
                return this.endDirtyMaterialPerMinuteField;
            }
            set {
                this.endDirtyMaterialPerMinuteField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ending quantity of material used per minute at bottomhole.</summary>
        [System.Xml.Serialization.XmlElementAttribute("EndMaterialUsedPerMinuteBottomhole")]
        [System.ComponentModel.DescriptionAttribute("Ending quantity of material used per minute at bottomhole.")]
        public StimMaterialQuantity[] EndMaterialUsedPerMinuteBottomhole {
            get {
                return this.endMaterialUsedPerMinuteBottomholeField;
            }
            set {
                this.endMaterialUsedPerMinuteBottomholeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid volume circulated.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluid volume circulated.")]
        public VolumeMeasure FluidVolCirculated {
            get {
                return this.fluidVolCirculatedField;
            }
            set {
                this.fluidVolCirculatedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid volume pumped.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluid volume pumped.")]
        public VolumeMeasure FluidVolPumped {
            get {
                return this.fluidVolPumpedField;
            }
            set {
                this.fluidVolPumpedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid volume returned.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluid volume returned.")]
        public VolumeMeasure FluidVolReturned {
            get {
                return this.fluidVolReturnedField;
            }
            set {
                this.fluidVolReturnedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid volume squeezed.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluid volume squeezed.")]
        public VolumeMeasure FluidVolSqueezed {
            get {
                return this.fluidVolSqueezedField;
            }
            set {
                this.fluidVolSqueezedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid volume washed.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluid volume washed.")]
        public VolumeMeasure FluidVolWashed {
            get {
                return this.fluidVolWashedField;
            }
            set {
                this.fluidVolWashedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The fracture gradient at the end time of the step.</summary>
        [System.ComponentModel.DescriptionAttribute("The fracture gradient at the end time of the step.")]
        public ForcePerVolumeMeasure FractureGradientFinal {
            get {
                return this.fractureGradientFinalField;
            }
            set {
                this.fractureGradientFinalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The friction pressure contribution from pipes.</summary>
        [System.ComponentModel.DescriptionAttribute("The friction pressure contribution from pipes.")]
        public PressureMeasure PipeFrictionPressure {
            get {
                return this.pipeFrictionPressureField;
            }
            set {
                this.pipeFrictionPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Starting dirty fluid volume per minute.</summary>
        [System.ComponentModel.DescriptionAttribute("Starting dirty fluid volume per minute.")]
        public VolumeMeasure StartDirtyMaterialPerMinute {
            get {
                return this.startDirtyMaterialPerMinuteField;
            }
            set {
                this.startDirtyMaterialPerMinuteField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Base quality carbon dioxide percent of foam.</summary>
        [System.ComponentModel.DescriptionAttribute("Base quality carbon dioxide percent of foam.")]
        public VolumePerVolumeMeasure AvgCO2BaseFluidQuality {
            get {
                return this.avgCO2BaseFluidQualityField;
            }
            set {
                this.avgCO2BaseFluidQualityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average hydraulic horse power used.</summary>
        [System.ComponentModel.DescriptionAttribute("Average hydraulic horse power used.")]
        public PowerMeasure AvgHydraulicPower {
            get {
                return this.avgHydraulicPowerField;
            }
            set {
                this.avgHydraulicPowerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Internal Gas Phase percentage of foam.</summary>
        [System.ComponentModel.DescriptionAttribute("Internal Gas Phase percentage of foam.")]
        public VolumePerVolumeMeasure AvgInternalPhaseFraction {
            get {
                return this.avgInternalPhaseFractionField;
            }
            set {
                this.avgInternalPhaseFractionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average material user per minute entering the flow stream.</summary>
        [System.Xml.Serialization.XmlElementAttribute("AvgMaterialUsedPerMinute")]
        [System.ComponentModel.DescriptionAttribute("Average material user per minute entering the flow stream.")]
        public StimMaterialQuantity[] AvgMaterialUsedPerMinute {
            get {
                return this.avgMaterialUsedPerMinuteField;
            }
            set {
                this.avgMaterialUsedPerMinuteField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Base quality nitrogen percentage of foam.</summary>
        [System.ComponentModel.DescriptionAttribute("Base quality nitrogen percentage of foam.")]
        public VolumePerVolumeMeasure AvgN2BaseFluidQuality {
            get {
                return this.avgN2BaseFluidQualityField;
            }
            set {
                this.avgN2BaseFluidQualityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average bottomhole pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Average bottomhole pressure.")]
        public PressureMeasure AvgPresBottomhole {
            get {
                return this.avgPresBottomholeField;
            }
            set {
                this.avgPresBottomholeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average surface pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Average surface pressure.")]
        public PressureMeasure AvgPresSurface {
            get {
                return this.avgPresSurfaceField;
            }
            set {
                this.avgPresSurfaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average proppant concentration at the wellhead.</summary>
        [System.ComponentModel.DescriptionAttribute("Average proppant concentration at the wellhead.")]
        public MassPerVolumeMeasure AvgPropConc {
            get {
                return this.avgPropConcField;
            }
            set {
                this.avgPropConcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average proppant concentration bottomhole.</summary>
        [System.ComponentModel.DescriptionAttribute("The average proppant concentration bottomhole.")]
        public MassPerVolumeMeasure AvgProppantConcBottomhole {
            get {
                return this.avgProppantConcBottomholeField;
            }
            set {
                this.avgProppantConcBottomholeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average proppant concentration at the surface.</summary>
        [System.ComponentModel.DescriptionAttribute("The average proppant concentration at the surface.")]
        public MassPerVolumeMeasure AvgProppantConcSurface {
            get {
                return this.avgProppantConcSurfaceField;
            }
            set {
                this.avgProppantConcSurfaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average proppant concentration exiting equipment.</summary>
        [System.ComponentModel.DescriptionAttribute("Average proppant concentration exiting equipment.")]
        public MassPerVolumeMeasure AvgSlurryPropConc {
            get {
                return this.avgSlurryPropConcField;
            }
            set {
                this.avgSlurryPropConcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average fluid temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Average fluid temperature.")]
        public ThermodynamicTemperatureMeasure AvgTemperature {
            get {
                return this.avgTemperatureField;
            }
            set {
                this.avgTemperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average volume per minute at the wellhead.</summary>
        [System.ComponentModel.DescriptionAttribute("Average volume per minute at the wellhead.")]
        public VolumeMeasure AvgVolumePerMinuteWellhead {
            get {
                return this.avgVolumePerMinuteWellheadField;
            }
            set {
                this.avgVolumePerMinuteWellheadField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Balls recovered during execution of the step.</summary>
        [System.ComponentModel.DescriptionAttribute("Balls recovered during execution of the step.")]
        public long BallsRecovered {
            get {
                return this.ballsRecoveredField;
            }
            set {
                this.ballsRecoveredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BallsRecoveredSpecified {
            get {
                return this.ballsRecoveredFieldSpecified;
            }
            set {
                this.ballsRecoveredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Base fluid volume recorded after equipment set to bypass.</summary>
        [System.ComponentModel.DescriptionAttribute("Base fluid volume recorded after equipment set to bypass.")]
        public VolumeMeasure BaseFluidBypassVol {
            get {
                return this.baseFluidBypassVolField;
            }
            set {
                this.baseFluidBypassVolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Base fluid volume entering equipment.</summary>
        [System.ComponentModel.DescriptionAttribute("Base fluid volume entering equipment.")]
        public VolumeMeasure BaseFluidVol {
            get {
                return this.baseFluidVolField;
            }
            set {
                this.baseFluidVolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A short description of the step.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A short description of the step.")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date time of end of the step.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date time of end of the step.")]
        public string DTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date time of start of the step.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date time of start of the step.")]
        public string DTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ending quantity of material used per minute entering the flowstream.</summary>
        [System.Xml.Serialization.XmlElementAttribute("EndMaterialUsedPerMinute")]
        [System.ComponentModel.DescriptionAttribute("Ending quantity of material used per minute entering the flowstream.")]
        public StimMaterialQuantity[] EndMaterialUsedPerMinute {
            get {
                return this.endMaterialUsedPerMinuteField;
            }
            set {
                this.endMaterialUsedPerMinuteField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Final bottomhole pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Final bottomhole pressure.")]
        public PressureMeasure EndPresBottomhole {
            get {
                return this.endPresBottomholeField;
            }
            set {
                this.endPresBottomholeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Final surface pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Final surface pressure.")]
        public PressureMeasure EndPresSurface {
            get {
                return this.endPresSurfaceField;
            }
            set {
                this.endPresSurfaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The final proppant concentration bottomhole.</summary>
        [System.ComponentModel.DescriptionAttribute("The final proppant concentration bottomhole.")]
        public MassPerVolumeMeasure EndProppantConcBottomhole {
            get {
                return this.endProppantConcBottomholeField;
            }
            set {
                this.endProppantConcBottomholeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The final proppant concentration at the surface.</summary>
        [System.ComponentModel.DescriptionAttribute("The final proppant concentration at the surface.")]
        public MassPerVolumeMeasure EndProppantConcSurface {
            get {
                return this.endProppantConcSurfaceField;
            }
            set {
                this.endProppantConcSurfaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Final nitrogen pump rate in volume per time at the surface.</summary>
        [System.ComponentModel.DescriptionAttribute("Final nitrogen pump rate in volume per time at the surface.")]
        public VolumePerTimeMeasure EndStdRateSurfaceN2 {
            get {
                return this.endStdRateSurfaceN2Field;
            }
            set {
                this.endStdRateSurfaceN2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The step volume of the base step.</summary>
        [System.ComponentModel.DescriptionAttribute("The step volume of the base step.")]
        public VolumeMeasure FluidVolBase {
            get {
                return this.fluidVolBaseField;
            }
            set {
                this.fluidVolBaseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume of the slurry (dirty) step.</summary>
        [System.ComponentModel.DescriptionAttribute("The volume of the slurry (dirty) step.")]
        public VolumeMeasure FluidVolSlurry {
            get {
                return this.fluidVolSlurryField;
            }
            set {
                this.fluidVolSlurryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Numeric value used to scale a calculated rheological friction.</summary>
        [System.ComponentModel.DescriptionAttribute("Numeric value used to scale a calculated rheological friction.")]
        public string FrictionFactor {
            get {
                return this.frictionFactorField;
            }
            set {
                this.frictionFactorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The fracture gradient prior at the start time of the step.</summary>
        [System.ComponentModel.DescriptionAttribute("The fracture gradient prior at the start time of the step.")]
        public ForcePerVolumeMeasure FractureGradientInitial {
            get {
                return this.fractureGradientInitialField;
            }
            set {
                this.fractureGradientInitialField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of step.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("The type of step.")]
        public string Kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum pumping pressure on surface.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum pumping pressure on surface.")]
        public PressureMeasure MaxPresSurface {
            get {
                return this.maxPresSurfaceField;
            }
            set {
                this.maxPresSurfaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum proppant concentration at the wellhead.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum proppant concentration at the wellhead.")]
        public MassPerVolumeMeasure MaxProppantConcSurface {
            get {
                return this.maxProppantConcSurfaceField;
            }
            set {
                this.maxProppantConcSurfaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum proppant concentration exiting equipment.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum proppant concentration exiting equipment.")]
        public MassPerVolumeMeasure MaxSlurryPropConc {
            get {
                return this.maxSlurryPropConcField;
            }
            set {
                this.maxSlurryPropConcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum volume per minute at the wellhead.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum volume per minute at the wellhead.")]
        public VolumeMeasure MaxVolumePerMinuteWellhead {
            get {
                return this.maxVolumePerMinuteWellheadField;
            }
            set {
                this.maxVolumePerMinuteWellheadField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A human readable name for the step.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A human readable name for the step.")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Step number.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Step number.")]
        public long Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total pumping time for the step.</summary>
        [System.ComponentModel.DescriptionAttribute("Total pumping time for the step.")]
        public TimeMeasure PumpTime {
            get {
                return this.pumpTimeField;
            }
            set {
                this.pumpTimeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Starting quantity of material used per minute entering the flowstream.</summary>
        [System.Xml.Serialization.XmlElementAttribute("StartMaterialUsedPerMinute")]
        [System.ComponentModel.DescriptionAttribute("Starting quantity of material used per minute entering the flowstream.")]
        public string[] StartMaterialUsedPerMinute {
            get {
                return this.startMaterialUsedPerMinuteField;
            }
            set {
                this.startMaterialUsedPerMinuteField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Starting bottomhole pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Starting bottomhole pressure.")]
        public PressureMeasure StartPresBottomhole {
            get {
                return this.startPresBottomholeField;
            }
            set {
                this.startPresBottomholeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Starting surface pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Starting surface pressure.")]
        public PressureMeasure StartPresSurface {
            get {
                return this.startPresSurfaceField;
            }
            set {
                this.startPresSurfaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The beginning proppant concentration bottomhole.</summary>
        [System.ComponentModel.DescriptionAttribute("The beginning proppant concentration bottomhole.")]
        public MassPerVolumeMeasure StartProppantConcBottomhole {
            get {
                return this.startProppantConcBottomholeField;
            }
            set {
                this.startProppantConcBottomholeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public PowerMeasure MaxHydraulicPower {
            get {
                return this.maxHydraulicPowerField;
            }
            set {
                this.maxHydraulicPowerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The beginning proppant concentration at the surface.</summary>
        [System.ComponentModel.DescriptionAttribute("The beginning proppant concentration at the surface.")]
        public MassPerVolumeMeasure StartProppantConcSurface {
            get {
                return this.startProppantConcSurfaceField;
            }
            set {
                this.startProppantConcSurfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public MassPerVolumeMeasure MaxProppantConcBottomhole {
            get {
                return this.maxProppantConcBottomholeField;
            }
            set {
                this.maxProppantConcBottomholeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Starting quantity of material used per minute at bottomhole.</summary>
        [System.Xml.Serialization.XmlElementAttribute("StartMaterialUsedPerMinuteBottomHole")]
        [System.ComponentModel.DescriptionAttribute("Starting quantity of material used per minute at bottomhole.")]
        public string[] StartMaterialUsedPerMinuteBottomHole {
            get {
                return this.startMaterialUsedPerMinuteBottomHoleField;
            }
            set {
                this.startMaterialUsedPerMinuteBottomHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Slurry volume entering the well.</summary>
        [System.ComponentModel.DescriptionAttribute("Slurry volume entering the well.")]
        public VolumeMeasure WellheadVol {
            get {
                return this.wellheadVolField;
            }
            set {
                this.wellheadVolField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public VolumePerTimeMeasure AvgSlurryRate {
            get {
                return this.avgSlurryRateField;
            }
            set {
                this.avgSlurryRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Material used during the step</summary>
        [System.Xml.Serialization.XmlElementAttribute("MaterialUsed")]
        [System.ComponentModel.DescriptionAttribute("Material used during the step")]
        public StimMaterialQuantity[] MaterialUsed {
            get {
                return this.materialUsedField;
            }
            set {
                this.materialUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MaxMaterialUsedPerMinute")]
        public StimMaterialQuantity[] MaxMaterialUsedPerMinute {
            get {
                return this.maxMaterialUsedPerMinuteField;
            }
            set {
                this.maxMaterialUsedPerMinuteField = value;
            }
        }
        
        /// <remarks/>
        public StimFluid Fluid {
            get {
                return this.fluidField;
            }
            set {
                this.fluidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class PowerMeasure {
        
        private PowerUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PowerUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum PowerUom {
        
        /// <remarks/>
        cW,
        
        /// <remarks/>
        dW,
        
        /// <remarks/>
        EW,
        
        /// <remarks/>
        fW,
        
        /// <remarks/>
        GW,
        
        /// <remarks/>
        hp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hp[elec]")]
        hpelec,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hp[hyd]")]
        hphyd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hp[metric]")]
        hpmetric,
        
        /// <remarks/>
        kW,
        
        /// <remarks/>
        MW,
        
        /// <remarks/>
        mW,
        
        /// <remarks/>
        nW,
        
        /// <remarks/>
        pW,
        
        /// <remarks/>
        tonRefrig,
        
        /// <remarks/>
        TW,
        
        /// <remarks/>
        uW,
        
        /// <remarks/>
        W,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class MassPerVolumeMeasure {
        
        private MassPerVolumeUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public MassPerVolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum MassPerVolumeUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.001 lbm/bbl")]
        Item0001lbmbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.001 lbm/gal[UK]")]
        Item0001lbmgalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.001 lbm/gal[US]")]
        Item0001lbmgalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.01 grain/ft3")]
        Item001grainft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.1 lbm/bbl")]
        Item01lbmbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10 Mg/m3")]
        Item10Mgm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/cm3")]
        gcm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/dm3")]
        gdm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/gal[UK]")]
        ggalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/gal[US]")]
        ggalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/L")]
        gL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/m3")]
        gm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("grain/ft3")]
        grainft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("grain/gal[US]")]
        graingalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/dm3")]
        kgdm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/L")]
        kgL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/m3")]
        kgm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/bbl")]
        lbmbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/ft3")]
        lbmft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/gal[UK]")]
        lbmgalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/gal[US]")]
        lbmgalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/in3")]
        lbmin3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/dm3")]
        mgdm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/gal[US]")]
        mggalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/L")]
        mgL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/m3")]
        mgm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mg/m3")]
        Mgm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("t/m3")]
        tm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ug/cm3")]
        ugcm3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class VolumePerTimeMeasure {
        
        private VolumePerTimeUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public VolumePerTimeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum VolumePerTimeUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/30 cm3/min")]
        Item130cm3min,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 bbl/d")]
        Item1000bbld,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 ft3/d")]
        Item1000ft3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 m3/d")]
        Item1000m3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 m3/h")]
        Item1000m3h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E6 bbl/d")]
        Item1E6bbld,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E6 ft3/d")]
        Item1E6ft3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E6 m3/d")]
        Item1E6m3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/d")]
        bbld,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/h")]
        bblh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/min")]
        bblmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/h")]
        cm3h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/min")]
        cm3min,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/s")]
        cm3s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm3/s")]
        dm3s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/d")]
        ft3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/h")]
        ft3h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/min")]
        ft3min,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/s")]
        ft3s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[UK]/d")]
        galUKd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[UK]/h")]
        galUKh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[UK]/min")]
        galUKmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[US]/d")]
        galUSd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[US]/h")]
        galUSh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[US]/min")]
        galUSmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/h")]
        Lh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/min")]
        Lmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/s")]
        Ls,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/d")]
        m3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/h")]
        m3h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/min")]
        m3min,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/s")]
        m3s,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimEvent {
        
        private long numberField;
        
        private string dTimField;
        
        private string commentField;
        
        private long numStepField;
        
        private bool numStepFieldSpecified;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        /// <remarks/>
        /// <summary>Event number.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Event number.")]
        public long Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date time of this event.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date time of this event.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A short description of the event.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A short description of the event.")]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Step number - use to reference an existing job step entry.</summary>
        [System.ComponentModel.DescriptionAttribute("Step number - use to reference an existing job step entry.")]
        public long NumStep {
            get {
                return this.numStepField;
            }
            set {
                this.numStepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumStepSpecified {
            get {
                return this.numStepFieldSpecified;
            }
            set {
                this.numStepFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimShutInPressure {
        
        private PressureMeasure pressureField;
        
        private TimeMeasure timeAfterShutinField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        /// <remarks/>
        /// <summary>The shut in pressure.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The shut in pressure.")]
        public PressureMeasure Pressure {
            get {
                return this.pressureField;
            }
            set {
                this.pressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time span after shutin at which the pressure was measured.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The time span after shutin at which the pressure was measured.")]
        public TimeMeasure TimeAfterShutin {
            get {
                return this.timeAfterShutinField;
            }
            set {
                this.timeAfterShutinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimPumpFlowBackTest {
        
        private string dTimEndField;
        
        private VolumeMeasure flowBackVolumeField;
        
        private string dTimStartField;
        
        private TimeMeasure fractureCloseDurationField;
        
        private PressureMeasure presCasingField;
        
        private PressureMeasure presTubingField;
        
        private PressureMeasure fractureClosePresField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private StimTestStep[] stepField;
        
        /// <remarks/>
        /// <summary>Start time for the test.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Start time for the test.")]
        public string DTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total volume recovered during flow back test.</summary>
        [System.ComponentModel.DescriptionAttribute("Total volume recovered during flow back test.")]
        public VolumeMeasure FlowBackVolume {
            get {
                return this.flowBackVolumeField;
            }
            set {
                this.flowBackVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Start time for the test.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Start time for the test.")]
        public string DTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time required for the fracture width to become zero.</summary>
        [System.ComponentModel.DescriptionAttribute("The time required for the fracture width to become zero.")]
        public TimeMeasure FractureCloseDuration {
            get {
                return this.fractureCloseDurationField;
            }
            set {
                this.fractureCloseDurationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Casing pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Casing pressure.")]
        public PressureMeasure PresCasing {
            get {
                return this.presCasingField;
            }
            set {
                this.presCasingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Tubing pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Tubing pressure.")]
        public PressureMeasure PresTubing {
            get {
                return this.presTubingField;
            }
            set {
                this.presTubingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pressure when the fracture width becomes zero.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure when the fracture width becomes zero.")]
        public PressureMeasure FractureClosePres {
            get {
                return this.fractureClosePresField;
            }
            set {
                this.fractureClosePresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Step")]
        public StimTestStep[] Step {
            get {
                return this.stepField;
            }
            set {
                this.stepField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimTestStep {
        
        private string dTimField;
        
        private VolumeMeasure flowbackVolumeField;
        
        private VolumeMeasure flowbackVolumePerMinuteField;
        
        private long numberField;
        
        private VolumeFlowRatePerVolumeFlowRateMeasure bottomholeRateField;
        
        private PressureMeasure presField;
        
        private PressureMeasure pipeFrictionField;
        
        private PressureMeasure entryFrictionField;
        
        private PressureMeasure perfFrictionField;
        
        private PressureMeasure nearWellboreFrictionField;
        
        private VolumeFlowRatePerVolumeFlowRateMeasure surfaceRateField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        /// <remarks/>
        /// <summary>Time stamp of the pressure measurement.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Time stamp of the pressure measurement.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of flowback since start of test.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of flowback since start of test.")]
        public VolumeMeasure FlowbackVolume {
            get {
                return this.flowbackVolumeField;
            }
            set {
                this.flowbackVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Flowback Rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Flowback Rate.")]
        public VolumeMeasure FlowbackVolumePerMinute {
            get {
                return this.flowbackVolumePerMinuteField;
            }
            set {
                this.flowbackVolumePerMinuteField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of the step. Identifies the step within the step down test.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The number of the step. Identifies the step within the step down test.")]
        public long Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bottomhole flow rate for the specific step.</summary>
        [System.ComponentModel.DescriptionAttribute("Bottomhole flow rate for the specific step.")]
        public VolumeFlowRatePerVolumeFlowRateMeasure BottomholeRate {
            get {
                return this.bottomholeRateField;
            }
            set {
                this.bottomholeRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Surface pressure measured for the specific step.</summary>
        [System.ComponentModel.DescriptionAttribute("Surface pressure measured for the specific step.")]
        public PressureMeasure Pres {
            get {
                return this.presField;
            }
            set {
                this.presField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calculated pipe friction for the specific step.</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated pipe friction for the specific step.")]
        public PressureMeasure PipeFriction {
            get {
                return this.pipeFrictionField;
            }
            set {
                this.pipeFrictionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calculated entry friction accounting for perforation and near  wellbore restrictions for the specific step.</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated entry friction accounting for perforation and near  wellbore restricti" +
            "ons for the specific step.")]
        public PressureMeasure EntryFriction {
            get {
                return this.entryFrictionField;
            }
            set {
                this.entryFrictionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calculated perforation friction for the specific step.</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated perforation friction for the specific step.")]
        public PressureMeasure PerfFriction {
            get {
                return this.perfFrictionField;
            }
            set {
                this.perfFrictionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calculated Near WellBore friction loss.</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated Near WellBore friction loss.")]
        public PressureMeasure NearWellboreFriction {
            get {
                return this.nearWellboreFrictionField;
            }
            set {
                this.nearWellboreFrictionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Surface rate entering the well for the specific step.</summary>
        [System.ComponentModel.DescriptionAttribute("Surface rate entering the well for the specific step.")]
        public VolumeFlowRatePerVolumeFlowRateMeasure SurfaceRate {
            get {
                return this.surfaceRateField;
            }
            set {
                this.surfaceRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class VolumeFlowRatePerVolumeFlowRateMeasure {
        
        private VolumeFlowRatePerVolumeFlowRateUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public VolumeFlowRatePerVolumeFlowRateUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum VolumeFlowRatePerVolumeFlowRateUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("(bbl/d)/(bbl/d)")]
        bbldbbld,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("(m3/d)/(m3/d)")]
        m3dm3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("(m3/s)/(m3/s)")]
        m3sm3s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E6 (ft3/d)/(bbl/d)")]
        Item1E6ft3dbbld,
        
        /// <remarks/>
        Euc,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimPressureFlowRate {
        
        private PressureMeasure presField;
        
        private VolumeFlowRatePerVolumeFlowRateMeasure bottomholeRateField;
        
        private string[] extensionNameValueField;
        
        /// <remarks/>
        /// <summary>The pressure of the step test.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure of the step test.")]
        public PressureMeasure Pres {
            get {
                return this.presField;
            }
            set {
                this.presField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The flow of the fluid at the bottomhole.</summary>
        [System.ComponentModel.DescriptionAttribute("The flow of the fluid at the bottomhole.")]
        public VolumeFlowRatePerVolumeFlowRateMeasure BottomholeRate {
            get {
                return this.bottomholeRateField;
            }
            set {
                this.bottomholeRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public string[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimStepTest {
        
        private PressureMeasure fractureExtensionPresField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private StimPressureFlowRate[] presMeasurementField;
        
        /// <remarks/>
        /// <summary>The pressure necessary to extend the fracture once initiated.  The fracture extension pressure may rise slightly with increasing fracture length and/or  height because of friction pressure drop down the length of the fracture.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure necessary to extend the fracture once initiated.  The fracture exten" +
            "sion pressure may rise slightly with increasing fracture length and/or  height b" +
            "ecause of friction pressure drop down the length of the fracture.")]
        public PressureMeasure FractureExtensionPres {
            get {
                return this.fractureExtensionPresField;
            }
            set {
                this.fractureExtensionPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pressure and fluid rate data reading.</summary>
        [System.Xml.Serialization.XmlElementAttribute("PresMeasurement")]
        [System.ComponentModel.DescriptionAttribute("A pressure and fluid rate data reading.")]
        public StimPressureFlowRate[] PresMeasurement {
            get {
                return this.presMeasurementField;
            }
            set {
                this.presMeasurementField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimStepDownTest {
        
        private PressureMeasure initialShutinPresField;
        
        private PermeabilityRockMeasure bottomholeFluidDensityField;
        
        private LengthMeasure diameterEntryHoleField;
        
        private long perforationCountField;
        
        private bool perforationCountFieldSpecified;
        
        private string dischargeCoefficientField;
        
        private string effectivePerfsField;
        
        private StimTestStep[] stepField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        /// <remarks/>
        /// <summary>The initial shutin pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The initial shutin pressure.")]
        public PressureMeasure InitialShutinPres {
            get {
                return this.initialShutinPresField;
            }
            set {
                this.initialShutinPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of the fluid at the bottom of the hole adjusting for bottomhole  temperature and pressure during the step test.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of the fluid at the bottom of the hole adjusting for bottomhole  temp" +
            "erature and pressure during the step test.")]
        public PermeabilityRockMeasure BottomholeFluidDensity {
            get {
                return this.bottomholeFluidDensityField;
            }
            set {
                this.bottomholeFluidDensityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of the injection point or perforation.</summary>
        [System.ComponentModel.DescriptionAttribute("Diameter of the injection point or perforation.")]
        public LengthMeasure DiameterEntryHole {
            get {
                return this.diameterEntryHoleField;
            }
            set {
                this.diameterEntryHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of perforations in the interval being tested.</summary>
        [System.ComponentModel.DescriptionAttribute("The number of perforations in the interval being tested.")]
        public long PerforationCount {
            get {
                return this.perforationCountField;
            }
            set {
                this.perforationCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PerforationCountSpecified {
            get {
                return this.perforationCountFieldSpecified;
            }
            set {
                this.perforationCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A coefficient used in the equation for calculation of pressure  drop across a perforation set.</summary>
        [System.ComponentModel.DescriptionAttribute("A coefficient used in the equation for calculation of pressure  drop across a per" +
            "foration set.")]
        public string DischargeCoefficient {
            get {
                return this.dischargeCoefficientField;
            }
            set {
                this.dischargeCoefficientField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of perforations in the interval being tested calculated  to be open to injection determined during the step down test.</summary>
        [System.ComponentModel.DescriptionAttribute("The number of perforations in the interval being tested calculated  to be open to" +
            " injection determined during the step down test.")]
        public string EffectivePerfs {
            get {
                return this.effectivePerfsField;
            }
            set {
                this.effectivePerfsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The data related to a particular step in the step down test.</summary>
        [System.Xml.Serialization.XmlElementAttribute("Step")]
        [System.ComponentModel.DescriptionAttribute("The data related to a particular step in the step down test.")]
        public StimTestStep[] Step {
            get {
                return this.stepField;
            }
            set {
                this.stepField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimFetTest {
        
        private StimAnalysisMethod[] analysisMethodField;
        
        private ForcePerVolumeMeasure fractureGradientField;
        
        private string dTimStartField;
        
        private string dTimEndField;
        
        private TimeMeasure endPdlDurationField;
        
        private TimeMeasure fractureCloseDurationField;
        
        private PressureMeasure fractureClosePresField;
        
        private PressureMeasure fractureExtensionPresField;
        
        private PressureMeasure netPresField;
        
        private PressureMeasure porePresField;
        
        private PressureMeasure pseudoRadialPresField;
        
        private LengthMeasure fractureLengthField;
        
        private LengthMeasure fractureWidthField;
        
        private VolumePerVolumeMeasure fluidEfficiencyField;
        
        private string pdlCoefField;
        
        private PermeabilityRockMeasure residualPermeabilityField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        /// <remarks/>
        /// <summary>An analysis method used for this FET test.</summary>
        [System.Xml.Serialization.XmlElementAttribute("AnalysisMethod")]
        [System.ComponentModel.DescriptionAttribute("An analysis method used for this FET test.")]
        public StimAnalysisMethod[] AnalysisMethod {
            get {
                return this.analysisMethodField;
            }
            set {
                this.analysisMethodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The fracture gradient.</summary>
        [System.ComponentModel.DescriptionAttribute("The fracture gradient.")]
        public ForcePerVolumeMeasure FractureGradient {
            get {
                return this.fractureGradientField;
            }
            set {
                this.fractureGradientField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Start time for the fluid efficiency test (FET).</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Start time for the fluid efficiency test (FET).")]
        public string DTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>End time for the fluid efficiency test.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("End time for the fluid efficiency test.")]
        public string DTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The end of the pressure dependent leakoff portion of the fluid efficiency test.</summary>
        [System.ComponentModel.DescriptionAttribute("The end of the pressure dependent leakoff portion of the fluid efficiency test.")]
        public TimeMeasure EndPdlDuration {
            get {
                return this.endPdlDurationField;
            }
            set {
                this.endPdlDurationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time at which the fracture effectively closes without proppant in place.</summary>
        [System.ComponentModel.DescriptionAttribute("The time at which the fracture effectively closes without proppant in place.")]
        public TimeMeasure FractureCloseDuration {
            get {
                return this.fractureCloseDurationField;
            }
            set {
                this.fractureCloseDurationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pressure at which the fracture effectively closes without proppant in place.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure at which the fracture effectively closes without proppant in place.")]
        public PressureMeasure FractureClosePres {
            get {
                return this.fractureClosePresField;
            }
            set {
                this.fractureClosePresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The fracture pressure limit for an unfractured formation is the fracture initiation pressure. This is typically considered the upper bound for the minimum horizontal stress or closure pressure. A step rate test is used to determine the fracture extension pressure.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The fracture pressure limit for an unfractured formation is the fracture initiation pressure. This is typically considered the upper bound for the minimum horizontal stress or closure pressure. A step rate test is used to determine the fracture extension pressure.")]
        public PressureMeasure FractureExtensionPres {
            get {
                return this.fractureExtensionPresField;
            }
            set {
                this.fractureExtensionPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The difference between the fracture extension pressure and the pressure that  exists in the fracture.</summary>
        [System.ComponentModel.DescriptionAttribute("The difference between the fracture extension pressure and the pressure that  exi" +
            "sts in the fracture.")]
        public PressureMeasure NetPres {
            get {
                return this.netPresField;
            }
            set {
                this.netPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pressure of the liquids in the formation pores.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure of the liquids in the formation pores.")]
        public PressureMeasure PorePres {
            get {
                return this.porePresField;
            }
            set {
                this.porePresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Horner plot is used to determine if pseudo-radial flow developed during pressure decline.  If a semi-log straight line is observed and the line can be extrapolated to a reasonable value of reservoir pressure, radial or pseudo-radial flow may be affecting the decline behavior.  This suggests that the fracture is already closed and that data beyond the point of influence  need not be considered in the evaluation of closure.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The Horner plot is used to determine if pseudo-radial flow developed during pressure decline.  If a semi-log straight line is observed and the line can be extrapolated to a reasonable value of reservoir pressure, radial or pseudo-radial flow may be affecting the decline behavior.  This suggests that the fracture is already closed and that data beyond the point of influence  need not be considered in the evaluation of closure.")]
        public PressureMeasure PseudoRadialPres {
            get {
                return this.pseudoRadialPresField;
            }
            set {
                this.pseudoRadialPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fracture length is the length of the fracture tip to tip; fracture half length,  the length of one wing of a fracture from the wellbore to the tip.</summary>
        [System.ComponentModel.DescriptionAttribute("Fracture length is the length of the fracture tip to tip; fracture half length,  " +
            "the length of one wing of a fracture from the wellbore to the tip.")]
        public LengthMeasure FractureLength {
            get {
                return this.fractureLengthField;
            }
            set {
                this.fractureLengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The width of a fracture at the wellbore. Hydraulic frac width is  generated by frac fluid viscosity and/or pump rate (i.e., horsepower).</summary>
        [System.ComponentModel.DescriptionAttribute("The width of a fracture at the wellbore. Hydraulic frac width is  generated by fr" +
            "ac fluid viscosity and/or pump rate (i.e., horsepower).")]
        public LengthMeasure FractureWidth {
            get {
                return this.fractureWidthField;
            }
            set {
                this.fractureWidthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A measurement, derived from a data frac, of the efficiency of a particular fluid in creating fracture area on a particular formation at a set of conditions.</summary>
        [System.ComponentModel.DescriptionAttribute("A measurement, derived from a data frac, of the efficiency of a particular fluid " +
            "in creating fracture area on a particular formation at a set of conditions.")]
        public VolumePerVolumeMeasure FluidEfficiency {
            get {
                return this.fluidEfficiencyField;
            }
            set {
                this.fluidEfficiencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pressure dependent leakoff coefficient.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure dependent leakoff coefficient.")]
        public string PdlCoef {
            get {
                return this.pdlCoefField;
            }
            set {
                this.pdlCoefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>That permeability which remains after a fractured formation has closed, allowing the  the formation fracture face to be pressurized before the fracture is mechanically reopened.</summary>
        [System.ComponentModel.DescriptionAttribute("That permeability which remains after a fractured formation has closed, allowing " +
            "the  the formation fracture face to be pressurized before the fracture is mechan" +
            "ically reopened.")]
        public PermeabilityRockMeasure ResidualPermeability {
            get {
                return this.residualPermeabilityField;
            }
            set {
                this.residualPermeabilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum StimAnalysisMethod {
        
        /// <remarks/>
        average,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("delta pressure over g-time")]
        deltapressureovergtime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("delta pressure over linear time")]
        deltapressureoverlineartime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("delta pressure over radial time")]
        deltapressureoverradialtime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gdk 2-d")]
        gdk2d,
        
        /// <remarks/>
        horner,
        
        /// <remarks/>
        linear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("log-log")]
        loglog,
        
        /// <remarks/>
        nolte,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pdl coefficient")]
        pdlcoefficient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("perkins and kern 2-d")]
        perkinsandkern2d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("radial 2-d")]
        radial2d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("square root")]
        squareroot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("third-party software")]
        thirdpartysoftware,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class VolumetricThermalExpansionMeasure {
        
        private VolumetricThermalExpansionUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public VolumetricThermalExpansionUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum VolumetricThermalExpansionUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/deltaC")]
        Item1deltaC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/deltaF")]
        Item1deltaF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/deltaK")]
        Item1deltaK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/deltaR")]
        Item1deltaR,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E-6 m3/(m3.deltaC)")]
        Item1E6m3m3deltaC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E-6 m3/(m3.deltaF)")]
        Item1E6m3m3deltaF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/(m3.deltaK)")]
        m3m3deltaK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ppm[vol]/deltaC")]
        ppmvoldeltaC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ppm[vol]/deltaF")]
        ppmvoldeltaF,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ThermalConductivityMeasure {
        
        private ThermalConductivityUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ThermalConductivityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum ThermalConductivityUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Btu[IT]/(h.ft.deltaF)")]
        BtuIThftdeltaF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cal[th]/(h.cm.deltaC)")]
        calthhcmdeltaC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cal[th]/(s.cm.deltaC)")]
        calthscmdeltaC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kcal[th]/(h.m.deltaC)")]
        kcalthhmdeltaC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("W/(m.deltaK)")]
        WmdeltaK,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class SpecificHeatCapacityMeasure {
        
        private SpecificHeatCapacityUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public SpecificHeatCapacityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum SpecificHeatCapacityUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Btu[IT]/(lbm.deltaF)")]
        BtuITlbmdeltaF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Btu[IT]/(lbm.deltaR)")]
        BtuITlbmdeltaR,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cal[th]/(g.deltaK)")]
        calthgdeltaK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("J/(g.deltaK)")]
        JgdeltaK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("J/(kg.deltaK)")]
        JkgdeltaK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kcal[th]/(kg.deltaC)")]
        kcalthkgdeltaC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kJ/(kg.deltaK)")]
        kJkgdeltaK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kW.h/(kg.deltaC)")]
        kWhkgdeltaC,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StimPdatSession {
        
        private LengthMeasure chokeSizeField;
        
        private string nameField;
        
        private string descriptionField;
        
        private long numberField;
        
        private bool numberFieldSpecified;
        
        private string dTimPumpOnField;
        
        private string dTimPumpOffField;
        
        private string dTimWellShutinField;
        
        private string dTimFractureCloseField;
        
        private TimeMeasure pumpDurationField;
        
        private PressureMeasure avgBottomholeTreatmentPresField;
        
        private PressureMeasure bottomholeHydrostaticPresField;
        
        private PressureMeasure bubblePointPresField;
        
        private PressureMeasure fractureClosePresField;
        
        private PressureMeasure frictionPresField;
        
        private PressureMeasure initialShutinPresField;
        
        private PressureMeasure porePresField;
        
        private VolumeFlowRatePerVolumeFlowRateMeasure avgBottomholeTreatmentRateField;
        
        private MassPerVolumeMeasure fluidDensityField;
        
        private VolumeMeasure baseFluidVolField;
        
        private VolumeMeasure wellboreVolumeField;
        
        private MeasuredDepthCoord mdSurfaceField;
        
        private MeasuredDepthCoord mdBottomholeField;
        
        private MeasuredDepthCoord mdMidPerforationField;
        
        private WellVerticalDepthCoord tvdMidPerforationField;
        
        private ThermodynamicTemperatureMeasure surfaceTemperatureField;
        
        private ThermodynamicTemperatureMeasure bottomholeTemperatureField;
        
        private ThermodynamicTemperatureMeasure surfaceFluidTemperatureField;
        
        private IsothermalCompressibilityMeasure fluidCompressibilityField;
        
        private IsothermalCompressibilityMeasure reservoirTotalCompressibilityField;
        
        private string fluidNprimeFactorField;
        
        private string fluidKprimeFactorField;
        
        private SpecificHeatCapacityMeasure fluidSpecificHeatField;
        
        private ThermalConductivityMeasure fluidThermalConductivityField;
        
        private VolumetricThermalExpansionMeasure fluidThermalExpansionCoefficientField;
        
        private VolumePerVolumeMeasure fluidEfficiencyField;
        
        private VolumePerVolumeMeasure foamQualityField;
        
        private VolumePerVolumeMeasure percentPadField;
        
        private long stageNumberField;
        
        private bool stageNumberFieldSpecified;
        
        private bool temperatureCorrectionAppliedField;
        
        private bool temperatureCorrectionAppliedFieldSpecified;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private StimFetTest[] fluidEfficiencyTestField;
        
        private StimStepDownTest[] stepDownTestField;
        
        private StimStepTest[] stepRateTestField;
        
        private StimPumpFlowBackTest[] pumpFlowBackTestField;
        
        /// <remarks/>
        /// <summary>The size of the choke used during flow back test.</summary>
        [System.ComponentModel.DescriptionAttribute("The size of the choke used during flow back test.")]
        public LengthMeasure ChokeSize {
            get {
                return this.chokeSizeField;
            }
            set {
                this.chokeSizeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the session.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the session.")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A description of the session.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A description of the session.")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of this pumping diagnostics session.</summary>
        [System.ComponentModel.DescriptionAttribute("The number of this pumping diagnostics session.")]
        public long Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberSpecified {
            get {
                return this.numberFieldSpecified;
            }
            set {
                this.numberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time pumping began.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The date and time pumping began.")]
        public string DTimPumpOn {
            get {
                return this.dTimPumpOnField;
            }
            set {
                this.dTimPumpOnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time pumping ended.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The date and time pumping ended.")]
        public string DTimPumpOff {
            get {
                return this.dTimPumpOffField;
            }
            set {
                this.dTimPumpOffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time at which a well ceases flowing and the valves are closed.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The date and time at which a well ceases flowing and the valves are closed.")]
        public string DTimWellShutin {
            get {
                return this.dTimWellShutinField;
            }
            set {
                this.dTimWellShutinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time when the fluid in the fracture is completely leaked off  into the formation and the fracture closes on its faces.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The date and time when the fluid in the fracture is completely leaked off  into t" +
            "he formation and the fracture closes on its faces.")]
        public string DTimFractureClose {
            get {
                return this.dTimFractureCloseField;
            }
            set {
                this.dTimFractureCloseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time between the shutin time and the pump on time.</summary>
        [System.ComponentModel.DescriptionAttribute("The time between the shutin time and the pump on time.")]
        public TimeMeasure PumpDuration {
            get {
                return this.pumpDurationField;
            }
            set {
                this.pumpDurationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average bottomhole treatment pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Average bottomhole treatment pressure.")]
        public PressureMeasure AvgBottomholeTreatmentPres {
            get {
                return this.avgBottomholeTreatmentPresField;
            }
            set {
                this.avgBottomholeTreatmentPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bottomhole hydrostatic pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Bottomhole hydrostatic pressure.")]
        public PressureMeasure BottomholeHydrostaticPres {
            get {
                return this.bottomholeHydrostaticPresField;
            }
            set {
                this.bottomholeHydrostaticPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pressure at which gas begins to break out of an under saturated oil and form a  free gas phase in the matrix or a gas cap.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure at which gas begins to break out of an under saturated oil and form " +
            "a  free gas phase in the matrix or a gas cap.")]
        public PressureMeasure BubblePointPres {
            get {
                return this.bubblePointPresField;
            }
            set {
                this.bubblePointPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pressure when the fracture width becomes zero.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure when the fracture width becomes zero.")]
        public PressureMeasure FractureClosePres {
            get {
                return this.fractureClosePresField;
            }
            set {
                this.fractureClosePresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pressure loss due to fluid friction with the pipe while a fluid is being pumped.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure loss due to fluid friction with the pipe while a fluid is being pump" +
            "ed.")]
        public PressureMeasure FrictionPres {
            get {
                return this.frictionPresField;
            }
            set {
                this.frictionPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Initial shutin pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Initial shutin pressure.")]
        public PressureMeasure InitialShutinPres {
            get {
                return this.initialShutinPresField;
            }
            set {
                this.initialShutinPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pressure of the liquids in the formation pores.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure of the liquids in the formation pores.")]
        public PressureMeasure PorePres {
            get {
                return this.porePresField;
            }
            set {
                this.porePresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average bottomhole treatment flow rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Average bottomhole treatment flow rate.")]
        public VolumeFlowRatePerVolumeFlowRateMeasure AvgBottomholeTreatmentRate {
            get {
                return this.avgBottomholeTreatmentRateField;
            }
            set {
                this.avgBottomholeTreatmentRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of the fluid.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of the fluid.")]
        public MassPerVolumeMeasure FluidDensity {
            get {
                return this.fluidDensityField;
            }
            set {
                this.fluidDensityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Base fluid volume entering equipment.</summary>
        [System.ComponentModel.DescriptionAttribute("Base fluid volume entering equipment.")]
        public VolumeMeasure BaseFluidVol {
            get {
                return this.baseFluidVolField;
            }
            set {
                this.baseFluidVolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume of fluid in the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("The volume of fluid in the wellbore.")]
        public VolumeMeasure WellboreVolume {
            get {
                return this.wellboreVolumeField;
            }
            set {
                this.wellboreVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth of the wellbore to its injection point.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth of the wellbore to its injection point.")]
        public MeasuredDepthCoord MdSurface {
            get {
                return this.mdSurfaceField;
            }
            set {
                this.mdSurfaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth of the bottom of the hole.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth of the bottom of the hole.")]
        public MeasuredDepthCoord MdBottomhole {
            get {
                return this.mdBottomholeField;
            }
            set {
                this.mdBottomholeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth of the middle perforation.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth of the middle perforation.")]
        public MeasuredDepthCoord MdMidPerforation {
            get {
                return this.mdMidPerforationField;
            }
            set {
                this.mdMidPerforationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The true vertical depth of the middle perforation.</summary>
        [System.ComponentModel.DescriptionAttribute("The true vertical depth of the middle perforation.")]
        public WellVerticalDepthCoord TvdMidPerforation {
            get {
                return this.tvdMidPerforationField;
            }
            set {
                this.tvdMidPerforationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The constant earth temperature at a given depth specific to a region.</summary>
        [System.ComponentModel.DescriptionAttribute("The constant earth temperature at a given depth specific to a region.")]
        public ThermodynamicTemperatureMeasure SurfaceTemperature {
            get {
                return this.surfaceTemperatureField;
            }
            set {
                this.surfaceTemperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Static bottomhole temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Static bottomhole temperature.")]
        public ThermodynamicTemperatureMeasure BottomholeTemperature {
            get {
                return this.bottomholeTemperatureField;
            }
            set {
                this.bottomholeTemperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Temperature of the fluid at the surface.</summary>
        [System.ComponentModel.DescriptionAttribute("Temperature of the fluid at the surface.")]
        public ThermodynamicTemperatureMeasure SurfaceFluidTemperature {
            get {
                return this.surfaceFluidTemperatureField;
            }
            set {
                this.surfaceFluidTemperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume change of a fluid when pressure is applied.</summary>
        [System.ComponentModel.DescriptionAttribute("The volume change of a fluid when pressure is applied.")]
        public IsothermalCompressibilityMeasure FluidCompressibility {
            get {
                return this.fluidCompressibilityField;
            }
            set {
                this.fluidCompressibilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume change of a reservoir material when pressure is applied.</summary>
        [System.ComponentModel.DescriptionAttribute("The volume change of a reservoir material when pressure is applied.")]
        public IsothermalCompressibilityMeasure ReservoirTotalCompressibility {
            get {
                return this.reservoirTotalCompressibilityField;
            }
            set {
                this.reservoirTotalCompressibilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Power law component. As n decreases from 1, the fluid becomes more shear thinning.  Reducing n produces more non-Newtonian behavior.</summary>
        [System.ComponentModel.DescriptionAttribute("Power law component. As n decreases from 1, the fluid becomes more shear thinning" +
            ".  Reducing n produces more non-Newtonian behavior.")]
        public string FluidNprimeFactor {
            get {
                return this.fluidNprimeFactorField;
            }
            set {
                this.fluidNprimeFactorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The consistency index K is the shear stress or viscosity of the fluid at one sec-1 shear rate. An increasing K raises the effective viscosity.</summary>
        [System.ComponentModel.DescriptionAttribute("The consistency index K is the shear stress or viscosity of the fluid at one sec-" +
            "1 shear rate. An increasing K raises the effective viscosity.")]
        public string FluidKprimeFactor {
            get {
                return this.fluidKprimeFactorField;
            }
            set {
                this.fluidKprimeFactorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The heat required to raise one unit mass of a substance by one degree.</summary>
        [System.ComponentModel.DescriptionAttribute("The heat required to raise one unit mass of a substance by one degree.")]
        public SpecificHeatCapacityMeasure FluidSpecificHeat {
            get {
                return this.fluidSpecificHeatField;
            }
            set {
                this.fluidSpecificHeatField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>In physics, thermal conductivity is the property of a material describing its ability to conduct heat.  It appears primarily in Fourier's Law for heat conduction. Thermal conductivity is measured in watts per kelvin-meter.  Multiplied by a temperature difference (in kelvins) and an area (in square meters), and divided by a  thickness (in meters), the thermal conductivity predicts the rate of energy loss (in watts) through a piece of material.</summary>
        [System.ComponentModel.DescriptionAttribute(@"In physics, thermal conductivity is the property of a material describing its ability to conduct heat.  It appears primarily in Fourier's Law for heat conduction. Thermal conductivity is measured in watts per kelvin-meter.  Multiplied by a temperature difference (in kelvins) and an area (in square meters), and divided by a  thickness (in meters), the thermal conductivity predicts the rate of energy loss (in watts) through a piece of material.")]
        public ThermalConductivityMeasure FluidThermalConductivity {
            get {
                return this.fluidThermalConductivityField;
            }
            set {
                this.fluidThermalConductivityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Dimensional response to temperature change is expressed by its coefficient of thermal expansion. When the temperature of a substance changes, the energy that is stored in the intermolecular bonds  between atoms changes. When the stored energy increases, so does the length of the molecular bonds.  As a result, solids typically expand in response to heating and contract on cooling.  The degree of expansion divided by the change in temperature is called the material's coefficient  of thermal expansion and generally varies with temperature.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Dimensional response to temperature change is expressed by its coefficient of thermal expansion. When the temperature of a substance changes, the energy that is stored in the intermolecular bonds  between atoms changes. When the stored energy increases, so does the length of the molecular bonds.  As a result, solids typically expand in response to heating and contract on cooling.  The degree of expansion divided by the change in temperature is called the material's coefficient  of thermal expansion and generally varies with temperature.")]
        public VolumetricThermalExpansionMeasure FluidThermalExpansionCoefficient {
            get {
                return this.fluidThermalExpansionCoefficientField;
            }
            set {
                this.fluidThermalExpansionCoefficientField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A measurement, derived from a data frac, of the efficiency of a particular fluid in creating fracture area on a particular formation at a set of conditions.</summary>
        [System.ComponentModel.DescriptionAttribute("A measurement, derived from a data frac, of the efficiency of a particular fluid " +
            "in creating fracture area on a particular formation at a set of conditions.")]
        public VolumePerVolumeMeasure FluidEfficiency {
            get {
                return this.fluidEfficiencyField;
            }
            set {
                this.fluidEfficiencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Foam quality percentage of foam for the job during the stimulation services.</summary>
        [System.ComponentModel.DescriptionAttribute("Foam quality percentage of foam for the job during the stimulation services.")]
        public VolumePerVolumeMeasure FoamQuality {
            get {
                return this.foamQualityField;
            }
            set {
                this.foamQualityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume of the pad divided by the (volume of the pad + the volume of the proppant laden fluid).</summary>
        [System.ComponentModel.DescriptionAttribute("The volume of the pad divided by the (volume of the pad + the volume of the propp" +
            "ant laden fluid).")]
        public VolumePerVolumeMeasure PercentPad {
            get {
                return this.percentPadField;
            }
            set {
                this.percentPadField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of a stage associated with this diagnostics session.</summary>
        [System.ComponentModel.DescriptionAttribute("The number of a stage associated with this diagnostics session.")]
        public long StageNumber {
            get {
                return this.stageNumberField;
            }
            set {
                this.stageNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StageNumberSpecified {
            get {
                return this.stageNumberFieldSpecified;
            }
            set {
                this.stageNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Are the calculations corrected for temperature. A value of "true" (or "1") indicates that the calculations were corrected for temperature.  A value of "false" (or "0") or not given indicates otherwise.</summary>
        [System.ComponentModel.DescriptionAttribute("Are the calculations corrected for temperature. A value of \"true\" (or \"1\") indica" +
            "tes that the calculations were corrected for temperature.  A value of \"false\" (o" +
            "r \"0\") or not given indicates otherwise.")]
        public bool TemperatureCorrectionApplied {
            get {
                return this.temperatureCorrectionAppliedField;
            }
            set {
                this.temperatureCorrectionAppliedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TemperatureCorrectionAppliedSpecified {
            get {
                return this.temperatureCorrectionAppliedFieldSpecified;
            }
            set {
                this.temperatureCorrectionAppliedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A diagnostic test determining fluid efficiency.</summary>
        [System.Xml.Serialization.XmlElementAttribute("FluidEfficiencyTest")]
        [System.ComponentModel.DescriptionAttribute("A diagnostic test determining fluid efficiency.")]
        public StimFetTest[] FluidEfficiencyTest {
            get {
                return this.fluidEfficiencyTestField;
            }
            set {
                this.fluidEfficiencyTestField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An injection test involving multiple steps of injection rate and pressure, where a curve deflection and change of slope indicates the fracture breakdown pressure. An injection test involving multiple steps of injection rate and pressure, where a curve deflection and change of slope indicates the fracture breakdown pressure.</summary>
        [System.Xml.Serialization.XmlElementAttribute("StepDownTest")]
        [System.ComponentModel.DescriptionAttribute(@"An injection test involving multiple steps of injection rate and pressure, where a curve deflection and change of slope indicates the fracture breakdown pressure. An injection test involving multiple steps of injection rate and pressure, where a curve deflection and change of slope indicates the fracture breakdown pressure.")]
        public StimStepDownTest[] StepDownTest {
            get {
                return this.stepDownTestField;
            }
            set {
                this.stepDownTestField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An injection test, plotted pressure against injection rate, where a curve deflection and change of slope indicates the fracture breakdown pressure.</summary>
        [System.Xml.Serialization.XmlElementAttribute("StepRateTest")]
        [System.ComponentModel.DescriptionAttribute("An injection test, plotted pressure against injection rate, where a curve deflect" +
            "ion and change of slope indicates the fracture breakdown pressure.")]
        public StimStepTest[] StepRateTest {
            get {
                return this.stepRateTestField;
            }
            set {
                this.stepRateTestField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A diagnostic test involving flowing a well back after treatment.</summary>
        [System.Xml.Serialization.XmlElementAttribute("PumpFlowBackTest")]
        [System.ComponentModel.DescriptionAttribute("A diagnostic test involving flowing a well back after treatment.")]
        public StimPumpFlowBackTest[] PumpFlowBackTest {
            get {
                return this.pumpFlowBackTestField;
            }
            set {
                this.pumpFlowBackTestField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class WellVerticalDepthCoord {
        
        private LengthUom uomField;
        
        private bool uomFieldSpecified;
        
        private string datumField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uomSpecified {
            get {
                return this.uomFieldSpecified;
            }
            set {
                this.uomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string datum {
            get {
                return this.datumField;
            }
            set {
                this.datumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class SurfaceEquipment {
        
        private string descriptionField;
        
        private PressureMeasure presRatingField;
        
        private SurfEquipType typeSurfEquipField;
        
        private bool usePumpDischargeField;
        
        private bool usePumpDischargeFieldSpecified;
        
        private bool useStandpipeField;
        
        private bool useStandpipeFieldSpecified;
        
        private bool useHoseField;
        
        private bool useHoseFieldSpecified;
        
        private bool useSwivelField;
        
        private bool useSwivelFieldSpecified;
        
        private bool useKellyField;
        
        private bool useKellyFieldSpecified;
        
        private bool useTopStackField;
        
        private bool useTopStackFieldSpecified;
        
        private bool useInjStackField;
        
        private bool useInjStackFieldSpecified;
        
        private bool useSurfaceIronField;
        
        private bool useSurfaceIronFieldSpecified;
        
        private LengthMeasure idStandpipeField;
        
        private LengthMeasure lenStandpipeField;
        
        private LengthMeasure idHoseField;
        
        private LengthMeasure lenHoseField;
        
        private LengthMeasure idSwivelField;
        
        private LengthMeasure lenSwivelField;
        
        private LengthMeasure idKellyField;
        
        private LengthMeasure lenKellyField;
        
        private LengthMeasure idSurfaceIronField;
        
        private LengthMeasure lenSurfaceIronField;
        
        private LengthMeasure htSurfaceIronField;
        
        private LengthMeasure idDischargeLineField;
        
        private LengthMeasure lenDischargeLineField;
        
        private string ctWrapTypeField;
        
        private LengthMeasure odReelField;
        
        private LengthMeasure odCoreField;
        
        private LengthMeasure widReelWrapField;
        
        private LengthMeasure lenReelField;
        
        private bool injStkUpField;
        
        private bool injStkUpFieldSpecified;
        
        private LengthMeasure htInjStkField;
        
        private bool umbInsideField;
        
        private bool umbInsideFieldSpecified;
        
        private LengthMeasure odUmbilicalField;
        
        private LengthMeasure lenUmbilicalField;
        
        private LengthMeasure idTopStkField;
        
        private LengthMeasure htTopStkField;
        
        private LengthMeasure htFlangeField;
        
        /// <remarks/>
        /// <summary>Description of item and details.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Description of item and details.")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure rating of the item.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure rating of the item.")]
        public PressureMeasure PresRating {
            get {
                return this.presRatingField;
            }
            set {
                this.presRatingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Surface equipment type (IADC1-4,Custom, Coiled Tubing).</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Surface equipment type (IADC1-4,Custom, Coiled Tubing).")]
        public SurfEquipType TypeSurfEquip {
            get {
                return this.typeSurfEquipField;
            }
            set {
                this.typeSurfEquipField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use pump discharge Line. Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use pump discharge Line. Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool UsePumpDischarge {
            get {
                return this.usePumpDischargeField;
            }
            set {
                this.usePumpDischargeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsePumpDischargeSpecified {
            get {
                return this.usePumpDischargeFieldSpecified;
            }
            set {
                this.usePumpDischargeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use standpipe geometry.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use standpipe geometry.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool UseStandpipe {
            get {
                return this.useStandpipeField;
            }
            set {
                this.useStandpipeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseStandpipeSpecified {
            get {
                return this.useStandpipeFieldSpecified;
            }
            set {
                this.useStandpipeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use kelly hose geometry.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use kelly hose geometry.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool UseHose {
            get {
                return this.useHoseField;
            }
            set {
                this.useHoseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseHoseSpecified {
            get {
                return this.useHoseFieldSpecified;
            }
            set {
                this.useHoseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use swivel geometry.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use swivel geometry.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool UseSwivel {
            get {
                return this.useSwivelField;
            }
            set {
                this.useSwivelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseSwivelSpecified {
            get {
                return this.useSwivelFieldSpecified;
            }
            set {
                this.useSwivelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use kelly geometry.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use kelly geometry.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool UseKelly {
            get {
                return this.useKellyField;
            }
            set {
                this.useKellyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseKellySpecified {
            get {
                return this.useKellyFieldSpecified;
            }
            set {
                this.useKellyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use top stack height.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use top stack height.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool UseTopStack {
            get {
                return this.useTopStackField;
            }
            set {
                this.useTopStackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseTopStackSpecified {
            get {
                return this.useTopStackFieldSpecified;
            }
            set {
                this.useTopStackFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use injector stack height.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use injector stack height.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool UseInjStack {
            get {
                return this.useInjStackField;
            }
            set {
                this.useInjStackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseInjStackSpecified {
            get {
                return this.useInjStackFieldSpecified;
            }
            set {
                this.useInjStackFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use surface iron description.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use surface iron description.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool UseSurfaceIron {
            get {
                return this.useSurfaceIronField;
            }
            set {
                this.useSurfaceIronField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseSurfaceIronSpecified {
            get {
                return this.useSurfaceIronFieldSpecified;
            }
            set {
                this.useSurfaceIronFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of standpipe.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of standpipe.")]
        public LengthMeasure IdStandpipe {
            get {
                return this.idStandpipeField;
            }
            set {
                this.idStandpipeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of standpipe.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of standpipe.")]
        public LengthMeasure LenStandpipe {
            get {
                return this.lenStandpipeField;
            }
            set {
                this.lenStandpipeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of kelly hose.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of kelly hose.")]
        public LengthMeasure IdHose {
            get {
                return this.idHoseField;
            }
            set {
                this.idHoseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of kelly hose.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of kelly hose.")]
        public LengthMeasure LenHose {
            get {
                return this.lenHoseField;
            }
            set {
                this.lenHoseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of swivel.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of swivel.")]
        public LengthMeasure IdSwivel {
            get {
                return this.idSwivelField;
            }
            set {
                this.idSwivelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of swivel.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of swivel.")]
        public LengthMeasure LenSwivel {
            get {
                return this.lenSwivelField;
            }
            set {
                this.lenSwivelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of kelly hose.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of kelly hose.")]
        public LengthMeasure IdKelly {
            get {
                return this.idKellyField;
            }
            set {
                this.idKellyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of kelly.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of kelly.")]
        public LengthMeasure LenKelly {
            get {
                return this.lenKellyField;
            }
            set {
                this.lenKellyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of surface iron.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of surface iron.")]
        public LengthMeasure IdSurfaceIron {
            get {
                return this.idSurfaceIronField;
            }
            set {
                this.idSurfaceIronField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of surface iron.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of surface iron.")]
        public LengthMeasure LenSurfaceIron {
            get {
                return this.lenSurfaceIronField;
            }
            set {
                this.lenSurfaceIronField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Height of surface iron.</summary>
        [System.ComponentModel.DescriptionAttribute("Height of surface iron.")]
        public LengthMeasure HtSurfaceIron {
            get {
                return this.htSurfaceIronField;
            }
            set {
                this.htSurfaceIronField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Inner diameter of pump discharge line.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Inner diameter of pump discharge line.")]
        public LengthMeasure IdDischargeLine {
            get {
                return this.idDischargeLineField;
            }
            set {
                this.idDischargeLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Length of pump discharge line.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Length of pump discharge line.")]
        public LengthMeasure LenDischargeLine {
            get {
                return this.lenDischargeLineField;
            }
            set {
                this.lenDischargeLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Coiled tubing wrap type.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Coiled tubing wrap type.")]
        public string CtWrapType {
            get {
                return this.ctWrapTypeField;
            }
            set {
                this.ctWrapTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Specifies the OD of the coiled tubing reel.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Specifies the OD of the coiled tubing reel.")]
        public LengthMeasure OdReel {
            get {
                return this.odReelField;
            }
            set {
                this.odReelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Outer diameter of the reel core that the coiled tubing is wrapped around.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Outer diameter of the reel core that the coiled tubing is wrapped" +
            " around.")]
        public LengthMeasure OdCore {
            get {
                return this.odCoreField;
            }
            set {
                this.odCoreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Width of the reel core. This is the inside dimension.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Width of the reel core. This is the inside dimension.")]
        public LengthMeasure WidReelWrap {
            get {
                return this.widReelWrapField;
            }
            set {
                this.widReelWrapField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Length of the coiled tubing remaining on the reel.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Length of the coiled tubing remaining on the reel.")]
        public LengthMeasure LenReel {
            get {
                return this.lenReelField;
            }
            set {
                this.lenReelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Injector Stack Up.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Injector Stack Up.  Values are \"true\" (or \"1\") and \"false\" (or \"0" +
            "\").")]
        public bool InjStkUp {
            get {
                return this.injStkUpField;
            }
            set {
                this.injStkUpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InjStkUpSpecified {
            get {
                return this.injStkUpFieldSpecified;
            }
            set {
                this.injStkUpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing -The length of tubing from the end of the coil reel to the rotary kelly bushing.  Basically we define what is in the hole and on the reel.  This measurement takes into account  the 20 or so feet of tubing that is being straightened and shoved through the injector head.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Coiled tubing -The length of tubing from the end of the coil reel to the rotary kelly bushing.  Basically we define what is in the hole and on the reel.  This measurement takes into account  the 20 or so feet of tubing that is being straightened and shoved through the injector head.")]
        public LengthMeasure HtInjStk {
            get {
                return this.htInjStkField;
            }
            set {
                this.htInjStkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Umbilical inside, true/false check box so that you can account for the  wireline inside the coiled tubing.  With this pressure loss calculation, you can calculate  for the strings used for logging, wire line coring, etc.   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute(@"Coiled tubing - Umbilical inside, true/false check box so that you can account for the  wireline inside the coiled tubing.  With this pressure loss calculation, you can calculate  for the strings used for logging, wire line coring, etc.   Values are ""true"" (or ""1"") and ""false"" (or ""0"").")]
        public bool UmbInside {
            get {
                return this.umbInsideField;
            }
            set {
                this.umbInsideField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UmbInsideSpecified {
            get {
                return this.umbInsideFieldSpecified;
            }
            set {
                this.umbInsideFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Outer diameter of the umbilical.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Outer diameter of the umbilical.")]
        public LengthMeasure OdUmbilical {
            get {
                return this.odUmbilicalField;
            }
            set {
                this.odUmbilicalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Length of the umbilical.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Length of the umbilical.")]
        public LengthMeasure LenUmbilical {
            get {
                return this.lenUmbilicalField;
            }
            set {
                this.lenUmbilicalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Top drive - Inner diameter of top stack.</summary>
        [System.ComponentModel.DescriptionAttribute("Top drive - Inner diameter of top stack.")]
        public LengthMeasure IdTopStk {
            get {
                return this.idTopStkField;
            }
            set {
                this.idTopStkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Top drive - The distance that the mud travels from the end of the standpipe  hose to the drill pipe connection at the bottom of the top drive. We are measuring the  distance that the mud will flow through the top drive.</summary>
        [System.ComponentModel.DescriptionAttribute("Top drive - The distance that the mud travels from the end of the standpipe  hose" +
            " to the drill pipe connection at the bottom of the top drive. We are measuring t" +
            "he  distance that the mud will flow through the top drive.")]
        public LengthMeasure HtTopStk {
            get {
                return this.htTopStkField;
            }
            set {
                this.htTopStkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Height of flange. If you select Top Drive Stackup Height, Swivel and Kelly are disabled so that you can specify the top-drive rotary system.</summary>
        [System.ComponentModel.DescriptionAttribute("Height of flange. If you select Top Drive Stackup Height, Swivel and Kelly are di" +
            "sabled so that you can specify the top-drive rotary system.")]
        public LengthMeasure HtFlange {
            get {
                return this.htFlangeField;
            }
            set {
                this.htFlangeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum SurfEquipType {
        
        /// <remarks/>
        IADC,
        
        /// <remarks/>
        custom,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coiled tubing")]
        coiledtubing,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Degasser {
        
        private string manufacturerField;
        
        private string modelField;
        
        private string dTimInstallField;
        
        private string dTimRemoveField;
        
        private string typeField;
        
        private string ownerField;
        
        private LengthMeasure heightField;
        
        private LengthMeasure lenField;
        
        private LengthMeasure idField;
        
        private VolumePerTimeMeasure capFlowField;
        
        private AreaMeasure areaSeparatorFlowField;
        
        private LengthMeasure htMudSealField;
        
        private LengthMeasure idInletField;
        
        private LengthMeasure idVentLineField;
        
        private LengthMeasure lenVentLineField;
        
        private VolumePerTimeMeasure capGasSepField;
        
        private VolumePerTimeMeasure capBlowdownField;
        
        private PressureMeasure presRatingField;
        
        private ThermodynamicTemperatureMeasure tempRatingField;
        
        private NameTag[] nameTagField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturers designated model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturers designated model.")]
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of installation.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time of installation.")]
        public string DTimInstall {
            get {
                return this.dTimInstallField;
            }
            set {
                this.dTimInstallField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Removal date and time.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Removal date and time.")]
        public string DTimRemove {
            get {
                return this.dTimRemoveField;
            }
            set {
                this.dTimRemoveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description for the type of object.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description for the type of object.")]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contractor/owner.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Contractor/owner.")]
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Height of separator.</summary>
        [System.ComponentModel.DescriptionAttribute("Height of separator.")]
        public LengthMeasure Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of separator.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of separator.")]
        public LengthMeasure Len {
            get {
                return this.lenField;
            }
            set {
                this.lenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Internal diameter of object.</summary>
        [System.ComponentModel.DescriptionAttribute("Internal diameter of object.")]
        public LengthMeasure Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum pump rate at which the unit will efficiently operate.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum pump rate at which the unit will efficiently operate.")]
        public VolumePerTimeMeasure CapFlow {
            get {
                return this.capFlowField;
            }
            set {
                this.capFlowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Flow area of separator.</summary>
        [System.ComponentModel.DescriptionAttribute("Flow area of separator.")]
        public AreaMeasure AreaSeparatorFlow {
            get {
                return this.areaSeparatorFlowField;
            }
            set {
                this.areaSeparatorFlowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Depth of trip-tank fluid level to provide back pressure against separator flow.</summary>
        [System.ComponentModel.DescriptionAttribute("Depth of trip-tank fluid level to provide back pressure against separator flow.")]
        public LengthMeasure HtMudSeal {
            get {
                return this.htMudSealField;
            }
            set {
                this.htMudSealField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Internal diameter of inlet line.</summary>
        [System.ComponentModel.DescriptionAttribute("Internal diameter of inlet line.")]
        public LengthMeasure IdInlet {
            get {
                return this.idInletField;
            }
            set {
                this.idInletField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Internal diameter of vent line.</summary>
        [System.ComponentModel.DescriptionAttribute("Internal diameter of vent line.")]
        public LengthMeasure IdVentLine {
            get {
                return this.idVentLineField;
            }
            set {
                this.idVentLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of vent line.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of vent line.")]
        public LengthMeasure LenVentLine {
            get {
                return this.lenVentLineField;
            }
            set {
                this.lenVentLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Safe gas separating capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Safe gas separating capacity.")]
        public VolumePerTimeMeasure CapGasSep {
            get {
                return this.capGasSepField;
            }
            set {
                this.capGasSepField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas vent rate at which the vent line pressure drop exceeds the hydrostatic  head due to the mud seal.</summary>
        [System.ComponentModel.DescriptionAttribute("Gas vent rate at which the vent line pressure drop exceeds the hydrostatic  head " +
            "due to the mud seal.")]
        public VolumePerTimeMeasure CapBlowdown {
            get {
                return this.capBlowdownField;
            }
            set {
                this.capBlowdownField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure rating of the item.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure rating of the item.")]
        public PressureMeasure PresRating {
            get {
                return this.presRatingField;
            }
            set {
                this.presRatingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Temperature rating of separator.</summary>
        [System.ComponentModel.DescriptionAttribute("Temperature rating of separator.")]
        public ThermodynamicTemperatureMeasure TempRating {
            get {
                return this.tempRatingField;
            }
            set {
                this.tempRatingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the degasser. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("NameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the degasser. A serial number is a type of identificati" +
            "on tag however some tags contain many pieces of information. This structure just" +
            " identifies the tag and does not describe the contents.")]
        public NameTag[] NameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class AreaMeasure {
        
        private AreaUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public AreaUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum AreaUom {
        
        /// <remarks/>
        acre,
        
        /// <remarks/>
        b,
        
        /// <remarks/>
        cm2,
        
        /// <remarks/>
        ft2,
        
        /// <remarks/>
        ha,
        
        /// <remarks/>
        in2,
        
        /// <remarks/>
        km2,
        
        /// <remarks/>
        m2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mi[US]2")]
        miUS2,
        
        /// <remarks/>
        mi2,
        
        /// <remarks/>
        mm2,
        
        /// <remarks/>
        section,
        
        /// <remarks/>
        um2,
        
        /// <remarks/>
        yd2,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class NameTag {
        
        private string nameField;
        
        private string numberingSchemeField;
        
        private string technologyField;
        
        private string locationField;
        
        private string installationDateField;
        
        private string installationCompanyField;
        
        private string mountingCodeField;
        
        private string commentField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The physical identification string of the equipment tag.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The physical identification string of the equipment tag.")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The format or encoding specification of the equipment tag.  The tag may contain may different pieces of information and knowledge of that  information is inherent in the specification.  The "identification string" is a mandatory part of the information in a tag.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The format or encoding specification of the equipment tag.  The tag may contain may different pieces of information and knowledge of that  information is inherent in the specification.  The ""identification string"" is a mandatory part of the information in a tag.")]
        public string NumberingScheme {
            get {
                return this.numberingSchemeField;
            }
            set {
                this.numberingSchemeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Identifies the general type of identifier on an item.  If multiple identifiers exist on an item, a separate description set for each identifier should be created.   For example, a joint of casing may have a barcode label on it along with a painted-on code and an RFID tag attached or embedded into the coupling.  The barcode label may in turn be an RFID equipped label. This particular scenario would require populating five nameTags to fully describe and decode all the possible identifiers as follows: 'tagged' - RFID tag embedded in the coupling, 'label'  - Serial number printed on the label, 'tagged' - RFID tag embedded into the label, 'label'  - Barcode printed on the label, 'painted'- Mill number painted on the pipe body.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Identifies the general type of identifier on an item.  If multiple identifiers exist on an item, a separate description set for each identifier should be created.   For example, a joint of casing may have a barcode label on it along with a painted-on code and an RFID tag attached or embedded into the coupling.  The barcode label may in turn be an RFID equipped label. This particular scenario would require populating five nameTags to fully describe and decode all the possible identifiers as follows: 'tagged' - RFID tag embedded in the coupling, 'label'  - Serial number printed on the label, 'tagged' - RFID tag embedded into the label, 'label'  - Barcode printed on the label, 'painted'- Mill number painted on the pipe body.")]
        public string Technology {
            get {
                return this.technologyField;
            }
            set {
                this.technologyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An indicator of where the tag is attached to the item. This is used to assist the user in finding where an identifier is located on an item.  This optional field also helps to differentiate where an identifier is located when multiple identifiers exist on an item. Most downhole components have a box (female thread) and pin (male thread) end as well as a pipe body in between the ends. Where multiple identifiers are used on an item, it is convenient to have a reference as to which end, or somewhere in the middle, an identifier may be closer to. Some items may have an identifier on a non-standard location, such as on the arm of a hole opener.  'other', by exclusion, tells a user to look elsewhere than on the body or near the ends of an item.  Most non-downhole tools will use either 'body', 'other' or not specified as the location tends to lose value with smaller or non threaded items.</summary>
        [System.ComponentModel.DescriptionAttribute(@"An indicator of where the tag is attached to the item. This is used to assist the user in finding where an identifier is located on an item.  This optional field also helps to differentiate where an identifier is located when multiple identifiers exist on an item. Most downhole components have a box (female thread) and pin (male thread) end as well as a pipe body in between the ends. Where multiple identifiers are used on an item, it is convenient to have a reference as to which end, or somewhere in the middle, an identifier may be closer to. Some items may have an identifier on a non-standard location, such as on the arm of a hole opener.  'other', by exclusion, tells a user to look elsewhere than on the body or near the ends of an item.  Most non-downhole tools will use either 'body', 'other' or not specified as the location tends to lose value with smaller or non threaded items.")]
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>When the tag was installed in or on the item.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("When the tag was installed in or on the item.")]
        public string InstallationDate {
            get {
                return this.installationDateField;
            }
            set {
                this.installationDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the company that installed the tag.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the company that installed the tag.")]
        public string InstallationCompany {
            get {
                return this.installationCompanyField;
            }
            set {
                this.installationCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reference to a manufacturers or installers installation  description, code, or method.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Reference to a manufacturers or installers installation  description, code, or me" +
            "thod.")]
        public string MountingCode {
            get {
                return this.mountingCodeField;
            }
            set {
                this.mountingCodeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A comment or remark about the tag.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A comment or remark about the tag.")]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Hydrocyclone {
        
        private string manufacturerField;
        
        private string modelField;
        
        private string dTimInstallField;
        
        private string dTimRemoveField;
        
        private string typeField;
        
        private string descConeField;
        
        private string ownerField;
        
        private NameTag[] nameTagField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturers designated model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturers designated model.")]
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of installation.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time of installation.")]
        public string DTimInstall {
            get {
                return this.dTimInstallField;
            }
            set {
                this.dTimInstallField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Removal date and time.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Removal date and time.")]
        public string DTimRemove {
            get {
                return this.dTimRemoveField;
            }
            set {
                this.dTimRemoveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description for the type of object.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description for the type of object.")]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cones description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Cones description.")]
        public string DescCone {
            get {
                return this.descConeField;
            }
            set {
                this.descConeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contractor/owner.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Contractor/owner.")]
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the hydrocyclone. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("NameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the hydrocyclone. A serial number is a type of identifi" +
            "cation tag however some tags contain many pieces of information. This structure " +
            "just identifies the tag and does not describe the contents.")]
        public NameTag[] NameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Centrifuge {
        
        private string manufacturerField;
        
        private string modelField;
        
        private string dTimInstallField;
        
        private string dTimRemoveField;
        
        private string typeField;
        
        private VolumePerTimeMeasure capFlowField;
        
        private string ownerField;
        
        private NameTag[] nameTagField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturers designated model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturers designated model.")]
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of installation.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time of installation.")]
        public string DTimInstall {
            get {
                return this.dTimInstallField;
            }
            set {
                this.dTimInstallField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Removal date and time.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Removal date and time.")]
        public string DTimRemove {
            get {
                return this.dTimRemoveField;
            }
            set {
                this.dTimRemoveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description for the type of object.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description for the type of object.")]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum pump rate at which the unit will efficiently operate.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum pump rate at which the unit will efficiently operate.")]
        public VolumePerTimeMeasure CapFlow {
            get {
                return this.capFlowField;
            }
            set {
                this.capFlowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contractor/owner.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Contractor/owner.")]
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the centrifuge. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("NameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the centrifuge. A serial number is a type of identifica" +
            "tion tag however some tags contain many pieces of information. This structure ju" +
            "st identifies the tag and does not describe the contents.")]
        public NameTag[] NameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class MudPump {
        
        private int indexField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private string dTimInstallField;
        
        private string dTimRemoveField;
        
        private string ownerField;
        
        private PumpType typePumpField;
        
        private bool typePumpFieldSpecified;
        
        private int numCylField;
        
        private bool numCylFieldSpecified;
        
        private LengthMeasure odRodField;
        
        private LengthMeasure idLinerField;
        
        private short pumpActionField;
        
        private bool pumpActionFieldSpecified;
        
        private PowerPerPowerMeasure effField;
        
        private LengthMeasure lenStrokeField;
        
        private PressureMeasure presMxField;
        
        private PowerMeasure powHydMxField;
        
        private AngularVelocityMeasure spmMxField;
        
        private VolumeMeasure displacementField;
        
        private PressureMeasure presDampField;
        
        private VolumeMeasure volDampField;
        
        private PowerMeasure powMechMxField;
        
        private NameTag[] nameTagField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Relative pump number. One-based.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Relative pump number. One-based.")]
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturers designated model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturers designated model.")]
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of pump installation.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time of pump installation.")]
        public string DTimInstall {
            get {
                return this.dTimInstallField;
            }
            set {
                this.dTimInstallField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time the pump was removed.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time the pump was removed.")]
        public string DTimRemove {
            get {
                return this.dTimRemoveField;
            }
            set {
                this.dTimRemoveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contractor/owner.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Contractor/owner.")]
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump type reference list.</summary>
        [System.ComponentModel.DescriptionAttribute("Pump type reference list.")]
        public PumpType TypePump {
            get {
                return this.typePumpField;
            }
            set {
                this.typePumpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypePumpSpecified {
            get {
                return this.typePumpFieldSpecified;
            }
            set {
                this.typePumpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of cylinders (3=single acting, 2 = double acting)</summary>
        [System.ComponentModel.DescriptionAttribute("Number of cylinders (3=single acting, 2 = double acting)")]
        public int NumCyl {
            get {
                return this.numCylField;
            }
            set {
                this.numCylField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumCylSpecified {
            get {
                return this.numCylFieldSpecified;
            }
            set {
                this.numCylFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rod outer diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Rod outer diameter.")]
        public LengthMeasure OdRod {
            get {
                return this.odRodField;
            }
            set {
                this.odRodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of the pump liner.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Inner diameter of the pump liner.")]
        public LengthMeasure IdLiner {
            get {
                return this.idLinerField;
            }
            set {
                this.idLinerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump action. 1 = Single acting, 2 = double acting.</summary>
        [System.ComponentModel.DescriptionAttribute("Pump action. 1 = Single acting, 2 = double acting.")]
        public short PumpAction {
            get {
                return this.pumpActionField;
            }
            set {
                this.pumpActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PumpActionSpecified {
            get {
                return this.pumpActionFieldSpecified;
            }
            set {
                this.pumpActionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Efficiency of the pump.</summary>
        [System.ComponentModel.DescriptionAttribute("Efficiency of the pump.")]
        public PowerPerPowerMeasure Eff {
            get {
                return this.effField;
            }
            set {
                this.effField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Stroke length.</summary>
        [System.ComponentModel.DescriptionAttribute("Stroke length.")]
        public LengthMeasure LenStroke {
            get {
                return this.lenStrokeField;
            }
            set {
                this.lenStrokeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum pump pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum pump pressure.")]
        public PressureMeasure PresMx {
            get {
                return this.presMxField;
            }
            set {
                this.presMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum hydraulics horsepower.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum hydraulics horsepower.")]
        public PowerMeasure PowHydMx {
            get {
                return this.powHydMxField;
            }
            set {
                this.powHydMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum Speed.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum Speed.")]
        public AngularVelocityMeasure SpmMx {
            get {
                return this.spmMxField;
            }
            set {
                this.spmMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump displacement.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Pump displacement.")]
        public VolumeMeasure Displacement {
            get {
                return this.displacementField;
            }
            set {
                this.displacementField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pulsation dampener pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Pulsation dampener pressure.")]
        public PressureMeasure PresDamp {
            get {
                return this.presDampField;
            }
            set {
                this.presDampField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pulsation dampener volume.</summary>
        [System.ComponentModel.DescriptionAttribute("Pulsation dampener volume.")]
        public VolumeMeasure VolDamp {
            get {
                return this.volDampField;
            }
            set {
                this.volDampField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum mechanical power.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum mechanical power.")]
        public PowerMeasure PowMechMx {
            get {
                return this.powMechMxField;
            }
            set {
                this.powMechMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the pump. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("NameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the pump. A serial number is a type of identification t" +
            "ag however some tags contain many pieces of information. This structure just ide" +
            "ntifies the tag and does not describe the contents.")]
        public NameTag[] NameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum PumpType {
        
        /// <remarks/>
        centrifugal,
        
        /// <remarks/>
        duplex,
        
        /// <remarks/>
        triplex,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class PowerPerPowerMeasure {
        
        private PowerPerPowerUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PowerPerPowerUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum PowerPerPowerUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Btu[IT]/(hp.h)")]
        BtuIThph,
        
        /// <remarks/>
        Euc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("W/kW")]
        WkW,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("W/W")]
        WW,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class AngularVelocityMeasure {
        
        private AngularVelocityUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public AngularVelocityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum AngularVelocityUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dega/h")]
        degah,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dega/min")]
        degamin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dega/s")]
        degas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rad/s")]
        rads,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rev/s")]
        revs,
        
        /// <remarks/>
        rpm,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Pit {
        
        private int indexField;
        
        private string dTimInstallField;
        
        private string dTimRemoveField;
        
        private VolumeMeasure capMxField;
        
        private string ownerField;
        
        private PitType typePitField;
        
        private bool typePitFieldSpecified;
        
        private bool isActiveField;
        
        private bool isActiveFieldSpecified;
        
        private NameTag[] nameTagField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Relative pit number of all pits on the rig. One-based.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Relative pit number of all pits on the rig. One-based.")]
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of installation.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time of installation.")]
        public string DTimInstall {
            get {
                return this.dTimInstallField;
            }
            set {
                this.dTimInstallField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Removal date and time.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Removal date and time.")]
        public string DTimRemove {
            get {
                return this.dTimRemoveField;
            }
            set {
                this.dTimRemoveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum pit capacity.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Maximum pit capacity.")]
        public VolumeMeasure CapMx {
            get {
                return this.capMxField;
            }
            set {
                this.capMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contractor/owner.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Contractor/owner.")]
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of pit.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of pit.")]
        public PitType TypePit {
            get {
                return this.typePitField;
            }
            set {
                this.typePitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypePitSpecified {
            get {
                return this.typePitFieldSpecified;
            }
            set {
                this.typePitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Flag to indicate if Pit is part of the active system.   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate if Pit is part of the active system.   Values are \"true\" (or \"1\"" +
            ") and \"false\" (or \"0\").")]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsActiveSpecified {
            get {
                return this.isActiveFieldSpecified;
            }
            set {
                this.isActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the pit. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("NameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the pit. A serial number is a type of identification ta" +
            "g however some tags contain many pieces of information. This structure just iden" +
            "tifies the tag and does not describe the contents.")]
        public NameTag[] NameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum PitType {
        
        /// <remarks/>
        bulk,
        
        /// <remarks/>
        chemical,
        
        /// <remarks/>
        drilling,
        
        /// <remarks/>
        mix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud cleaning")]
        mudcleaning,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sand trap")]
        sandtrap,
        
        /// <remarks/>
        slug,
        
        /// <remarks/>
        storage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("surge tank")]
        surgetank,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("trip tank")]
        triptank,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class BopComponent {
        
        private BopType typeBopCompField;
        
        private bool typeBopCompFieldSpecified;
        
        private string descCompField;
        
        private LengthMeasure idPassThruField;
        
        private PressureMeasure presWorkField;
        
        private LengthMeasure diaCloseMnField;
        
        private LengthMeasure diaCloseMxField;
        
        private string nomenclatureField;
        
        private bool isVariableField;
        
        private bool isVariableFieldSpecified;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Type of ram/preventer.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of ram/preventer.")]
        public BopType TypeBopComp {
            get {
                return this.typeBopCompField;
            }
            set {
                this.typeBopCompField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeBopCompSpecified {
            get {
                return this.typeBopCompFieldSpecified;
            }
            set {
                this.typeBopCompFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of component.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of component.")]
        public string DescComp {
            get {
                return this.descCompField;
            }
            set {
                this.descCompField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter that tubulars can pass thru.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter that tubulars can pass thru.")]
        public LengthMeasure IdPassThru {
            get {
                return this.idPassThruField;
            }
            set {
                this.idPassThruField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Working rating pressure of the component.</summary>
        [System.ComponentModel.DescriptionAttribute("Working rating pressure of the component.")]
        public PressureMeasure PresWork {
            get {
                return this.presWorkField;
            }
            set {
                this.presWorkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum diameter of component it will seal.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum diameter of component it will seal.")]
        public LengthMeasure DiaCloseMn {
            get {
                return this.diaCloseMnField;
            }
            set {
                this.diaCloseMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum diameter of component it will seal.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum diameter of component it will seal.")]
        public LengthMeasure DiaCloseMx {
            get {
                return this.diaCloseMxField;
            }
            set {
                this.diaCloseMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Arrangement nomenclature for the Blow Out Preventer stack (e.g. S, R, A).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Arrangement nomenclature for the Blow Out Preventer stack (e.g. S, R, A).")]
        public string Nomenclature {
            get {
                return this.nomenclatureField;
            }
            set {
                this.nomenclatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is Ram bore variable or single size? Defaults to false.   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is Ram bore variable or single size? Defaults to false.   Values are \"true\" (or \"" +
            "1\") and \"false\" (or \"0\").")]
        public bool IsVariable {
            get {
                return this.isVariableField;
            }
            set {
                this.isVariableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsVariableSpecified {
            get {
                return this.isVariableFieldSpecified;
            }
            set {
                this.isVariableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum BopType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("annular preventer")]
        annularpreventer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shear ram")]
        shearram,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("blind ram")]
        blindram,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pipe ram")]
        piperam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling spool")]
        drillingspool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flexible joint")]
        flexiblejoint,
        
        /// <remarks/>
        connector,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Bop {
        
        private string manufacturerField;
        
        private string modelField;
        
        private string dTimInstallField;
        
        private string dTimRemoveField;
        
        private NameTag[] nameTagField;
        
        private string typeConnectionBopField;
        
        private LengthMeasure sizeConnectionBopField;
        
        private PressureMeasure presBopRatingField;
        
        private LengthMeasure sizeBopSysField;
        
        private bool rotBopField;
        
        private bool rotBopFieldSpecified;
        
        private LengthMeasure idBoosterLineField;
        
        private LengthMeasure odBoosterLineField;
        
        private LengthMeasure lenBoosterLineField;
        
        private LengthMeasure idSurfLineField;
        
        private LengthMeasure odSurfLineField;
        
        private LengthMeasure lenSurfLineField;
        
        private LengthMeasure idChkLineField;
        
        private LengthMeasure odChkLineField;
        
        private LengthMeasure lenChkLineField;
        
        private LengthMeasure idKillLineField;
        
        private LengthMeasure odKillLineField;
        
        private LengthMeasure lenKillLineField;
        
        private string typeDiverterField;
        
        private LengthMeasure diaDiverterField;
        
        private PressureMeasure presWorkDiverterField;
        
        private string accumulatorField;
        
        private VolumeMeasure capAccFluidField;
        
        private PressureMeasure presAccPreChargeField;
        
        private VolumeMeasure volAccPreChargeField;
        
        private PressureMeasure presAccOpRatingField;
        
        private string typeControlManifoldField;
        
        private string descControlManifoldField;
        
        private string typeChokeManifoldField;
        
        private PressureMeasure presChokeManifoldField;
        
        private BopComponent[] bopComponentField;
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturers designated model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturers designated model.")]
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of installation.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time of installation.")]
        public string DTimInstall {
            get {
                return this.dTimInstallField;
            }
            set {
                this.dTimInstallField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Removal Date.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Removal Date.")]
        public string DTimRemove {
            get {
                return this.dTimRemoveField;
            }
            set {
                this.dTimRemoveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the blow out preventer. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("NameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the blow out preventer. A serial number is a type of id" +
            "entification tag however some tags contain many pieces of information. This stru" +
            "cture just identifies the tag and does not describe the contents.")]
        public NameTag[] NameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of connection to Blow Out Preventer.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Type of connection to Blow Out Preventer.")]
        public string TypeConnectionBop {
            get {
                return this.typeConnectionBopField;
            }
            set {
                this.typeConnectionBopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Size of connection to Blow Out Preventer.</summary>
        [System.ComponentModel.DescriptionAttribute("Size of connection to Blow Out Preventer.")]
        public LengthMeasure SizeConnectionBop {
            get {
                return this.sizeConnectionBopField;
            }
            set {
                this.sizeConnectionBopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum Pressure rating of Blow Out Preventer.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Maximum Pressure rating of Blow Out Preventer.")]
        public PressureMeasure PresBopRating {
            get {
                return this.presBopRatingField;
            }
            set {
                this.presBopRatingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum tubulars passable through Blow Out Preventer.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Maximum tubulars passable through Blow Out Preventer.")]
        public LengthMeasure SizeBopSys {
            get {
                return this.sizeBopSysField;
            }
            set {
                this.sizeBopSysField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is this a Rotating Blow Out Preventer? Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is this a Rotating Blow Out Preventer? Values are \"true\" (or \"1\") and \"false\" (or" +
            " \"0\").")]
        public bool RotBop {
            get {
                return this.rotBopField;
            }
            set {
                this.rotBopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RotBopSpecified {
            get {
                return this.rotBopFieldSpecified;
            }
            set {
                this.rotBopFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of Booster Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of Booster Line.")]
        public LengthMeasure IdBoosterLine {
            get {
                return this.idBoosterLineField;
            }
            set {
                this.idBoosterLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outer diameter of Booster Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Outer diameter of Booster Line.")]
        public LengthMeasure OdBoosterLine {
            get {
                return this.odBoosterLineField;
            }
            set {
                this.odBoosterLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of Booster Line along riser.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of Booster Line along riser.")]
        public LengthMeasure LenBoosterLine {
            get {
                return this.lenBoosterLineField;
            }
            set {
                this.lenBoosterLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of Surface Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of Surface Line.")]
        public LengthMeasure IdSurfLine {
            get {
                return this.idSurfLineField;
            }
            set {
                this.idSurfLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outer diameter of Surface Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Outer diameter of Surface Line.")]
        public LengthMeasure OdSurfLine {
            get {
                return this.odSurfLineField;
            }
            set {
                this.odSurfLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of Choke Line along riser.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of Choke Line along riser.")]
        public LengthMeasure LenSurfLine {
            get {
                return this.lenSurfLineField;
            }
            set {
                this.lenSurfLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of Choke Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of Choke Line.")]
        public LengthMeasure IdChkLine {
            get {
                return this.idChkLineField;
            }
            set {
                this.idChkLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outer diameter of Choke Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Outer diameter of Choke Line.")]
        public LengthMeasure OdChkLine {
            get {
                return this.odChkLineField;
            }
            set {
                this.odChkLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of Choke Line along riser.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of Choke Line along riser.")]
        public LengthMeasure LenChkLine {
            get {
                return this.lenChkLineField;
            }
            set {
                this.lenChkLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of Kill Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of Kill Line.")]
        public LengthMeasure IdKillLine {
            get {
                return this.idKillLineField;
            }
            set {
                this.idKillLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outer diameter of Kill Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Outer diameter of Kill Line.")]
        public LengthMeasure OdKillLine {
            get {
                return this.odKillLineField;
            }
            set {
                this.odKillLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of Kill Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of Kill Line.")]
        public LengthMeasure LenKillLine {
            get {
                return this.lenKillLineField;
            }
            set {
                this.lenKillLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diverter description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Diverter description.")]
        public string TypeDiverter {
            get {
                return this.typeDiverterField;
            }
            set {
                this.typeDiverterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of diverter.</summary>
        [System.ComponentModel.DescriptionAttribute("Diameter of diverter.")]
        public LengthMeasure DiaDiverter {
            get {
                return this.diaDiverterField;
            }
            set {
                this.diaDiverterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Working rating pressure of the component.</summary>
        [System.ComponentModel.DescriptionAttribute("Working rating pressure of the component.")]
        public PressureMeasure PresWorkDiverter {
            get {
                return this.presWorkDiverterField;
            }
            set {
                this.presWorkDiverterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of accumulator/description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Type of accumulator/description.")]
        public string Accumulator {
            get {
                return this.accumulatorField;
            }
            set {
                this.accumulatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Accumulator fluid capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Accumulator fluid capacity.")]
        public VolumeMeasure CapAccFluid {
            get {
                return this.capAccFluidField;
            }
            set {
                this.capAccFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Accumulator pre-charge pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Accumulator pre-charge pressure.")]
        public PressureMeasure PresAccPreCharge {
            get {
                return this.presAccPreChargeField;
            }
            set {
                this.presAccPreChargeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Accumulator pre-charge volume</summary>
        [System.ComponentModel.DescriptionAttribute("Accumulator pre-charge volume")]
        public VolumeMeasure VolAccPreCharge {
            get {
                return this.volAccPreChargeField;
            }
            set {
                this.volAccPreChargeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Accumulator operating pressure rating.</summary>
        [System.ComponentModel.DescriptionAttribute("Accumulator operating pressure rating.")]
        public PressureMeasure PresAccOpRating {
            get {
                return this.presAccOpRatingField;
            }
            set {
                this.presAccOpRatingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Blow Out Preventer Control System.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Blow Out Preventer Control System.")]
        public string TypeControlManifold {
            get {
                return this.typeControlManifoldField;
            }
            set {
                this.typeControlManifoldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of control system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Description of control system.")]
        public string DescControlManifold {
            get {
                return this.descControlManifoldField;
            }
            set {
                this.descControlManifoldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of choke manifold.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Type of choke manifold.")]
        public string TypeChokeManifold {
            get {
                return this.typeChokeManifoldField;
            }
            set {
                this.typeChokeManifoldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Choke manifold pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Choke manifold pressure.")]
        public PressureMeasure PresChokeManifold {
            get {
                return this.presChokeManifoldField;
            }
            set {
                this.presChokeManifoldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BopComponent")]
        public BopComponent[] BopComponent {
            get {
                return this.bopComponentField;
            }
            set {
                this.bopComponentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Shaker {
        
        private string nameField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private string dTimInstallField;
        
        private string dTimRemoveField;
        
        private string typeField;
        
        private string locationShakerField;
        
        private int numDecksField;
        
        private bool numDecksFieldSpecified;
        
        private int numCascLevelField;
        
        private bool numCascLevelFieldSpecified;
        
        private bool mudCleanerField;
        
        private bool mudCleanerFieldSpecified;
        
        private VolumePerTimeMeasure capFlowField;
        
        private string ownerField;
        
        private LengthMeasure sizeMeshMnField;
        
        private NameTag[] nameTagField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the shaker.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the shaker.")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturers designated model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturers designated model.")]
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of installation.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time of installation.")]
        public string DTimInstall {
            get {
                return this.dTimInstallField;
            }
            set {
                this.dTimInstallField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Removal date and time.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Removal date and time.")]
        public string DTimRemove {
            get {
                return this.dTimRemoveField;
            }
            set {
                this.dTimRemoveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description for the type of object.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description for the type of object.")]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Shaker location on rig.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Shaker location on rig.")]
        public string LocationShaker {
            get {
                return this.locationShakerField;
            }
            set {
                this.locationShakerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of decks.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of decks.")]
        public int NumDecks {
            get {
                return this.numDecksField;
            }
            set {
                this.numDecksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumDecksSpecified {
            get {
                return this.numDecksFieldSpecified;
            }
            set {
                this.numDecksFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of cascade levels.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of cascade levels.")]
        public int NumCascLevel {
            get {
                return this.numCascLevelField;
            }
            set {
                this.numCascLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumCascLevelSpecified {
            get {
                return this.numCascLevelFieldSpecified;
            }
            set {
                this.numCascLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is part of mud cleaning assembly as opposed to discrete Shale Shaker.   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is part of mud cleaning assembly as opposed to discrete Shale Shaker.   Values ar" +
            "e \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool MudCleaner {
            get {
                return this.mudCleanerField;
            }
            set {
                this.mudCleanerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MudCleanerSpecified {
            get {
                return this.mudCleanerFieldSpecified;
            }
            set {
                this.mudCleanerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum pump rate at which the unit will efficiently operate.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum pump rate at which the unit will efficiently operate.")]
        public VolumePerTimeMeasure CapFlow {
            get {
                return this.capFlowField;
            }
            set {
                this.capFlowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contractor/owner.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Contractor/owner.")]
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum mesh size.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum mesh size.")]
        public LengthMeasure SizeMeshMn {
            get {
                return this.sizeMeshMnField;
            }
            set {
                this.sizeMeshMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the shaker. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("NameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the shaker. A serial number is a type of identification" +
            " tag however some tags contain many pieces of information. This structure just i" +
            "dentifies the tag and does not describe the contents.")]
        public NameTag[] NameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DepthRegTrackCurve {
        
        private string curveInfoField;
        
        private LineStyle lineStyleField;
        
        private string lineWeightField;
        
        private string lineColorField;
        
        private ScaleType curveScaleTypeField;
        
        private string curveUnitField;
        
        private double curveLeftScaleValueField;
        
        private double curveRightScaleValueField;
        
        private BackupScaleType curveBackupScaleTypeField;
        
        private DepthRegRectangle[] curveScaleRectField;
        
        private string descriptionField;
        
        private string uidField;
        
        /// <remarks/>
        public string CurveInfo {
            get {
                return this.curveInfoField;
            }
            set {
                this.curveInfoField = value;
            }
        }
        
        /// <remarks/>
        public LineStyle LineStyle {
            get {
                return this.lineStyleField;
            }
            set {
                this.lineStyleField = value;
            }
        }
        
        /// <remarks/>
        public string LineWeight {
            get {
                return this.lineWeightField;
            }
            set {
                this.lineWeightField = value;
            }
        }
        
        /// <remarks/>
        public string LineColor {
            get {
                return this.lineColorField;
            }
            set {
                this.lineColorField = value;
            }
        }
        
        /// <remarks/>
        public ScaleType CurveScaleType {
            get {
                return this.curveScaleTypeField;
            }
            set {
                this.curveScaleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CurveUnit {
            get {
                return this.curveUnitField;
            }
            set {
                this.curveUnitField = value;
            }
        }
        
        /// <remarks/>
        public double CurveLeftScaleValue {
            get {
                return this.curveLeftScaleValueField;
            }
            set {
                this.curveLeftScaleValueField = value;
            }
        }
        
        /// <remarks/>
        public double CurveRightScaleValue {
            get {
                return this.curveRightScaleValueField;
            }
            set {
                this.curveRightScaleValueField = value;
            }
        }
        
        /// <remarks/>
        public BackupScaleType CurveBackupScaleType {
            get {
                return this.curveBackupScaleTypeField;
            }
            set {
                this.curveBackupScaleTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CurveScaleRect")]
        public DepthRegRectangle[] CurveScaleRect {
            get {
                return this.curveScaleRectField;
            }
            set {
                this.curveScaleRectField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum LineStyle {
        
        /// <remarks/>
        dashed,
        
        /// <remarks/>
        solid,
        
        /// <remarks/>
        dotted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("short dashed")]
        shortdashed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("long dashed")]
        longdashed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ScaleType {
        
        /// <remarks/>
        linear,
        
        /// <remarks/>
        logarithmic,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum BackupScaleType {
        
        /// <remarks/>
        x10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("offscale left/right")]
        offscaleleftright,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DepthRegRectangle {
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private DepthRegPoint llField;
        
        private DepthRegPoint urField;
        
        private DepthRegPoint ulField;
        
        private DepthRegPoint lrField;
        
        private string uidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public DepthRegPoint Ll {
            get {
                return this.llField;
            }
            set {
                this.llField = value;
            }
        }
        
        /// <remarks/>
        public DepthRegPoint Ur {
            get {
                return this.urField;
            }
            set {
                this.urField = value;
            }
        }
        
        /// <remarks/>
        public DepthRegPoint Ul {
            get {
                return this.ulField;
            }
            set {
                this.ulField = value;
            }
        }
        
        /// <remarks/>
        public DepthRegPoint Lr {
            get {
                return this.lrField;
            }
            set {
                this.lrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DepthRegPoint {
        
        private long xField;
        
        private long yField;
        
        /// <remarks/>
        public long X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public long Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DepthRegTrack {
        
        private string nameField;
        
        private LogTrackType typeField;
        
        private long leftEdgeField;
        
        private long rightEdgeField;
        
        private DepthRegRectangle[] trackCurveScaleRectField;
        
        private ExtensionNameValue[] txtensionNameValueField;
        
        private DepthRegTrackCurve[] associatedCurveField;
        
        private string uidField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public LogTrackType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public long LeftEdge {
            get {
                return this.leftEdgeField;
            }
            set {
                this.leftEdgeField = value;
            }
        }
        
        /// <remarks/>
        public long RightEdge {
            get {
                return this.rightEdgeField;
            }
            set {
                this.rightEdgeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TrackCurveScaleRect")]
        public DepthRegRectangle[] TrackCurveScaleRect {
            get {
                return this.trackCurveScaleRectField;
            }
            set {
                this.trackCurveScaleRectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TxtensionNameValue")]
        public ExtensionNameValue[] TxtensionNameValue {
            get {
                return this.txtensionNameValueField;
            }
            set {
                this.txtensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AssociatedCurve")]
        public DepthRegTrackCurve[] AssociatedCurve {
            get {
                return this.associatedCurveField;
            }
            set {
                this.associatedCurveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum LogTrackType {
        
        /// <remarks/>
        curves,
        
        /// <remarks/>
        data,
        
        /// <remarks/>
        depth,
        
        /// <remarks/>
        traces,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DepthRegCalibrationPoint {
        
        private GenericMeasure indexField;
        
        private string trackField;
        
        private CalibrationPointRole roleField;
        
        private string curveNameField;
        
        private DimensionlessMeasure fractionField;
        
        private string[] commentField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private DepthRegParameter[] parameterField;
        
        private DepthRegPoint pointField;
        
        private string uidField;
        
        /// <remarks/>
        public GenericMeasure Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public string Track {
            get {
                return this.trackField;
            }
            set {
                this.trackField = value;
            }
        }
        
        /// <remarks/>
        public CalibrationPointRole Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        public string CurveName {
            get {
                return this.curveNameField;
            }
            set {
                this.curveNameField = value;
            }
        }
        
        /// <remarks/>
        public DimensionlessMeasure Fraction {
            get {
                return this.fractionField;
            }
            set {
                this.fractionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Comment")]
        public string[] Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Parameter")]
        public DepthRegParameter[] Parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        public DepthRegPoint Point {
            get {
                return this.pointField;
            }
            set {
                this.pointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum CalibrationPointRole {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("left edge")]
        leftedge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("right edge")]
        rightedge,
        
        /// <remarks/>
        fraction,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DepthRegParameter {
        
        private string mnemonicField;
        
        private string dictionaryField;
        
        private GenericMeasure topIndexField;
        
        private GenericMeasure bottomIndexField;
        
        private GenericMeasure valueField;
        
        private string descriptionField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        public string Mnemonic {
            get {
                return this.mnemonicField;
            }
            set {
                this.mnemonicField = value;
            }
        }
        
        /// <remarks/>
        public string Dictionary {
            get {
                return this.dictionaryField;
            }
            set {
                this.dictionaryField = value;
            }
        }
        
        /// <remarks/>
        public GenericMeasure TopIndex {
            get {
                return this.topIndexField;
            }
            set {
                this.topIndexField = value;
            }
        }
        
        /// <remarks/>
        public GenericMeasure BottomIndex {
            get {
                return this.bottomIndexField;
            }
            set {
                this.bottomIndexField = value;
            }
        }
        
        /// <remarks/>
        public GenericMeasure Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DepthRegLogSection {
        
        private long logSectionSequenceNumberField;
        
        private LogSectionType logSectionTypeField;
        
        private bool logSectionTypeFieldSpecified;
        
        private string logSectionNameField;
        
        private string logMatrixField;
        
        private LengthMeasure scaleNumeratorField;
        
        private GenericMeasure scaleDenominatorField;
        
        private LogIndexType indexTypeField;
        
        private string indexUomField;
        
        private ElevCodeEnum indexReferenceField;
        
        private bool indexReferenceFieldSpecified;
        
        private DataObjectReference logField;
        
        private GenericMeasure minIntervalField;
        
        private GenericMeasure maxIntervalField;
        
        private string verticalLabelField;
        
        private string verticalRatioField;
        
        private string commentField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private DepthRegParameter[] parameterField;
        
        private DepthRegRectangle[] lowerCurveScaleRectField;
        
        private DepthRegRectangle[] logSectionRectField;
        
        private DepthRegRectangle[] upperCurveScaleRectField;
        
        private DepthRegRectangle[] whitespaceField;
        
        private DepthRegCalibrationPoint[] calibrationPointField;
        
        private DepthRegTrack[] trackField;
        
        private string uidField;
        
        /// <remarks/>
        public long LogSectionSequenceNumber {
            get {
                return this.logSectionSequenceNumberField;
            }
            set {
                this.logSectionSequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public LogSectionType LogSectionType {
            get {
                return this.logSectionTypeField;
            }
            set {
                this.logSectionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LogSectionTypeSpecified {
            get {
                return this.logSectionTypeFieldSpecified;
            }
            set {
                this.logSectionTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string LogSectionName {
            get {
                return this.logSectionNameField;
            }
            set {
                this.logSectionNameField = value;
            }
        }
        
        /// <remarks/>
        public string LogMatrix {
            get {
                return this.logMatrixField;
            }
            set {
                this.logMatrixField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure ScaleNumerator {
            get {
                return this.scaleNumeratorField;
            }
            set {
                this.scaleNumeratorField = value;
            }
        }
        
        /// <remarks/>
        public GenericMeasure ScaleDenominator {
            get {
                return this.scaleDenominatorField;
            }
            set {
                this.scaleDenominatorField = value;
            }
        }
        
        /// <remarks/>
        public LogIndexType IndexType {
            get {
                return this.indexTypeField;
            }
            set {
                this.indexTypeField = value;
            }
        }
        
        /// <remarks/>
        public string IndexUom {
            get {
                return this.indexUomField;
            }
            set {
                this.indexUomField = value;
            }
        }
        
        /// <remarks/>
        public ElevCodeEnum IndexReference {
            get {
                return this.indexReferenceField;
            }
            set {
                this.indexReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexReferenceSpecified {
            get {
                return this.indexReferenceFieldSpecified;
            }
            set {
                this.indexReferenceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference Log {
            get {
                return this.logField;
            }
            set {
                this.logField = value;
            }
        }
        
        /// <remarks/>
        public GenericMeasure MinInterval {
            get {
                return this.minIntervalField;
            }
            set {
                this.minIntervalField = value;
            }
        }
        
        /// <remarks/>
        public GenericMeasure MaxInterval {
            get {
                return this.maxIntervalField;
            }
            set {
                this.maxIntervalField = value;
            }
        }
        
        /// <remarks/>
        public string VerticalLabel {
            get {
                return this.verticalLabelField;
            }
            set {
                this.verticalLabelField = value;
            }
        }
        
        /// <remarks/>
        public string VerticalRatio {
            get {
                return this.verticalRatioField;
            }
            set {
                this.verticalRatioField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Parameter")]
        public DepthRegParameter[] Parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LowerCurveScaleRect")]
        public DepthRegRectangle[] LowerCurveScaleRect {
            get {
                return this.lowerCurveScaleRectField;
            }
            set {
                this.lowerCurveScaleRectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LogSectionRect")]
        public DepthRegRectangle[] LogSectionRect {
            get {
                return this.logSectionRectField;
            }
            set {
                this.logSectionRectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UpperCurveScaleRect")]
        public DepthRegRectangle[] UpperCurveScaleRect {
            get {
                return this.upperCurveScaleRectField;
            }
            set {
                this.upperCurveScaleRectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Whitespace")]
        public DepthRegRectangle[] Whitespace {
            get {
                return this.whitespaceField;
            }
            set {
                this.whitespaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CalibrationPoint")]
        public DepthRegCalibrationPoint[] CalibrationPoint {
            get {
                return this.calibrationPointField;
            }
            set {
                this.calibrationPointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Track")]
        public DepthRegTrack[] Track {
            get {
                return this.trackField;
            }
            set {
                this.trackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum LogSectionType {
        
        /// <remarks/>
        main,
        
        /// <remarks/>
        repeat,
        
        /// <remarks/>
        calibration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tie in")]
        tiein,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("going in hole")]
        goinginhole,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum LogIndexType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("date time")]
        datetime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("elapsed time")]
        elapsedtime,
        
        /// <remarks/>
        length,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("measured depth")]
        measureddepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("vertical depth")]
        verticaldepth,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ElevCodeEnum {
        
        /// <remarks/>
        CF,
        
        /// <remarks/>
        CV,
        
        /// <remarks/>
        DF,
        
        /// <remarks/>
        GL,
        
        /// <remarks/>
        KB,
        
        /// <remarks/>
        RB,
        
        /// <remarks/>
        RT,
        
        /// <remarks/>
        SF,
        
        /// <remarks/>
        LAT,
        
        /// <remarks/>
        SL,
        
        /// <remarks/>
        MHHW,
        
        /// <remarks/>
        MHW,
        
        /// <remarks/>
        MLLW,
        
        /// <remarks/>
        MLW,
        
        /// <remarks/>
        MTL,
        
        /// <remarks/>
        KO,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DepthRegLogRect {
        
        private LogRectangeType typeField;
        
        private bool typeFieldSpecified;
        
        private string nameField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private DepthRegRectangle positionField;
        
        private string uidField;
        
        /// <remarks/>
        public LogRectangeType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public DepthRegRectangle position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum LogRectangeType {
        
        /// <remarks/>
        header,
        
        /// <remarks/>
        alternate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class DigitalStorageMeasure {
        
        private DigitalStorageUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DigitalStorageUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum DigitalStorageUom {
        
        /// <remarks/>
        bit,
        
        /// <remarks/>
        @byte,
        
        /// <remarks/>
        Kibyte,
        
        /// <remarks/>
        Mibyte,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class MemberObject {
        
        private LogIndexType indexTypeField;
        
        private bool indexTypeFieldSpecified;
        
        private GenericMeasure rangeMinField;
        
        private GenericMeasure rangeMaxField;
        
        private string rangeDateTimeMinField;
        
        private string rangeDateTimeMaxField;
        
        private string mnemonicListField;
        
        private MeasuredDepthCoord referenceDepthField;
        
        private string referenceDateTimeField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private ObjectSequence sequence3Field;
        
        private DataObjectReference objectReferenceField;
        
        private ObjectSequence sequence1Field;
        
        private IndexedObject[] paramField;
        
        private ObjectSequence sequence2Field;
        
        private string uidField;
        
        /// <remarks/>
        public LogIndexType IndexType {
            get {
                return this.indexTypeField;
            }
            set {
                this.indexTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexTypeSpecified {
            get {
                return this.indexTypeFieldSpecified;
            }
            set {
                this.indexTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public GenericMeasure RangeMin {
            get {
                return this.rangeMinField;
            }
            set {
                this.rangeMinField = value;
            }
        }
        
        /// <remarks/>
        public GenericMeasure RangeMax {
            get {
                return this.rangeMaxField;
            }
            set {
                this.rangeMaxField = value;
            }
        }
        
        /// <remarks/>
        public string RangeDateTimeMin {
            get {
                return this.rangeDateTimeMinField;
            }
            set {
                this.rangeDateTimeMinField = value;
            }
        }
        
        /// <remarks/>
        public string RangeDateTimeMax {
            get {
                return this.rangeDateTimeMaxField;
            }
            set {
                this.rangeDateTimeMaxField = value;
            }
        }
        
        /// <remarks/>
        public string MnemonicList {
            get {
                return this.mnemonicListField;
            }
            set {
                this.mnemonicListField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord ReferenceDepth {
            get {
                return this.referenceDepthField;
            }
            set {
                this.referenceDepthField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceDateTime {
            get {
                return this.referenceDateTimeField;
            }
            set {
                this.referenceDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public ObjectSequence Sequence3 {
            get {
                return this.sequence3Field;
            }
            set {
                this.sequence3Field = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference ObjectReference {
            get {
                return this.objectReferenceField;
            }
            set {
                this.objectReferenceField = value;
            }
        }
        
        /// <remarks/>
        public ObjectSequence Sequence1 {
            get {
                return this.sequence1Field;
            }
            set {
                this.sequence1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Param")]
        public IndexedObject[] Param {
            get {
                return this.paramField;
            }
            set {
                this.paramField = value;
            }
        }
        
        /// <remarks/>
        public ObjectSequence Sequence2 {
            get {
                return this.sequence2Field;
            }
            set {
                this.sequence2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class ObjectSequence {
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class IndexedObject {
        
        private int indexField;
        
        private bool indexFieldSpecified;
        
        private string nameField;
        
        private string uomField;
        
        private string descriptionField;
        
        private string uidField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool indexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Participant {
        
        private ExtensionNameValue[] extNameValuesField;
        
        private MemberObject[] participant1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtNameValues")]
        public ExtensionNameValue[] ExtNameValues {
            get {
                return this.extNameValuesField;
            }
            set {
                this.extNameValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Participant")]
        public MemberObject[] Participant1 {
            get {
                return this.participant1Field;
            }
            set {
                this.participant1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DownholeStringRef {
        
        private string[] stringEquipmentRefIDField;
        
        private string downholeStringRefIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StringEquipmentRefID")]
        public string[] StringEquipmentRefID {
            get {
                return this.stringEquipmentRefIDField;
            }
            set {
                this.stringEquipmentRefIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string downholeStringRefID {
            get {
                return this.downholeStringRefIDField;
            }
            set {
                this.downholeStringRefIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class BoreholeStringRef {
        
        private string[] stringEquipmentRefIDField;
        
        private string boreholeStringRefIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StringEquipmentRefID")]
        public string[] StringEquipmentRefID {
            get {
                return this.stringEquipmentRefIDField;
            }
            set {
                this.stringEquipmentRefIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string boreholeStringRefID {
            get {
                return this.boreholeStringRefIDField;
            }
            set {
                this.boreholeStringRefIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DownholeComponentRef {
        
        private string[] stringEquipmentRefIDField;
        
        private string[] perforationSetRefIDField;
        
        private BoreholeStringRef[] boreholeStringRefField;
        
        private DownholeStringRef[] downholeStringsRefField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StringEquipmentRefID")]
        public string[] StringEquipmentRefID {
            get {
                return this.stringEquipmentRefIDField;
            }
            set {
                this.stringEquipmentRefIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PerforationSetRefID")]
        public string[] PerforationSetRefID {
            get {
                return this.perforationSetRefIDField;
            }
            set {
                this.perforationSetRefIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BoreholeStringRef")]
        public BoreholeStringRef[] BoreholeStringRef {
            get {
                return this.boreholeStringRefField;
            }
            set {
                this.boreholeStringRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DownholeStringsRef")]
        public DownholeStringRef[] DownholeStringsRef {
            get {
                return this.downholeStringsRefField;
            }
            set {
                this.downholeStringsRefField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class WaitingOnExtension {
        
        private string subCategoryField;
        
        private string chargeTypeCodeField;
        
        private string businessOrgWaitingOnField;
        
        private bool isNoChargeToProducerField;
        
        private bool isNoChargeToProducerFieldSpecified;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        public string SubCategory {
            get {
                return this.subCategoryField;
            }
            set {
                this.subCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string ChargeTypeCode {
            get {
                return this.chargeTypeCodeField;
            }
            set {
                this.chargeTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BusinessOrgWaitingOn {
            get {
                return this.businessOrgWaitingOnField;
            }
            set {
                this.businessOrgWaitingOnField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNoChargeToProducer {
            get {
                return this.isNoChargeToProducerField;
            }
            set {
                this.isNoChargeToProducerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsNoChargeToProducerSpecified {
            get {
                return this.isNoChargeToProducerFieldSpecified;
            }
            set {
                this.isNoChargeToProducerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class CustomData {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class BHPExtension {
        
        private string bHPRefIDField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        public string BHPRefID {
            get {
                return this.bHPRefIDField;
            }
            set {
                this.bHPRefIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class LostCirculationExtension {
        
        private VolumeMeasure volumeLostField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        public VolumeMeasure VolumeLost {
            get {
                return this.volumeLostField;
            }
            set {
                this.volumeLostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class CleanFillExtension {
        
        private string fillCleaningMethodField;
        
        private LengthMeasure toolSizeField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        public string FillCleaningMethod {
            get {
                return this.fillCleaningMethodField;
            }
            set {
                this.fillCleaningMethodField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure ToolSize {
            get {
                return this.toolSizeField;
            }
            set {
                this.toolSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class JobExtension {
        
        private string jobReasonField;
        
        private string jobStatusField;
        
        private string primaryMotivationForJobField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        public string JobReason {
            get {
                return this.jobReasonField;
            }
            set {
                this.jobReasonField = value;
            }
        }
        
        /// <remarks/>
        public string JobStatus {
            get {
                return this.jobStatusField;
            }
            set {
                this.jobStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryMotivationForJob {
            get {
                return this.primaryMotivationForJobField;
            }
            set {
                this.primaryMotivationForJobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class AcidizefracExtension {
        
        private string stimJobIDField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        public string StimJobID {
            get {
                return this.stimJobIDField;
            }
            set {
                this.stimJobIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DirectionalSurveyExtension {
        
        private string trajectoryRefIDField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        public string TrajectoryRefID {
            get {
                return this.trajectoryRefIDField;
            }
            set {
                this.trajectoryRefIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class CementExtension {
        
        private string cementJobRefIDField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        public string CementJobRefID {
            get {
                return this.cementJobRefIDField;
            }
            set {
                this.cementJobRefIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DownholeExtension {
        
        private string downholeComponentRefIDField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        public string DownholeComponentRefID {
            get {
                return this.downholeComponentRefIDField;
            }
            set {
                this.downholeComponentRefIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class FluidReportExtension {
        
        private string fluidReportRefIDField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        public string FluidReportRefID {
            get {
                return this.fluidReportRefIDField;
            }
            set {
                this.fluidReportRefIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Perforating {
        
        private int stageNumberField;
        
        private bool stageNumberFieldSpecified;
        
        private MeasuredDepthCoord bottomPackerSetField;
        
        private string perforationFluidTypeField;
        
        private PressureMeasure hydrostaticPressureField;
        
        private PressureMeasure surfacePressureField;
        
        private PressureMeasure reservoirPressureField;
        
        private MassPerMassMeasure fluidDensityField;
        
        private MeasuredDepthCoord fluidLevelField;
        
        private string conveyanceMethodField;
        
        private int shotsPlannedField;
        
        private bool shotsPlannedFieldSpecified;
        
        private ReciprocalLengthMeasure shotsDensityField;
        
        private int shotsMisfiredField;
        
        private bool shotsMisfiredFieldSpecified;
        
        private string orientationField;
        
        private string orientationMethodField;
        
        private string perforationCompanyField;
        
        private string carrierManufacturerField;
        
        private LengthMeasure carrierSizeField;
        
        private string carrierDescriptionField;
        
        private string chargeManufacturerField;
        
        private LengthMeasure chargeSizeField;
        
        private MassMeasure chargeWeightField;
        
        private string chargeTypeField;
        
        private string refLogField;
        
        private string gunCentralizedField;
        
        private LengthMeasure gunSizeField;
        
        private string gunDesciptionField;
        
        private bool gunLeftInHoleField;
        
        private bool gunLeftInHoleFieldSpecified;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        /// <remarks/>
        public int StageNumber {
            get {
                return this.stageNumberField;
            }
            set {
                this.stageNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StageNumberSpecified {
            get {
                return this.stageNumberFieldSpecified;
            }
            set {
                this.stageNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord BottomPackerSet {
            get {
                return this.bottomPackerSetField;
            }
            set {
                this.bottomPackerSetField = value;
            }
        }
        
        /// <remarks/>
        public string PerforationFluidType {
            get {
                return this.perforationFluidTypeField;
            }
            set {
                this.perforationFluidTypeField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure HydrostaticPressure {
            get {
                return this.hydrostaticPressureField;
            }
            set {
                this.hydrostaticPressureField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure SurfacePressure {
            get {
                return this.surfacePressureField;
            }
            set {
                this.surfacePressureField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure ReservoirPressure {
            get {
                return this.reservoirPressureField;
            }
            set {
                this.reservoirPressureField = value;
            }
        }
        
        /// <remarks/>
        public MassPerMassMeasure FluidDensity {
            get {
                return this.fluidDensityField;
            }
            set {
                this.fluidDensityField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord FluidLevel {
            get {
                return this.fluidLevelField;
            }
            set {
                this.fluidLevelField = value;
            }
        }
        
        /// <remarks/>
        public string ConveyanceMethod {
            get {
                return this.conveyanceMethodField;
            }
            set {
                this.conveyanceMethodField = value;
            }
        }
        
        /// <remarks/>
        public int ShotsPlanned {
            get {
                return this.shotsPlannedField;
            }
            set {
                this.shotsPlannedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShotsPlannedSpecified {
            get {
                return this.shotsPlannedFieldSpecified;
            }
            set {
                this.shotsPlannedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ReciprocalLengthMeasure ShotsDensity {
            get {
                return this.shotsDensityField;
            }
            set {
                this.shotsDensityField = value;
            }
        }
        
        /// <remarks/>
        public int ShotsMisfired {
            get {
                return this.shotsMisfiredField;
            }
            set {
                this.shotsMisfiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShotsMisfiredSpecified {
            get {
                return this.shotsMisfiredFieldSpecified;
            }
            set {
                this.shotsMisfiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Orientation {
            get {
                return this.orientationField;
            }
            set {
                this.orientationField = value;
            }
        }
        
        /// <remarks/>
        public string OrientationMethod {
            get {
                return this.orientationMethodField;
            }
            set {
                this.orientationMethodField = value;
            }
        }
        
        /// <remarks/>
        public string PerforationCompany {
            get {
                return this.perforationCompanyField;
            }
            set {
                this.perforationCompanyField = value;
            }
        }
        
        /// <remarks/>
        public string CarrierManufacturer {
            get {
                return this.carrierManufacturerField;
            }
            set {
                this.carrierManufacturerField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure CarrierSize {
            get {
                return this.carrierSizeField;
            }
            set {
                this.carrierSizeField = value;
            }
        }
        
        /// <remarks/>
        public string CarrierDescription {
            get {
                return this.carrierDescriptionField;
            }
            set {
                this.carrierDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ChargeManufacturer {
            get {
                return this.chargeManufacturerField;
            }
            set {
                this.chargeManufacturerField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure ChargeSize {
            get {
                return this.chargeSizeField;
            }
            set {
                this.chargeSizeField = value;
            }
        }
        
        /// <remarks/>
        public MassMeasure ChargeWeight {
            get {
                return this.chargeWeightField;
            }
            set {
                this.chargeWeightField = value;
            }
        }
        
        /// <remarks/>
        public string ChargeType {
            get {
                return this.chargeTypeField;
            }
            set {
                this.chargeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string RefLog {
            get {
                return this.refLogField;
            }
            set {
                this.refLogField = value;
            }
        }
        
        /// <remarks/>
        public string GunCentralized {
            get {
                return this.gunCentralizedField;
            }
            set {
                this.gunCentralizedField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure GunSize {
            get {
                return this.gunSizeField;
            }
            set {
                this.gunSizeField = value;
            }
        }
        
        /// <remarks/>
        public string GunDesciption {
            get {
                return this.gunDesciptionField;
            }
            set {
                this.gunDesciptionField = value;
            }
        }
        
        /// <remarks/>
        public bool GunLeftInHole {
            get {
                return this.gunLeftInHoleField;
            }
            set {
                this.gunLeftInHoleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GunLeftInHoleSpecified {
            get {
                return this.gunLeftInHoleFieldSpecified;
            }
            set {
                this.gunLeftInHoleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class MassPerMassMeasure {
        
        private MassPerMassUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public MassPerMassUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum MassPerMassUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%[mass]")]
        mass,
        
        /// <remarks/>
        Euc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/kg")]
        gkg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/t")]
        gt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/kg")]
        kgkg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/sack[94lbm]")]
        kgsack94lbm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/t")]
        kgt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/g")]
        mgg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/kg")]
        mgkg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ng/g")]
        ngg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ng/mg")]
        ngmg,
        
        /// <remarks/>
        ppk,
        
        /// <remarks/>
        ppm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ppm[mass]")]
        ppmmass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ug/g")]
        ugg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ug/mg")]
        ugmg,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ReciprocalLengthMeasure {
        
        private ReciprocalLengthUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ReciprocalLengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum ReciprocalLengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/angstrom")]
        Item1angstrom,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/cm")]
        Item1cm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/ft")]
        Item1ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/in")]
        Item1in,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/m")]
        Item1m,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/mi")]
        Item1mi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/mm")]
        Item1mm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/nm")]
        Item1nm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/yd")]
        Item1yd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1E-9 1/ft")]
        Item1E91ft,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class PerforatingExtension {
        
        private string perforationSetRefIDField;
        
        private CustomData extensionAnyField;
        
        private Perforating[] perforatingField;
        
        /// <remarks/>
        public string PerforationSetRefID {
            get {
                return this.perforationSetRefIDField;
            }
            set {
                this.perforationSetRefIDField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Perforating")]
        public Perforating[] Perforating {
            get {
                return this.perforatingField;
            }
            set {
                this.perforatingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class PressureTestExtension {
        
        private LengthMeasure diaOrificeSizeField;
        
        private string dTimeNextTestDateField;
        
        private VolumePerTimeMeasure flowrateRateBledField;
        
        private string identifierJobField;
        
        private bool isSuccessField;
        
        private bool isSuccessFieldSpecified;
        
        private PressureMeasure maxPressureDurationField;
        
        private string circulatingPositionField;
        
        private string fluidBledTypeField;
        
        private string orientationMethodField;
        
        private string testFluidTypeField;
        
        private string testSubTypeField;
        
        private string testTypeField;
        
        private PressureMeasure annulusPressureField;
        
        private string wellPressureUsedField;
        
        private string str10ReferenceField;
        
        private string uidAssemblyField;
        
        private VolumeMeasure volumeBledField;
        
        private VolumeMeasure volumeLostField;
        
        private VolumeMeasure volumePumpedField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        public LengthMeasure DiaOrificeSize {
            get {
                return this.diaOrificeSizeField;
            }
            set {
                this.diaOrificeSizeField = value;
            }
        }
        
        /// <remarks/>
        public string DTimeNextTestDate {
            get {
                return this.dTimeNextTestDateField;
            }
            set {
                this.dTimeNextTestDateField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerTimeMeasure FlowrateRateBled {
            get {
                return this.flowrateRateBledField;
            }
            set {
                this.flowrateRateBledField = value;
            }
        }
        
        /// <remarks/>
        public string IdentifierJob {
            get {
                return this.identifierJobField;
            }
            set {
                this.identifierJobField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                this.isSuccessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSuccessSpecified {
            get {
                return this.isSuccessFieldSpecified;
            }
            set {
                this.isSuccessFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure MaxPressureDuration {
            get {
                return this.maxPressureDurationField;
            }
            set {
                this.maxPressureDurationField = value;
            }
        }
        
        /// <remarks/>
        public string CirculatingPosition {
            get {
                return this.circulatingPositionField;
            }
            set {
                this.circulatingPositionField = value;
            }
        }
        
        /// <remarks/>
        public string FluidBledType {
            get {
                return this.fluidBledTypeField;
            }
            set {
                this.fluidBledTypeField = value;
            }
        }
        
        /// <remarks/>
        public string OrientationMethod {
            get {
                return this.orientationMethodField;
            }
            set {
                this.orientationMethodField = value;
            }
        }
        
        /// <remarks/>
        public string TestFluidType {
            get {
                return this.testFluidTypeField;
            }
            set {
                this.testFluidTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TestSubType {
            get {
                return this.testSubTypeField;
            }
            set {
                this.testSubTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TestType {
            get {
                return this.testTypeField;
            }
            set {
                this.testTypeField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure AnnulusPressure {
            get {
                return this.annulusPressureField;
            }
            set {
                this.annulusPressureField = value;
            }
        }
        
        /// <remarks/>
        public string WellPressureUsed {
            get {
                return this.wellPressureUsedField;
            }
            set {
                this.wellPressureUsedField = value;
            }
        }
        
        /// <remarks/>
        public string Str10Reference {
            get {
                return this.str10ReferenceField;
            }
            set {
                this.str10ReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string UidAssembly {
            get {
                return this.uidAssemblyField;
            }
            set {
                this.uidAssemblyField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolumeBled {
            get {
                return this.volumeBledField;
            }
            set {
                this.volumeBledField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolumeLost {
            get {
                return this.volumeLostField;
            }
            set {
                this.volumeLostField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolumePumped {
            get {
                return this.volumePumpedField;
            }
            set {
                this.volumePumpedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class EventExtension {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AcidizeFracExtension", typeof(AcidizefracExtension))]
        [System.Xml.Serialization.XmlElementAttribute("BHPExtension", typeof(BHPExtension))]
        [System.Xml.Serialization.XmlElementAttribute("CementExtension", typeof(CementExtension))]
        [System.Xml.Serialization.XmlElementAttribute("CleanFillExtension", typeof(CleanFillExtension))]
        [System.Xml.Serialization.XmlElementAttribute("DirectionalSurveyExtension", typeof(DirectionalSurveyExtension))]
        [System.Xml.Serialization.XmlElementAttribute("DownholeExtension", typeof(DownholeExtension))]
        [System.Xml.Serialization.XmlElementAttribute("FluidReportExtension", typeof(FluidReportExtension))]
        [System.Xml.Serialization.XmlElementAttribute("JobExtension", typeof(JobExtension))]
        [System.Xml.Serialization.XmlElementAttribute("LostCirculationExtension", typeof(LostCirculationExtension))]
        [System.Xml.Serialization.XmlElementAttribute("PerforationExtension", typeof(PerforatingExtension))]
        [System.Xml.Serialization.XmlElementAttribute("PressureTestExtension", typeof(PressureTestExtension))]
        [System.Xml.Serialization.XmlElementAttribute("WaitingOnExtension", typeof(WaitingOnExtension))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class EventType {
        
        private string classField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class PumpOp {
        
        private string dTimField;
        
        private int pumpField;
        
        private PumpOpType typeOperationField;
        
        private bool typeOperationFieldSpecified;
        
        private LengthMeasure idLinerField;
        
        private LengthMeasure lenStrokeField;
        
        private AngularVelocityMeasure rateStrokeField;
        
        private PressureMeasure pressureField;
        
        private PowerPerPowerMeasure pcEfficiencyField;
        
        private VolumePerTimeMeasure pumpOutputField;
        
        private MeasuredDepthCoord mdBitField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        public int Pump {
            get {
                return this.pumpField;
            }
            set {
                this.pumpField = value;
            }
        }
        
        /// <remarks/>
        public PumpOpType TypeOperation {
            get {
                return this.typeOperationField;
            }
            set {
                this.typeOperationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeOperationSpecified {
            get {
                return this.typeOperationFieldSpecified;
            }
            set {
                this.typeOperationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure IdLiner {
            get {
                return this.idLinerField;
            }
            set {
                this.idLinerField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure LenStroke {
            get {
                return this.lenStrokeField;
            }
            set {
                this.lenStrokeField = value;
            }
        }
        
        /// <remarks/>
        public AngularVelocityMeasure RateStroke {
            get {
                return this.rateStrokeField;
            }
            set {
                this.rateStrokeField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure Pressure {
            get {
                return this.pressureField;
            }
            set {
                this.pressureField = value;
            }
        }
        
        /// <remarks/>
        public PowerPerPowerMeasure PcEfficiency {
            get {
                return this.pcEfficiencyField;
            }
            set {
                this.pcEfficiencyField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerTimeMeasure PumpOutput {
            get {
                return this.pumpOutputField;
            }
            set {
                this.pumpOutputField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdBit {
            get {
                return this.mdBitField;
            }
            set {
                this.mdBitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum PumpOpType {
        
        /// <remarks/>
        drilling,
        
        /// <remarks/>
        reaming,
        
        /// <remarks/>
        circulating,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("slow pump")]
        slowpump,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class PitVolume {
        
        private int pitField;
        
        private string dTimField;
        
        private VolumeMeasure volPitField;
        
        private MassPerVolumeMeasure densFluidField;
        
        private string descFluidField;
        
        private TimeMeasure visFunnelField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        public int Pit {
            get {
                return this.pitField;
            }
            set {
                this.pitField = value;
            }
        }
        
        /// <remarks/>
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolPit {
            get {
                return this.volPitField;
            }
            set {
                this.volPitField = value;
            }
        }
        
        /// <remarks/>
        public MassPerVolumeMeasure DensFluid {
            get {
                return this.densFluidField;
            }
            set {
                this.densFluidField = value;
            }
        }
        
        /// <remarks/>
        public string DescFluid {
            get {
                return this.descFluidField;
            }
            set {
                this.descFluidField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure VisFunnel {
            get {
                return this.visFunnelField;
            }
            set {
                this.visFunnelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Scr {
        
        private string dTimField;
        
        private int pumpField;
        
        private ScrType typeScrField;
        
        private AngularVelocityMeasure rateStrokeField;
        
        private PressureMeasure presRecordedField;
        
        private MeasuredDepthCoord mdBitField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        public int Pump {
            get {
                return this.pumpField;
            }
            set {
                this.pumpField = value;
            }
        }
        
        /// <remarks/>
        public ScrType TypeScr {
            get {
                return this.typeScrField;
            }
            set {
                this.typeScrField = value;
            }
        }
        
        /// <remarks/>
        public AngularVelocityMeasure RateStroke {
            get {
                return this.rateStrokeField;
            }
            set {
                this.rateStrokeField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresRecorded {
            get {
                return this.presRecordedField;
            }
            set {
                this.presRecordedField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdBit {
            get {
                return this.mdBitField;
            }
            set {
                this.mdBitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ScrType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("string annulus")]
        stringannulus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("string kill line")]
        stringkillline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("string choke line")]
        stringchokeline,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DayCost {
        
        private string numAFEField;
        
        private string costGroupField;
        
        private string costClassField;
        
        private string costCodeField;
        
        private string costSubCodeField;
        
        private string costItemDescriptionField;
        
        private string itemKindField;
        
        private double itemSizeField;
        
        private bool itemSizeFieldSpecified;
        
        private int qtyItemField;
        
        private bool qtyItemFieldSpecified;
        
        private string numInvoiceField;
        
        private string numPOField;
        
        private string numTicketField;
        
        private bool isCarryOverField;
        
        private bool isCarryOverFieldSpecified;
        
        private bool isRentalField;
        
        private bool isRentalFieldSpecified;
        
        private NameTag[] nameTagField;
        
        private string numSerialField;
        
        private string nameVendorField;
        
        private string numVendorField;
        
        private string poolField;
        
        private bool estimatedField;
        
        private bool estimatedFieldSpecified;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private Cost costAmountField;
        
        private Cost costPerItemField;
        
        private string uidField;
        
        /// <remarks/>
        public string NumAFE {
            get {
                return this.numAFEField;
            }
            set {
                this.numAFEField = value;
            }
        }
        
        /// <remarks/>
        public string CostGroup {
            get {
                return this.costGroupField;
            }
            set {
                this.costGroupField = value;
            }
        }
        
        /// <remarks/>
        public string CostClass {
            get {
                return this.costClassField;
            }
            set {
                this.costClassField = value;
            }
        }
        
        /// <remarks/>
        public string CostCode {
            get {
                return this.costCodeField;
            }
            set {
                this.costCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CostSubCode {
            get {
                return this.costSubCodeField;
            }
            set {
                this.costSubCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CostItemDescription {
            get {
                return this.costItemDescriptionField;
            }
            set {
                this.costItemDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ItemKind {
            get {
                return this.itemKindField;
            }
            set {
                this.itemKindField = value;
            }
        }
        
        /// <remarks/>
        public double ItemSize {
            get {
                return this.itemSizeField;
            }
            set {
                this.itemSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemSizeSpecified {
            get {
                return this.itemSizeFieldSpecified;
            }
            set {
                this.itemSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int QtyItem {
            get {
                return this.qtyItemField;
            }
            set {
                this.qtyItemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QtyItemSpecified {
            get {
                return this.qtyItemFieldSpecified;
            }
            set {
                this.qtyItemFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string NumInvoice {
            get {
                return this.numInvoiceField;
            }
            set {
                this.numInvoiceField = value;
            }
        }
        
        /// <remarks/>
        public string NumPO {
            get {
                return this.numPOField;
            }
            set {
                this.numPOField = value;
            }
        }
        
        /// <remarks/>
        public string NumTicket {
            get {
                return this.numTicketField;
            }
            set {
                this.numTicketField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCarryOver {
            get {
                return this.isCarryOverField;
            }
            set {
                this.isCarryOverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCarryOverSpecified {
            get {
                return this.isCarryOverFieldSpecified;
            }
            set {
                this.isCarryOverFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsRental {
            get {
                return this.isRentalField;
            }
            set {
                this.isRentalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRentalSpecified {
            get {
                return this.isRentalFieldSpecified;
            }
            set {
                this.isRentalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NameTag")]
        public NameTag[] NameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        public string NumSerial {
            get {
                return this.numSerialField;
            }
            set {
                this.numSerialField = value;
            }
        }
        
        /// <remarks/>
        public string NameVendor {
            get {
                return this.nameVendorField;
            }
            set {
                this.nameVendorField = value;
            }
        }
        
        /// <remarks/>
        public string NumVendor {
            get {
                return this.numVendorField;
            }
            set {
                this.numVendorField = value;
            }
        }
        
        /// <remarks/>
        public string Pool {
            get {
                return this.poolField;
            }
            set {
                this.poolField = value;
            }
        }
        
        /// <remarks/>
        public bool Estimated {
            get {
                return this.estimatedField;
            }
            set {
                this.estimatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedSpecified {
            get {
                return this.estimatedFieldSpecified;
            }
            set {
                this.estimatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public Cost CostAmount {
            get {
                return this.costAmountField;
            }
            set {
                this.costAmountField = value;
            }
        }
        
        /// <remarks/>
        public Cost CostPerItem {
            get {
                return this.costPerItemField;
            }
            set {
                this.costPerItemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Cost {
        
        private string currencyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Personnel {
        
        private string companyField;
        
        private string typeServiceField;
        
        private int numPeopleField;
        
        private bool numPeopleFieldSpecified;
        
        private TimeMeasure totalTimeField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public string TypeService {
            get {
                return this.typeServiceField;
            }
            set {
                this.typeServiceField = value;
            }
        }
        
        /// <remarks/>
        public int NumPeople {
            get {
                return this.numPeopleField;
            }
            set {
                this.numPeopleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumPeopleSpecified {
            get {
                return this.numPeopleFieldSpecified;
            }
            set {
                this.numPeopleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure TotalTime {
            get {
                return this.totalTimeField;
            }
            set {
                this.totalTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class MudLosses {
        
        private VolumeMeasure volLostShakerSurfField;
        
        private VolumeMeasure volLostMudCleanerSurfField;
        
        private VolumeMeasure volLostPitsSurfField;
        
        private VolumeMeasure volLostTrippingSurfField;
        
        private VolumeMeasure volLostOtherSurfField;
        
        private VolumeMeasure volTotMudLostSurfField;
        
        private VolumeMeasure volLostCircHoleField;
        
        private VolumeMeasure volLostCsgHoleField;
        
        private VolumeMeasure volLostCmtHoleField;
        
        private VolumeMeasure volLostBhdCsgHoleField;
        
        private VolumeMeasure volLostAbandonHoleField;
        
        private VolumeMeasure volLostOtherHoleField;
        
        private VolumeMeasure volTotMudLostHoleField;
        
        /// <remarks/>
        public VolumeMeasure VolLostShakerSurf {
            get {
                return this.volLostShakerSurfField;
            }
            set {
                this.volLostShakerSurfField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolLostMudCleanerSurf {
            get {
                return this.volLostMudCleanerSurfField;
            }
            set {
                this.volLostMudCleanerSurfField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolLostPitsSurf {
            get {
                return this.volLostPitsSurfField;
            }
            set {
                this.volLostPitsSurfField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolLostTrippingSurf {
            get {
                return this.volLostTrippingSurfField;
            }
            set {
                this.volLostTrippingSurfField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolLostOtherSurf {
            get {
                return this.volLostOtherSurfField;
            }
            set {
                this.volLostOtherSurfField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolTotMudLostSurf {
            get {
                return this.volTotMudLostSurfField;
            }
            set {
                this.volTotMudLostSurfField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolLostCircHole {
            get {
                return this.volLostCircHoleField;
            }
            set {
                this.volLostCircHoleField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolLostCsgHole {
            get {
                return this.volLostCsgHoleField;
            }
            set {
                this.volLostCsgHoleField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolLostCmtHole {
            get {
                return this.volLostCmtHoleField;
            }
            set {
                this.volLostCmtHoleField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolLostBhdCsgHole {
            get {
                return this.volLostBhdCsgHoleField;
            }
            set {
                this.volLostBhdCsgHoleField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolLostAbandonHole {
            get {
                return this.volLostAbandonHoleField;
            }
            set {
                this.volLostAbandonHoleField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolLostOtherHole {
            get {
                return this.volLostOtherHoleField;
            }
            set {
                this.volLostOtherHoleField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolTotMudLostHole {
            get {
                return this.volTotMudLostHoleField;
            }
            set {
                this.volTotMudLostHoleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class MudVolume {
        
        private VolumeMeasure volTotMudStartField;
        
        private VolumeMeasure volMudDumpedField;
        
        private VolumeMeasure volMudReceivedField;
        
        private VolumeMeasure volMudReturnedField;
        
        private VolumeMeasure volMudBuiltField;
        
        private VolumeMeasure volMudStringField;
        
        private VolumeMeasure volMudCasingField;
        
        private VolumeMeasure volMudHoleField;
        
        private VolumeMeasure volMudRiserField;
        
        private VolumeMeasure volTotMudEndField;
        
        private MudLosses mudLossesField;
        
        /// <remarks/>
        public VolumeMeasure VolTotMudStart {
            get {
                return this.volTotMudStartField;
            }
            set {
                this.volTotMudStartField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolMudDumped {
            get {
                return this.volMudDumpedField;
            }
            set {
                this.volMudDumpedField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolMudReceived {
            get {
                return this.volMudReceivedField;
            }
            set {
                this.volMudReceivedField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolMudReturned {
            get {
                return this.volMudReturnedField;
            }
            set {
                this.volMudReturnedField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolMudBuilt {
            get {
                return this.volMudBuiltField;
            }
            set {
                this.volMudBuiltField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolMudString {
            get {
                return this.volMudStringField;
            }
            set {
                this.volMudStringField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolMudCasing {
            get {
                return this.volMudCasingField;
            }
            set {
                this.volMudCasingField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolMudHole {
            get {
                return this.volMudHoleField;
            }
            set {
                this.volMudHoleField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolMudRiser {
            get {
                return this.volMudRiserField;
            }
            set {
                this.volMudRiserField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolTotMudEnd {
            get {
                return this.volTotMudEndField;
            }
            set {
                this.volTotMudEndField = value;
            }
        }
        
        /// <remarks/>
        public MudLosses MudLosses {
            get {
                return this.mudLossesField;
            }
            set {
                this.mudLossesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Inventory {
        
        private string nameField;
        
        private int qtyStartField;
        
        private bool qtyStartFieldSpecified;
        
        private int qtyAdjustmentField;
        
        private bool qtyAdjustmentFieldSpecified;
        
        private int qtyReceivedField;
        
        private bool qtyReceivedFieldSpecified;
        
        private int qtyReturnedField;
        
        private bool qtyReturnedFieldSpecified;
        
        private int qtyUsedField;
        
        private bool qtyUsedFieldSpecified;
        
        private int qtyOnLocationField;
        
        private bool qtyOnLocationFieldSpecified;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private Cost costItemField;
        
        private Cost pricePerUnitField;
        
        private object itemField;
        
        private string uidField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int QtyStart {
            get {
                return this.qtyStartField;
            }
            set {
                this.qtyStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QtyStartSpecified {
            get {
                return this.qtyStartFieldSpecified;
            }
            set {
                this.qtyStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int QtyAdjustment {
            get {
                return this.qtyAdjustmentField;
            }
            set {
                this.qtyAdjustmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QtyAdjustmentSpecified {
            get {
                return this.qtyAdjustmentFieldSpecified;
            }
            set {
                this.qtyAdjustmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int QtyReceived {
            get {
                return this.qtyReceivedField;
            }
            set {
                this.qtyReceivedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QtyReceivedSpecified {
            get {
                return this.qtyReceivedFieldSpecified;
            }
            set {
                this.qtyReceivedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int QtyReturned {
            get {
                return this.qtyReturnedField;
            }
            set {
                this.qtyReturnedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QtyReturnedSpecified {
            get {
                return this.qtyReturnedFieldSpecified;
            }
            set {
                this.qtyReturnedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int QtyUsed {
            get {
                return this.qtyUsedField;
            }
            set {
                this.qtyUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QtyUsedSpecified {
            get {
                return this.qtyUsedFieldSpecified;
            }
            set {
                this.qtyUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int QtyOnLocation {
            get {
                return this.qtyOnLocationField;
            }
            set {
                this.qtyOnLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QtyOnLocationSpecified {
            get {
                return this.qtyOnLocationFieldSpecified;
            }
            set {
                this.qtyOnLocationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public Cost CostItem {
            get {
                return this.costItemField;
            }
            set {
                this.costItemField = value;
            }
        }
        
        /// <remarks/>
        public Cost PricePerUnit {
            get {
                return this.pricePerUnitField;
            }
            set {
                this.pricePerUnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemVolPerUnit", typeof(VolumeMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("ItemWtPerUnit", typeof(MassMeasure))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Weather {
        
        private string dTimField;
        
        private string agencyField;
        
        private PressureMeasure barometricPressureField;
        
        private short beaufortScaleNumberField;
        
        private bool beaufortScaleNumberFieldSpecified;
        
        private ThermodynamicTemperatureMeasure tempSurfaceMnField;
        
        private ThermodynamicTemperatureMeasure tempSurfaceMxField;
        
        private ThermodynamicTemperatureMeasure tempWindChillField;
        
        private ThermodynamicTemperatureMeasure tempseaField;
        
        private LengthMeasure visibilityField;
        
        private PlaneAngleMeasure aziWaveField;
        
        private LengthMeasure htWaveField;
        
        private LengthMeasure significantWaveField;
        
        private LengthMeasure maxWaveField;
        
        private TimeMeasure periodWaveField;
        
        private PlaneAngleMeasure aziWindField;
        
        private LengthPerTimeMeasure velWindField;
        
        private string typePrecipField;
        
        private LengthMeasure amtPrecipField;
        
        private string coverCloudField;
        
        private LengthMeasure ceilingCloudField;
        
        private LengthPerTimeMeasure currentSeaField;
        
        private PlaneAngleMeasure aziCurrentSeaField;
        
        private string commentsField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        public string Agency {
            get {
                return this.agencyField;
            }
            set {
                this.agencyField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure BarometricPressure {
            get {
                return this.barometricPressureField;
            }
            set {
                this.barometricPressureField = value;
            }
        }
        
        /// <remarks/>
        public short BeaufortScaleNumber {
            get {
                return this.beaufortScaleNumberField;
            }
            set {
                this.beaufortScaleNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BeaufortScaleNumberSpecified {
            get {
                return this.beaufortScaleNumberFieldSpecified;
            }
            set {
                this.beaufortScaleNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ThermodynamicTemperatureMeasure TempSurfaceMn {
            get {
                return this.tempSurfaceMnField;
            }
            set {
                this.tempSurfaceMnField = value;
            }
        }
        
        /// <remarks/>
        public ThermodynamicTemperatureMeasure TempSurfaceMx {
            get {
                return this.tempSurfaceMxField;
            }
            set {
                this.tempSurfaceMxField = value;
            }
        }
        
        /// <remarks/>
        public ThermodynamicTemperatureMeasure TempWindChill {
            get {
                return this.tempWindChillField;
            }
            set {
                this.tempWindChillField = value;
            }
        }
        
        /// <remarks/>
        public ThermodynamicTemperatureMeasure Tempsea {
            get {
                return this.tempseaField;
            }
            set {
                this.tempseaField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure Visibility {
            get {
                return this.visibilityField;
            }
            set {
                this.visibilityField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure AziWave {
            get {
                return this.aziWaveField;
            }
            set {
                this.aziWaveField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure HtWave {
            get {
                return this.htWaveField;
            }
            set {
                this.htWaveField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure SignificantWave {
            get {
                return this.significantWaveField;
            }
            set {
                this.significantWaveField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure MaxWave {
            get {
                return this.maxWaveField;
            }
            set {
                this.maxWaveField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure PeriodWave {
            get {
                return this.periodWaveField;
            }
            set {
                this.periodWaveField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure AziWind {
            get {
                return this.aziWindField;
            }
            set {
                this.aziWindField = value;
            }
        }
        
        /// <remarks/>
        public LengthPerTimeMeasure VelWind {
            get {
                return this.velWindField;
            }
            set {
                this.velWindField = value;
            }
        }
        
        /// <remarks/>
        public string TypePrecip {
            get {
                return this.typePrecipField;
            }
            set {
                this.typePrecipField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure AmtPrecip {
            get {
                return this.amtPrecipField;
            }
            set {
                this.amtPrecipField = value;
            }
        }
        
        /// <remarks/>
        public string CoverCloud {
            get {
                return this.coverCloudField;
            }
            set {
                this.coverCloudField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure CeilingCloud {
            get {
                return this.ceilingCloudField;
            }
            set {
                this.ceilingCloudField = value;
            }
        }
        
        /// <remarks/>
        public LengthPerTimeMeasure CurrentSea {
            get {
                return this.currentSeaField;
            }
            set {
                this.currentSeaField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure AziCurrentSea {
            get {
                return this.aziCurrentSeaField;
            }
            set {
                this.aziCurrentSeaField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class SupportCraft {
        
        private string nameField;
        
        private SupportCraftType typeSupportCraftField;
        
        private string dTimArrivedField;
        
        private string dTimDepartedField;
        
        private string commentsField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public SupportCraftType TypeSupportCraft {
            get {
                return this.typeSupportCraftField;
            }
            set {
                this.typeSupportCraftField = value;
            }
        }
        
        /// <remarks/>
        public string DTimArrived {
            get {
                return this.dTimArrivedField;
            }
            set {
                this.dTimArrivedField = value;
            }
        }
        
        /// <remarks/>
        public string DTimDeparted {
            get {
                return this.dTimDepartedField;
            }
            set {
                this.dTimDepartedField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum SupportCraftType {
        
        /// <remarks/>
        barge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("standby boat")]
        standbyboat,
        
        /// <remarks/>
        helicopter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("supply boat")]
        supplyboat,
        
        /// <remarks/>
        truck,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crew vehicle")]
        crewvehicle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tug boat")]
        tugboat,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Incident {
        
        private string dTimField;
        
        private string reporterField;
        
        private int numMinorInjuryField;
        
        private bool numMinorInjuryFieldSpecified;
        
        private int numMajorInjuryField;
        
        private bool numMajorInjuryFieldSpecified;
        
        private int numFatalityField;
        
        private bool numFatalityFieldSpecified;
        
        private bool isNearMissField;
        
        private bool isNearMissFieldSpecified;
        
        private string descLocationField;
        
        private string descAccidentField;
        
        private string remedialActionDescField;
        
        private string causeDescField;
        
        private TimeMeasure eTimLostGrossField;
        
        private string responsibleCompanyField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private Cost costLossGrossField;
        
        private string uidField;
        
        /// <remarks/>
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        public string Reporter {
            get {
                return this.reporterField;
            }
            set {
                this.reporterField = value;
            }
        }
        
        /// <remarks/>
        public int NumMinorInjury {
            get {
                return this.numMinorInjuryField;
            }
            set {
                this.numMinorInjuryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumMinorInjurySpecified {
            get {
                return this.numMinorInjuryFieldSpecified;
            }
            set {
                this.numMinorInjuryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumMajorInjury {
            get {
                return this.numMajorInjuryField;
            }
            set {
                this.numMajorInjuryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumMajorInjurySpecified {
            get {
                return this.numMajorInjuryFieldSpecified;
            }
            set {
                this.numMajorInjuryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumFatality {
            get {
                return this.numFatalityField;
            }
            set {
                this.numFatalityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumFatalitySpecified {
            get {
                return this.numFatalityFieldSpecified;
            }
            set {
                this.numFatalityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsNearMiss {
            get {
                return this.isNearMissField;
            }
            set {
                this.isNearMissField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsNearMissSpecified {
            get {
                return this.isNearMissFieldSpecified;
            }
            set {
                this.isNearMissFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string DescLocation {
            get {
                return this.descLocationField;
            }
            set {
                this.descLocationField = value;
            }
        }
        
        /// <remarks/>
        public string DescAccident {
            get {
                return this.descAccidentField;
            }
            set {
                this.descAccidentField = value;
            }
        }
        
        /// <remarks/>
        public string RemedialActionDesc {
            get {
                return this.remedialActionDescField;
            }
            set {
                this.remedialActionDescField = value;
            }
        }
        
        /// <remarks/>
        public string CauseDesc {
            get {
                return this.causeDescField;
            }
            set {
                this.causeDescField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimLostGross {
            get {
                return this.eTimLostGrossField;
            }
            set {
                this.eTimLostGrossField = value;
            }
        }
        
        /// <remarks/>
        public string ResponsibleCompany {
            get {
                return this.responsibleCompanyField;
            }
            set {
                this.responsibleCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public Cost CostLossGross {
            get {
                return this.costLossGrossField;
            }
            set {
                this.costLossGrossField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Hse {
        
        private TimeMeasure daysIncFreeField;
        
        private string lastCsgPresTestField;
        
        private PressureMeasure presLastCsgField;
        
        private string lastBopPresTestField;
        
        private string nextBopPresTestField;
        
        private PressureMeasure presStdPipeField;
        
        private PressureMeasure presKellyHoseField;
        
        private PressureMeasure presDiverterField;
        
        private PressureMeasure presAnnularField;
        
        private PressureMeasure presRamsField;
        
        private PressureMeasure presChokeLineField;
        
        private PressureMeasure presChokeManField;
        
        private string lastFireBoatDrillField;
        
        private string lastAbandonDrillField;
        
        private string lastRigInspectionField;
        
        private string lastSafetyMeetingField;
        
        private string lastSafetyInspectionField;
        
        private string lastTripDrillField;
        
        private string lastDiverterDrillField;
        
        private string lastBopDrillField;
        
        private bool regAgencyInspField;
        
        private bool regAgencyInspFieldSpecified;
        
        private bool nonComplianceIssuedField;
        
        private bool nonComplianceIssuedFieldSpecified;
        
        private int numStopCardsField;
        
        private bool numStopCardsFieldSpecified;
        
        private VolumeMeasure fluidDischargedField;
        
        private VolumeMeasure volCtgDischargedField;
        
        private VolumeMeasure volOilCtgDischargeField;
        
        private VolumeMeasure wasteDischargedField;
        
        private string commentsField;
        
        private Incident[] incidentField;
        
        /// <remarks/>
        public TimeMeasure DaysIncFree {
            get {
                return this.daysIncFreeField;
            }
            set {
                this.daysIncFreeField = value;
            }
        }
        
        /// <remarks/>
        public string LastCsgPresTest {
            get {
                return this.lastCsgPresTestField;
            }
            set {
                this.lastCsgPresTestField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresLastCsg {
            get {
                return this.presLastCsgField;
            }
            set {
                this.presLastCsgField = value;
            }
        }
        
        /// <remarks/>
        public string LastBopPresTest {
            get {
                return this.lastBopPresTestField;
            }
            set {
                this.lastBopPresTestField = value;
            }
        }
        
        /// <remarks/>
        public string NextBopPresTest {
            get {
                return this.nextBopPresTestField;
            }
            set {
                this.nextBopPresTestField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresStdPipe {
            get {
                return this.presStdPipeField;
            }
            set {
                this.presStdPipeField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresKellyHose {
            get {
                return this.presKellyHoseField;
            }
            set {
                this.presKellyHoseField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresDiverter {
            get {
                return this.presDiverterField;
            }
            set {
                this.presDiverterField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresAnnular {
            get {
                return this.presAnnularField;
            }
            set {
                this.presAnnularField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresRams {
            get {
                return this.presRamsField;
            }
            set {
                this.presRamsField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresChokeLine {
            get {
                return this.presChokeLineField;
            }
            set {
                this.presChokeLineField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresChokeMan {
            get {
                return this.presChokeManField;
            }
            set {
                this.presChokeManField = value;
            }
        }
        
        /// <remarks/>
        public string LastFireBoatDrill {
            get {
                return this.lastFireBoatDrillField;
            }
            set {
                this.lastFireBoatDrillField = value;
            }
        }
        
        /// <remarks/>
        public string LastAbandonDrill {
            get {
                return this.lastAbandonDrillField;
            }
            set {
                this.lastAbandonDrillField = value;
            }
        }
        
        /// <remarks/>
        public string LastRigInspection {
            get {
                return this.lastRigInspectionField;
            }
            set {
                this.lastRigInspectionField = value;
            }
        }
        
        /// <remarks/>
        public string LastSafetyMeeting {
            get {
                return this.lastSafetyMeetingField;
            }
            set {
                this.lastSafetyMeetingField = value;
            }
        }
        
        /// <remarks/>
        public string LastSafetyInspection {
            get {
                return this.lastSafetyInspectionField;
            }
            set {
                this.lastSafetyInspectionField = value;
            }
        }
        
        /// <remarks/>
        public string LastTripDrill {
            get {
                return this.lastTripDrillField;
            }
            set {
                this.lastTripDrillField = value;
            }
        }
        
        /// <remarks/>
        public string LastDiverterDrill {
            get {
                return this.lastDiverterDrillField;
            }
            set {
                this.lastDiverterDrillField = value;
            }
        }
        
        /// <remarks/>
        public string LastBopDrill {
            get {
                return this.lastBopDrillField;
            }
            set {
                this.lastBopDrillField = value;
            }
        }
        
        /// <remarks/>
        public bool RegAgencyInsp {
            get {
                return this.regAgencyInspField;
            }
            set {
                this.regAgencyInspField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegAgencyInspSpecified {
            get {
                return this.regAgencyInspFieldSpecified;
            }
            set {
                this.regAgencyInspFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool NonComplianceIssued {
            get {
                return this.nonComplianceIssuedField;
            }
            set {
                this.nonComplianceIssuedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonComplianceIssuedSpecified {
            get {
                return this.nonComplianceIssuedFieldSpecified;
            }
            set {
                this.nonComplianceIssuedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumStopCards {
            get {
                return this.numStopCardsField;
            }
            set {
                this.numStopCardsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumStopCardsSpecified {
            get {
                return this.numStopCardsFieldSpecified;
            }
            set {
                this.numStopCardsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure FluidDischarged {
            get {
                return this.fluidDischargedField;
            }
            set {
                this.fluidDischargedField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolCtgDischarged {
            get {
                return this.volCtgDischargedField;
            }
            set {
                this.volCtgDischargedField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolOilCtgDischarge {
            get {
                return this.volOilCtgDischargeField;
            }
            set {
                this.volOilCtgDischargeField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure WasteDischarged {
            get {
                return this.wasteDischargedField;
            }
            set {
                this.wasteDischargedField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Incident")]
        public Incident[] Incident {
            get {
                return this.incidentField;
            }
            set {
                this.incidentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class ShakerScreen {
        
        private string dTimStartField;
        
        private string dTimEndField;
        
        private int numDeckField;
        
        private bool numDeckFieldSpecified;
        
        private LengthMeasure meshXField;
        
        private LengthMeasure meshYField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private LengthMeasure cutPointField;
        
        /// <remarks/>
        public string DTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        public string DTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        public int NumDeck {
            get {
                return this.numDeckField;
            }
            set {
                this.numDeckField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumDeckSpecified {
            get {
                return this.numDeckFieldSpecified;
            }
            set {
                this.numDeckFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure MeshX {
            get {
                return this.meshXField;
            }
            set {
                this.meshXField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure MeshY {
            get {
                return this.meshYField;
            }
            set {
                this.meshYField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure CutPoint {
            get {
                return this.cutPointField;
            }
            set {
                this.cutPointField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class ShakerOp {
        
        private string shakerField;
        
        private MeasuredDepthCoord mdHoleField;
        
        private string dTimField;
        
        private TimeMeasure hoursRunField;
        
        private AreaPerAreaMeasure pcScreenCoveredField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private ShakerScreen shakerScreenField;
        
        private string uidField;
        
        /// <remarks/>
        public string Shaker {
            get {
                return this.shakerField;
            }
            set {
                this.shakerField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdHole {
            get {
                return this.mdHoleField;
            }
            set {
                this.mdHoleField = value;
            }
        }
        
        /// <remarks/>
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure HoursRun {
            get {
                return this.hoursRunField;
            }
            set {
                this.hoursRunField = value;
            }
        }
        
        /// <remarks/>
        public AreaPerAreaMeasure PcScreenCovered {
            get {
                return this.pcScreenCoveredField;
            }
            set {
                this.pcScreenCoveredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public ShakerScreen ShakerScreen {
            get {
                return this.shakerScreenField;
            }
            set {
                this.shakerScreenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class AreaPerAreaMeasure {
        
        private AreaPerAreaUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public AreaPerAreaUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum AreaPerAreaUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%[area]")]
        area,
        
        /// <remarks/>
        cEuc,
        
        /// <remarks/>
        Euc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in2/ft2")]
        in2ft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in2/in2")]
        in2in2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m2/m2")]
        m2m2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mm2/mm2")]
        mm2mm2,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class RigResponse {
        
        private PlaneAngleMeasure rigHeadingField;
        
        private LengthMeasure rigHeaveField;
        
        private PlaneAngleMeasure rigPitchAngleField;
        
        private PlaneAngleMeasure rigRollAngleField;
        
        private PlaneAngleMeasure riserAngleField;
        
        private PlaneAngleMeasure riserDirectionField;
        
        private ForceMeasure riserTensionField;
        
        private ForceMeasure variableDeckLoadField;
        
        private ForceMeasure totalDeckLoadField;
        
        private PlaneAngleMeasure guideBaseAngleField;
        
        private PlaneAngleMeasure ballJointAngleField;
        
        private PlaneAngleMeasure ballJointDirectionField;
        
        private LengthMeasure offsetRigField;
        
        private ForceMeasure loadLeg1Field;
        
        private ForceMeasure loadLeg2Field;
        
        private ForceMeasure loadLeg3Field;
        
        private ForceMeasure loadLeg4Field;
        
        private LengthMeasure penetrationLeg1Field;
        
        private LengthMeasure penetrationLeg2Field;
        
        private LengthMeasure penetrationLeg3Field;
        
        private LengthMeasure penetrationLeg4Field;
        
        private LengthMeasure dispRigField;
        
        private LengthMeasure meanDraftField;
        
        private IndexedObject[] anchorTensionField;
        
        private IndexedObject[] anchorAngleField;
        
        /// <remarks/>
        public PlaneAngleMeasure RigHeading {
            get {
                return this.rigHeadingField;
            }
            set {
                this.rigHeadingField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure RigHeave {
            get {
                return this.rigHeaveField;
            }
            set {
                this.rigHeaveField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure RigPitchAngle {
            get {
                return this.rigPitchAngleField;
            }
            set {
                this.rigPitchAngleField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure RigRollAngle {
            get {
                return this.rigRollAngleField;
            }
            set {
                this.rigRollAngleField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure RiserAngle {
            get {
                return this.riserAngleField;
            }
            set {
                this.riserAngleField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure RiserDirection {
            get {
                return this.riserDirectionField;
            }
            set {
                this.riserDirectionField = value;
            }
        }
        
        /// <remarks/>
        public ForceMeasure RiserTension {
            get {
                return this.riserTensionField;
            }
            set {
                this.riserTensionField = value;
            }
        }
        
        /// <remarks/>
        public ForceMeasure VariableDeckLoad {
            get {
                return this.variableDeckLoadField;
            }
            set {
                this.variableDeckLoadField = value;
            }
        }
        
        /// <remarks/>
        public ForceMeasure TotalDeckLoad {
            get {
                return this.totalDeckLoadField;
            }
            set {
                this.totalDeckLoadField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure GuideBaseAngle {
            get {
                return this.guideBaseAngleField;
            }
            set {
                this.guideBaseAngleField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure BallJointAngle {
            get {
                return this.ballJointAngleField;
            }
            set {
                this.ballJointAngleField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure BallJointDirection {
            get {
                return this.ballJointDirectionField;
            }
            set {
                this.ballJointDirectionField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure OffsetRig {
            get {
                return this.offsetRigField;
            }
            set {
                this.offsetRigField = value;
            }
        }
        
        /// <remarks/>
        public ForceMeasure LoadLeg1 {
            get {
                return this.loadLeg1Field;
            }
            set {
                this.loadLeg1Field = value;
            }
        }
        
        /// <remarks/>
        public ForceMeasure LoadLeg2 {
            get {
                return this.loadLeg2Field;
            }
            set {
                this.loadLeg2Field = value;
            }
        }
        
        /// <remarks/>
        public ForceMeasure LoadLeg3 {
            get {
                return this.loadLeg3Field;
            }
            set {
                this.loadLeg3Field = value;
            }
        }
        
        /// <remarks/>
        public ForceMeasure LoadLeg4 {
            get {
                return this.loadLeg4Field;
            }
            set {
                this.loadLeg4Field = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure PenetrationLeg1 {
            get {
                return this.penetrationLeg1Field;
            }
            set {
                this.penetrationLeg1Field = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure PenetrationLeg2 {
            get {
                return this.penetrationLeg2Field;
            }
            set {
                this.penetrationLeg2Field = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure PenetrationLeg3 {
            get {
                return this.penetrationLeg3Field;
            }
            set {
                this.penetrationLeg3Field = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure PenetrationLeg4 {
            get {
                return this.penetrationLeg4Field;
            }
            set {
                this.penetrationLeg4Field = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure DispRig {
            get {
                return this.dispRigField;
            }
            set {
                this.dispRigField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure MeanDraft {
            get {
                return this.meanDraftField;
            }
            set {
                this.meanDraftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnchorTension")]
        public IndexedObject[] AnchorTension {
            get {
                return this.anchorTensionField;
            }
            set {
                this.anchorTensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnchorAngle")]
        public IndexedObject[] AnchorAngle {
            get {
                return this.anchorAngleField;
            }
            set {
                this.anchorAngleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ForceMeasure {
        
        private ForceUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ForceUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum ForceUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10 kN")]
        Item10kN,
        
        /// <remarks/>
        cN,
        
        /// <remarks/>
        daN,
        
        /// <remarks/>
        dN,
        
        /// <remarks/>
        dyne,
        
        /// <remarks/>
        EN,
        
        /// <remarks/>
        fN,
        
        /// <remarks/>
        gf,
        
        /// <remarks/>
        GN,
        
        /// <remarks/>
        hN,
        
        /// <remarks/>
        kdyne,
        
        /// <remarks/>
        kgf,
        
        /// <remarks/>
        klbf,
        
        /// <remarks/>
        kN,
        
        /// <remarks/>
        lbf,
        
        /// <remarks/>
        Mgf,
        
        /// <remarks/>
        mN,
        
        /// <remarks/>
        MN,
        
        /// <remarks/>
        N,
        
        /// <remarks/>
        nN,
        
        /// <remarks/>
        ozf,
        
        /// <remarks/>
        pdl,
        
        /// <remarks/>
        pN,
        
        /// <remarks/>
        TN,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonf[UK]")]
        tonfUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonf[US]")]
        tonfUS,
        
        /// <remarks/>
        uN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StnTrajCorUsed {
        
        private LinearAccelerationMeasure gravAxialAccelCorField;
        
        private LinearAccelerationMeasure gravTran1AccelCorField;
        
        private LinearAccelerationMeasure gravTran2AccelCorField;
        
        private MagneticFluxDensityMeasure magAxialDrlstrCorField;
        
        private MagneticFluxDensityMeasure magTran1DrlstrCorField;
        
        private MagneticFluxDensityMeasure magTran2DrlstrCorField;
        
        private MagneticFluxDensityMeasure magTran1MSACorField;
        
        private MagneticFluxDensityMeasure magTran2MSACorField;
        
        private MagneticFluxDensityMeasure magAxialMSACorField;
        
        private PlaneAngleMeasure sagIncCorField;
        
        private PlaneAngleMeasure sagAziCorField;
        
        private PlaneAngleMeasure stnMagDeclUsedField;
        
        private PlaneAngleMeasure stnGridConUsedField;
        
        private LengthMeasure dirSensorOffsetField;
        
        /// <remarks/>
        /// <summary>Calculated gravitational field strength correction.</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated gravitational field strength correction.")]
        public LinearAccelerationMeasure GravAxialAccelCor {
            get {
                return this.gravAxialAccelCorField;
            }
            set {
                this.gravAxialAccelCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The correction applied to a cross-axial (direction 1) component  of the Earths gravitational field.</summary>
        [System.ComponentModel.DescriptionAttribute("The correction applied to a cross-axial (direction 1) component  of the Earths gr" +
            "avitational field.")]
        public LinearAccelerationMeasure GravTran1AccelCor {
            get {
                return this.gravTran1AccelCorField;
            }
            set {
                this.gravTran1AccelCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The correction applied to a cross-axial (direction 2) component  of the Earths gravitational field.</summary>
        [System.ComponentModel.DescriptionAttribute("The correction applied to a cross-axial (direction 2) component  of the Earths gr" +
            "avitational field.")]
        public LinearAccelerationMeasure GravTran2AccelCor {
            get {
                return this.gravTran2AccelCorField;
            }
            set {
                this.gravTran2AccelCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Axial magnetic drillstring correction.</summary>
        [System.ComponentModel.DescriptionAttribute("Axial magnetic drillstring correction.")]
        public MagneticFluxDensityMeasure MagAxialDrlstrCor {
            get {
                return this.magAxialDrlstrCorField;
            }
            set {
                this.magAxialDrlstrCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cross-axial magnetic correction.</summary>
        [System.ComponentModel.DescriptionAttribute("Cross-axial magnetic correction.")]
        public MagneticFluxDensityMeasure MagTran1DrlstrCor {
            get {
                return this.magTran1DrlstrCorField;
            }
            set {
                this.magTran1DrlstrCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cross-axial magnetic correction.</summary>
        [System.ComponentModel.DescriptionAttribute("Cross-axial magnetic correction.")]
        public MagneticFluxDensityMeasure MagTran2DrlstrCor {
            get {
                return this.magTran2DrlstrCorField;
            }
            set {
                this.magTran2DrlstrCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cross-axial (direction 1) magnetic correction due to multi-station analysis process.</summary>
        [System.ComponentModel.DescriptionAttribute("Cross-axial (direction 1) magnetic correction due to multi-station analysis proce" +
            "ss.")]
        public MagneticFluxDensityMeasure MagTran1MSACor {
            get {
                return this.magTran1MSACorField;
            }
            set {
                this.magTran1MSACorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cross-axial (direction 2) magnetic correction due to multi-station analysis process.</summary>
        [System.ComponentModel.DescriptionAttribute("Cross-axial (direction 2) magnetic correction due to multi-station analysis proce" +
            "ss.")]
        public MagneticFluxDensityMeasure MagTran2MSACor {
            get {
                return this.magTran2MSACorField;
            }
            set {
                this.magTran2MSACorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Axial magnetic correction due to multi-station analysis process.</summary>
        [System.ComponentModel.DescriptionAttribute("Axial magnetic correction due to multi-station analysis process.")]
        public MagneticFluxDensityMeasure MagAxialMSACor {
            get {
                return this.magAxialMSACorField;
            }
            set {
                this.magAxialMSACorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calculated sag correction to inclination.</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated sag correction to inclination.")]
        public PlaneAngleMeasure SagIncCor {
            get {
                return this.sagIncCorField;
            }
            set {
                this.sagIncCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calculated cosag correction to azimuth.</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated cosag correction to azimuth.")]
        public PlaneAngleMeasure SagAziCor {
            get {
                return this.sagAziCorField;
            }
            set {
                this.sagAziCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Magnetic declination used to correct a Magnetic North referenced azimuth  to a True North azimuth.  Magnetic declination angles are measured positive clockwise  from True North to Magnetic North (or negative in the anti-clockwise direction).  To convert a Magnetic azimuth to a True North azimuth, the magnetic declination should be added.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Magnetic declination used to correct a Magnetic North referenced azimuth  to a True North azimuth.  Magnetic declination angles are measured positive clockwise  from True North to Magnetic North (or negative in the anti-clockwise direction).  To convert a Magnetic azimuth to a True North azimuth, the magnetic declination should be added.")]
        public PlaneAngleMeasure StnMagDeclUsed {
            get {
                return this.stnMagDeclUsedField;
            }
            set {
                this.stnMagDeclUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Magnetic declination used to correct a Magnetic North referenced azimuth  to a True North azimuth.  Magnetic declination angles are measured positive clockwise  from True North to Magnetic North (or negative in the anti-clockwise direction).  To convert a Magnetic azimuth to a True North azimuth, the magnetic declination should be added.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Magnetic declination used to correct a Magnetic North referenced azimuth  to a True North azimuth.  Magnetic declination angles are measured positive clockwise  from True North to Magnetic North (or negative in the anti-clockwise direction).  To convert a Magnetic azimuth to a True North azimuth, the magnetic declination should be added.")]
        public PlaneAngleMeasure StnGridConUsed {
            get {
                return this.stnGridConUsedField;
            }
            set {
                this.stnGridConUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Offset relative to bit.</summary>
        [System.ComponentModel.DescriptionAttribute("Offset relative to bit.")]
        public LengthMeasure DirSensorOffset {
            get {
                return this.dirSensorOffsetField;
            }
            set {
                this.dirSensorOffsetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class LinearAccelerationMeasure {
        
        private LinearAccelerationUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LinearAccelerationUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum LinearAccelerationUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm/s2")]
        cms2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/s2")]
        fts2,
        
        /// <remarks/>
        Gal,
        
        /// <remarks/>
        gn,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/s2")]
        ins2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/s2")]
        ms2,
        
        /// <remarks/>
        mGal,
        
        /// <remarks/>
        mgn,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class MagneticFluxDensityMeasure {
        
        private MagneticFluxDensityUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public MagneticFluxDensityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum MagneticFluxDensityUom {
        
        /// <remarks/>
        cgauss,
        
        /// <remarks/>
        cT,
        
        /// <remarks/>
        dgauss,
        
        /// <remarks/>
        dT,
        
        /// <remarks/>
        Egauss,
        
        /// <remarks/>
        ET,
        
        /// <remarks/>
        fgauss,
        
        /// <remarks/>
        fT,
        
        /// <remarks/>
        gauss,
        
        /// <remarks/>
        Ggauss,
        
        /// <remarks/>
        GT,
        
        /// <remarks/>
        kgauss,
        
        /// <remarks/>
        kT,
        
        /// <remarks/>
        mgauss,
        
        /// <remarks/>
        Mgauss,
        
        /// <remarks/>
        mT,
        
        /// <remarks/>
        ngauss,
        
        /// <remarks/>
        nT,
        
        /// <remarks/>
        pgauss,
        
        /// <remarks/>
        pT,
        
        /// <remarks/>
        T,
        
        /// <remarks/>
        Tgauss,
        
        /// <remarks/>
        TT,
        
        /// <remarks/>
        ugauss,
        
        /// <remarks/>
        uT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StnTrajRawData {
        
        private LinearAccelerationMeasure gravAxialRawField;
        
        private LinearAccelerationMeasure gravTran1RawField;
        
        private LinearAccelerationMeasure gravTran2RawField;
        
        private MagneticFluxDensityMeasure magAxialRawField;
        
        private MagneticFluxDensityMeasure magTran1RawField;
        
        private MagneticFluxDensityMeasure magTran2RawField;
        
        /// <remarks/>
        /// <summary>Uncorrected gravitational field strength measured in axial direction.</summary>
        [System.ComponentModel.DescriptionAttribute("Uncorrected gravitational field strength measured in axial direction.")]
        public LinearAccelerationMeasure GravAxialRaw {
            get {
                return this.gravAxialRawField;
            }
            set {
                this.gravAxialRawField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Uncorrected gravitational field strength measured in transverse direction.</summary>
        [System.ComponentModel.DescriptionAttribute("Uncorrected gravitational field strength measured in transverse direction.")]
        public LinearAccelerationMeasure GravTran1Raw {
            get {
                return this.gravTran1RawField;
            }
            set {
                this.gravTran1RawField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Uncorrected gravitational field strength measured in transverse direction,  approximately normal to tran1.</summary>
        [System.ComponentModel.DescriptionAttribute("Uncorrected gravitational field strength measured in transverse direction,  appro" +
            "ximately normal to tran1.")]
        public LinearAccelerationMeasure GravTran2Raw {
            get {
                return this.gravTran2RawField;
            }
            set {
                this.gravTran2RawField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Uncorrected magnetic field strength measured in axial direction.</summary>
        [System.ComponentModel.DescriptionAttribute("Uncorrected magnetic field strength measured in axial direction.")]
        public MagneticFluxDensityMeasure MagAxialRaw {
            get {
                return this.magAxialRawField;
            }
            set {
                this.magAxialRawField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Uncorrected magnetic field strength measured in transverse direction.</summary>
        [System.ComponentModel.DescriptionAttribute("Uncorrected magnetic field strength measured in transverse direction.")]
        public MagneticFluxDensityMeasure MagTran1Raw {
            get {
                return this.magTran1RawField;
            }
            set {
                this.magTran1RawField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Uncorrected magnetic field strength measured in transverse direction,  approximately normal to tran1.</summary>
        [System.ComponentModel.DescriptionAttribute("Uncorrected magnetic field strength measured in transverse direction,  approximat" +
            "ely normal to tran1.")]
        public MagneticFluxDensityMeasure MagTran2Raw {
            get {
                return this.magTran2RawField;
            }
            set {
                this.magTran2RawField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class RefWellboreTrajectoryStation {
        
        private string stationReferenceField;
        
        private string trajectoryParentField;
        
        private string wellboreParentField;
        
        /// <remarks/>
        /// <summary>A pointer to the trajectoryStation within the parent trajectory. This is a special case where we only use a uid for the pointer. The natural identity of a station is its physical characteristics (e.g., md).</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the trajectoryStation within the parent trajectory. This is a specia" +
            "l case where we only use a uid for the pointer. The natural identity of a statio" +
            "n is its physical characteristics (e.g., md).")]
        public string StationReference {
            get {
                return this.stationReferenceField;
            }
            set {
                this.stationReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the trajectory within the parent wellbore. This trajectory contains the trajectoryStation.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the trajectory within the parent wellbore. This trajectory contains " +
            "the trajectoryStation.")]
        public string TrajectoryParent {
            get {
                return this.trajectoryParentField;
            }
            set {
                this.trajectoryParentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the wellbore that contains the trajectory. This is not needed unless the trajectory is outside the  context of a common parent wellbore.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the wellbore that contains the trajectory. This is not needed unless" +
            " the trajectory is outside the  context of a common parent wellbore.")]
        public string WellboreParent {
            get {
                return this.wellboreParentField;
            }
            set {
                this.wellboreParentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StnTrajMatrixCov {
        
        private AreaMeasure varianceNNField;
        
        private AreaMeasure varianceNEField;
        
        private AreaMeasure varianceNVertField;
        
        private AreaMeasure varianceEEField;
        
        private AreaMeasure varianceEVertField;
        
        private AreaMeasure varianceVertVertField;
        
        private LengthMeasure biasNField;
        
        private LengthMeasure biasEField;
        
        private LengthMeasure biasVertField;
        
        /// <remarks/>
        /// <summary>Covariance north north.</summary>
        [System.ComponentModel.DescriptionAttribute("Covariance north north.")]
        public AreaMeasure VarianceNN {
            get {
                return this.varianceNNField;
            }
            set {
                this.varianceNNField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Crossvariance north east.</summary>
        [System.ComponentModel.DescriptionAttribute("Crossvariance north east.")]
        public AreaMeasure VarianceNE {
            get {
                return this.varianceNEField;
            }
            set {
                this.varianceNEField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Crossvariance north vertical.</summary>
        [System.ComponentModel.DescriptionAttribute("Crossvariance north vertical.")]
        public AreaMeasure VarianceNVert {
            get {
                return this.varianceNVertField;
            }
            set {
                this.varianceNVertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Covariance east east.</summary>
        [System.ComponentModel.DescriptionAttribute("Covariance east east.")]
        public AreaMeasure VarianceEE {
            get {
                return this.varianceEEField;
            }
            set {
                this.varianceEEField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Crossvariance east vertical.</summary>
        [System.ComponentModel.DescriptionAttribute("Crossvariance east vertical.")]
        public AreaMeasure VarianceEVert {
            get {
                return this.varianceEVertField;
            }
            set {
                this.varianceEVertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Covariance vertical vertical.</summary>
        [System.ComponentModel.DescriptionAttribute("Covariance vertical vertical.")]
        public AreaMeasure VarianceVertVert {
            get {
                return this.varianceVertVertField;
            }
            set {
                this.varianceVertVertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bias north.</summary>
        [System.ComponentModel.DescriptionAttribute("Bias north.")]
        public LengthMeasure BiasN {
            get {
                return this.biasNField;
            }
            set {
                this.biasNField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bias east.</summary>
        [System.ComponentModel.DescriptionAttribute("Bias east.")]
        public LengthMeasure BiasE {
            get {
                return this.biasEField;
            }
            set {
                this.biasEField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bias vertical. The coordinate system is set up in a right-handed  configuration which makes the vertical direction increasing (i.e., positive) downwards.</summary>
        [System.ComponentModel.DescriptionAttribute("Bias vertical. The coordinate system is set up in a right-handed  configuration w" +
            "hich makes the vertical direction increasing (i.e., positive) downwards.")]
        public LengthMeasure BiasVert {
            get {
                return this.biasVertField;
            }
            set {
                this.biasVertField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StnTrajValid {
        
        private MagneticFluxDensityMeasure magTotalFieldCalcField;
        
        private PlaneAngleMeasure magDipAngleCalcField;
        
        private LinearAccelerationMeasure gravTotalFieldCalcField;
        
        /// <remarks/>
        /// <summary>Calculated total intensity of the geomagnetic field as sum of BGGM,  IFR and local field.</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated total intensity of the geomagnetic field as sum of BGGM,  IFR and loca" +
            "l field.")]
        public MagneticFluxDensityMeasure MagTotalFieldCalc {
            get {
                return this.magTotalFieldCalcField;
            }
            set {
                this.magTotalFieldCalcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calculated magnetic dip (inclination), the angle between the horizontal  and the geomagnetic field (positive down, res .001).</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated magnetic dip (inclination), the angle between the horizontal  and the " +
            "geomagnetic field (positive down, res .001).")]
        public PlaneAngleMeasure MagDipAngleCalc {
            get {
                return this.magDipAngleCalcField;
            }
            set {
                this.magDipAngleCalcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calculated total gravitational field.</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated total gravitational field.")]
        public LinearAccelerationMeasure GravTotalFieldCalc {
            get {
                return this.gravTotalFieldCalcField;
            }
            set {
                this.gravTotalFieldCalcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("part_TrajectoryStation", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class TrajectoryStation {
        
        private string targetField;
        
        private string dTimStnField;
        
        private TrajStationType typeTrajStationField;
        
        private string typeSurveyToolField;
        
        private string calcAlgorithmField;
        
        private MeasuredDepthCoord mdField;
        
        private WellVerticalDepthCoord tvdField;
        
        private PlaneAngleMeasure inclField;
        
        private PlaneAngleMeasure aziField;
        
        private PlaneAngleMeasure mtfField;
        
        private PlaneAngleMeasure gtfField;
        
        private LengthMeasure dispNsField;
        
        private LengthMeasure dispEwField;
        
        private LengthMeasure vertSectField;
        
        private AnglePerLengthMeasure dlsField;
        
        private AnglePerLengthMeasure rateTurnField;
        
        private AnglePerLengthMeasure rateBuildField;
        
        private LengthMeasure mdDeltaField;
        
        private LengthMeasure tvdDeltaField;
        
        private string iscwsaToolErrorModelField;
        
        private LinearAccelerationMeasure gravTotalUncertField;
        
        private PlaneAngleMeasure dipAngleUncertField;
        
        private MagneticFluxDensityMeasure magTotalUncertField;
        
        private bool gravAccelCorUsedField;
        
        private bool gravAccelCorUsedFieldSpecified;
        
        private bool magXAxialCorUsedField;
        
        private bool magXAxialCorUsedFieldSpecified;
        
        private bool sagCorUsedField;
        
        private bool sagCorUsedFieldSpecified;
        
        private bool magDrlstrCorUsedField;
        
        private bool magDrlstrCorUsedFieldSpecified;
        
        private bool infieldRefCorUsedField;
        
        private bool infieldRefCorUsedFieldSpecified;
        
        private bool interpolatedInfieldRefCorUsedField;
        
        private bool interpolatedInfieldRefCorUsedFieldSpecified;
        
        private bool inHoleRefCorUsedField;
        
        private bool inHoleRefCorUsedFieldSpecified;
        
        private bool axialMagInterferenceCorUsedField;
        
        private bool axialMagInterferenceCorUsedFieldSpecified;
        
        private bool cosagCorUsedField;
        
        private bool cosagCorUsedFieldSpecified;
        
        private bool mSACorUsedField;
        
        private bool mSACorUsedFieldSpecified;
        
        private LinearAccelerationMeasure gravTotalFieldReferenceField;
        
        private MagneticFluxDensityMeasure magTotalFieldReferenceField;
        
        private PlaneAngleMeasure magDipAngleReferenceField;
        
        private string magModelUsedField;
        
        private string magModelValidField;
        
        private string geoModelUsedField;
        
        private TrajStationStatus statusTrajStationField;
        
        private bool statusTrajStationFieldSpecified;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private StnTrajValid validField;
        
        private StnTrajMatrixCov matrixCovField;
        
        private AbstractWellLocation[] locationField;
        
        private RefWellboreTrajectoryStation sourceStationField;
        
        private StnTrajRawData rawDataField;
        
        private StnTrajCorUsed corUsedField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A pointer to the intended target of this station.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the intended target of this station.")]
        public string Target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time the station was measured or created.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time the station was measured or created.")]
        public string DTimStn {
            get {
                return this.dTimStnField;
            }
            set {
                this.dTimStnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of survey station.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Type of survey station.")]
        public TrajStationType TypeTrajStation {
            get {
                return this.typeTrajStationField;
            }
            set {
                this.typeTrajStationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of tool used for the measurements.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of tool used for the measurements.")]
        public string TypeSurveyTool {
            get {
                return this.typeSurveyToolField;
            }
            set {
                this.typeSurveyToolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of algorithm used in the position calculation.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of algorithm used in the position calculation.")]
        public string CalcAlgorithm {
            get {
                return this.calcAlgorithmField;
            }
            set {
                this.calcAlgorithmField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of measurement from the drill datum. This is an API "node-index" query parameter for growing objects.  See the relevant API specification for the query behavior related to this element.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Measured depth of measurement from the drill datum. This is an API \"node-index\" q" +
            "uery parameter for growing objects.  See the relevant API specification for the " +
            "query behavior related to this element.")]
        public MeasuredDepthCoord Md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Vertical depth of the measurements.</summary>
        [System.ComponentModel.DescriptionAttribute("Vertical depth of the measurements.")]
        public WellVerticalDepthCoord Tvd {
            get {
                return this.tvdField;
            }
            set {
                this.tvdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole inclination, measured from vertical.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole inclination, measured from vertical.")]
        public PlaneAngleMeasure Incl {
            get {
                return this.inclField;
            }
            set {
                this.inclField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole azimuth. Corrected to wells azimuth reference.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole azimuth. Corrected to wells azimuth reference.")]
        public PlaneAngleMeasure Azi {
            get {
                return this.aziField;
            }
            set {
                this.aziField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Toolface angle (magnetic).</summary>
        [System.ComponentModel.DescriptionAttribute("Toolface angle (magnetic).")]
        public PlaneAngleMeasure Mtf {
            get {
                return this.mtfField;
            }
            set {
                this.mtfField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Toolface angle (gravity).</summary>
        [System.ComponentModel.DescriptionAttribute("Toolface angle (gravity).")]
        public PlaneAngleMeasure Gtf {
            get {
                return this.gtfField;
            }
            set {
                this.gtfField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>North-south offset, positive to the North.  This is relative to wellLocation with a North axis orientation of aziRef. If a displacement with respect to a different point is desired then define a localCRS and specify local coordinates in location.</summary>
        [System.ComponentModel.DescriptionAttribute("North-south offset, positive to the North.  This is relative to wellLocation with" +
            " a North axis orientation of aziRef. If a displacement with respect to a differe" +
            "nt point is desired then define a localCRS and specify local coordinates in loca" +
            "tion.")]
        public LengthMeasure DispNs {
            get {
                return this.dispNsField;
            }
            set {
                this.dispNsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>East-west offset, positive to the East. This is relative to wellLocation with a North axis orientation of aziRef.  If a displacement with respect to a different point is desired then define a localCRS and specify local coordinates in location.</summary>
        [System.ComponentModel.DescriptionAttribute("East-west offset, positive to the East. This is relative to wellLocation with a N" +
            "orth axis orientation of aziRef.  If a displacement with respect to a different " +
            "point is desired then define a localCRS and specify local coordinates in locatio" +
            "n.")]
        public LengthMeasure DispEw {
            get {
                return this.dispEwField;
            }
            set {
                this.dispEwField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance along vertical section azimuth plane.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance along vertical section azimuth plane.")]
        public LengthMeasure VertSect {
            get {
                return this.vertSectField;
            }
            set {
                this.vertSectField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Dogleg severity.</summary>
        [System.ComponentModel.DescriptionAttribute("Dogleg severity.")]
        public AnglePerLengthMeasure Dls {
            get {
                return this.dlsField;
            }
            set {
                this.dlsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Turn rate, radius of curvature computation.</summary>
        [System.ComponentModel.DescriptionAttribute("Turn rate, radius of curvature computation.")]
        public AnglePerLengthMeasure RateTurn {
            get {
                return this.rateTurnField;
            }
            set {
                this.rateTurnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Build Rate, radius of curvature computation.</summary>
        [System.ComponentModel.DescriptionAttribute("Build Rate, radius of curvature computation.")]
        public AnglePerLengthMeasure RateBuild {
            get {
                return this.rateBuildField;
            }
            set {
                this.rateBuildField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Delta measured depth from previous station.</summary>
        [System.ComponentModel.DescriptionAttribute("Delta measured depth from previous station.")]
        public LengthMeasure MdDelta {
            get {
                return this.mdDeltaField;
            }
            set {
                this.mdDeltaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Delta true vertical depth from previous station.</summary>
        [System.ComponentModel.DescriptionAttribute("Delta true vertical depth from previous station.")]
        public LengthMeasure TvdDelta {
            get {
                return this.tvdDeltaField;
            }
            set {
                this.tvdDeltaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reference to the toolErrorModel object used to compute covariance matrix.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Reference to the toolErrorModel object used to compute covariance matrix.")]
        public string IscwsaToolErrorModel {
            get {
                return this.iscwsaToolErrorModelField;
            }
            set {
                this.iscwsaToolErrorModelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Survey tool gravity uncertainty.</summary>
        [System.ComponentModel.DescriptionAttribute("Survey tool gravity uncertainty.")]
        public LinearAccelerationMeasure GravTotalUncert {
            get {
                return this.gravTotalUncertField;
            }
            set {
                this.gravTotalUncertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Survey tool dip uncertainty.</summary>
        [System.ComponentModel.DescriptionAttribute("Survey tool dip uncertainty.")]
        public PlaneAngleMeasure DipAngleUncert {
            get {
                return this.dipAngleUncertField;
            }
            set {
                this.dipAngleUncertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Survey tool magnetic uncertainty.</summary>
        [System.ComponentModel.DescriptionAttribute("Survey tool magnetic uncertainty.")]
        public MagneticFluxDensityMeasure MagTotalUncert {
            get {
                return this.magTotalUncertField;
            }
            set {
                this.magTotalUncertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was an accelerometer alignment correction applied to survey computation?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Was an accelerometer alignment correction applied to survey computation?   Values" +
            " are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool GravAccelCorUsed {
            get {
                return this.gravAccelCorUsedField;
            }
            set {
                this.gravAccelCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GravAccelCorUsedSpecified {
            get {
                return this.gravAccelCorUsedFieldSpecified;
            }
            set {
                this.gravAccelCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was a magnetometer alignment correction applied to survey computation?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Was a magnetometer alignment correction applied to survey computation?   Values a" +
            "re \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool MagXAxialCorUsed {
            get {
                return this.magXAxialCorUsedField;
            }
            set {
                this.magXAxialCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MagXAxialCorUsedSpecified {
            get {
                return this.magXAxialCorUsedFieldSpecified;
            }
            set {
                this.magXAxialCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was a bottom hole assembly sag correction applied to the survey computation?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Was a bottom hole assembly sag correction applied to the survey computation?   Va" +
            "lues are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool SagCorUsed {
            get {
                return this.sagCorUsedField;
            }
            set {
                this.sagCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SagCorUsedSpecified {
            get {
                return this.sagCorUsedFieldSpecified;
            }
            set {
                this.sagCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was a drillstring magnetism correction applied to survey computation?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Was a drillstring magnetism correction applied to survey computation?   Values ar" +
            "e \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool MagDrlstrCorUsed {
            get {
                return this.magDrlstrCorUsedField;
            }
            set {
                this.magDrlstrCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MagDrlstrCorUsedSpecified {
            get {
                return this.magDrlstrCorUsedFieldSpecified;
            }
            set {
                this.magDrlstrCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was an In Field Referencing (IFR) correction applied to the azimuth value?   Values are "true" (or "1") and "false" (or "0"). An IFR survey measures the strength and direction of the Earth's magnetic field over the area of interest.  By taking a geomagnetic modelled values away  from these field survey results, we are left with a local crustal correction,  which since it is assumed geological in nature, only varies over geological timescales.   For MWD survey operations, these corrections are applied in addition to the geomagnetic model  to provide accurate knowledge of the local magnetic field and hence to improve the  accuracy of MWD magnetic azimuth measurements.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Was an In Field Referencing (IFR) correction applied to the azimuth value?   Values are ""true"" (or ""1"") and ""false"" (or ""0""). An IFR survey measures the strength and direction of the Earth's magnetic field over the area of interest.  By taking a geomagnetic modelled values away  from these field survey results, we are left with a local crustal correction,  which since it is assumed geological in nature, only varies over geological timescales.   For MWD survey operations, these corrections are applied in addition to the geomagnetic model  to provide accurate knowledge of the local magnetic field and hence to improve the  accuracy of MWD magnetic azimuth measurements.")]
        public bool InfieldRefCorUsed {
            get {
                return this.infieldRefCorUsedField;
            }
            set {
                this.infieldRefCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InfieldRefCorUsedSpecified {
            get {
                return this.infieldRefCorUsedFieldSpecified;
            }
            set {
                this.infieldRefCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was an Interpolated In Field Referencing (IIFR) correction applied to the azimuth value?   Values are "true" (or "1") and "false" (or "0"). Interpolated In Field Referencing measures the diurnal Earth magnetic field variations resulting from electrical  currents in the ionosphere and effects of magnetic storms hitting the Earth. It increases again the accuracy  of the magnetic azimuth measurement.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Was an Interpolated In Field Referencing (IIFR) correction applied to the azimuth value?   Values are ""true"" (or ""1"") and ""false"" (or ""0""). Interpolated In Field Referencing measures the diurnal Earth magnetic field variations resulting from electrical  currents in the ionosphere and effects of magnetic storms hitting the Earth. It increases again the accuracy  of the magnetic azimuth measurement.")]
        public bool InterpolatedInfieldRefCorUsed {
            get {
                return this.interpolatedInfieldRefCorUsedField;
            }
            set {
                this.interpolatedInfieldRefCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterpolatedInfieldRefCorUsedSpecified {
            get {
                return this.interpolatedInfieldRefCorUsedFieldSpecified;
            }
            set {
                this.interpolatedInfieldRefCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was an In Hole Referencing (IHR) correction applied to the inclination and/or azimuth values?   Values are "true" (or "1") and "false" (or "0"). In-Hole Referencing essentially involves comparing gyro surveys to MWD surveys in a tangent  section of a well. Once a small part of a tangent section has been drilled and surveyed using an  MWD tool, then an open hole (OH) gyro is run. By comparing the Gyro surveys to the MWD  surveys a correction can be calculated for the MWD. This correction is then assumed as valid  for the rest of the tangent section allowing to have a near gyro accuracy for the whole section,  therefore reducing the ellipse of uncertainty (EOU) size.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Was an In Hole Referencing (IHR) correction applied to the inclination and/or azimuth values?   Values are ""true"" (or ""1"") and ""false"" (or ""0""). In-Hole Referencing essentially involves comparing gyro surveys to MWD surveys in a tangent  section of a well. Once a small part of a tangent section has been drilled and surveyed using an  MWD tool, then an open hole (OH) gyro is run. By comparing the Gyro surveys to the MWD  surveys a correction can be calculated for the MWD. This correction is then assumed as valid  for the rest of the tangent section allowing to have a near gyro accuracy for the whole section,  therefore reducing the ellipse of uncertainty (EOU) size.")]
        public bool InHoleRefCorUsed {
            get {
                return this.inHoleRefCorUsedField;
            }
            set {
                this.inHoleRefCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InHoleRefCorUsedSpecified {
            get {
                return this.inHoleRefCorUsedFieldSpecified;
            }
            set {
                this.inHoleRefCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was an Axial Magnetic Interference (AMI) correction applied to the azimuth value?   Values are "true" (or "1") and "false" (or "0"). Most of the BHAs used to drill wells include an MWD tool. An MWD is a magnetic survey tool and as  such suffer from magnetic interferences from a wide variety of sources. Magnetic interferences can be  categorized into axial and radial type interferences.  Axial interferences are mainly the result of magnetic poles from the drill string steel components  located below and above the MWD tool. Radial interferences are numerous.  Therefore, there is a risk that magXAxialCorUsed includes both Axial and radial corrections.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Was an Axial Magnetic Interference (AMI) correction applied to the azimuth value?   Values are ""true"" (or ""1"") and ""false"" (or ""0""). Most of the BHAs used to drill wells include an MWD tool. An MWD is a magnetic survey tool and as  such suffer from magnetic interferences from a wide variety of sources. Magnetic interferences can be  categorized into axial and radial type interferences.  Axial interferences are mainly the result of magnetic poles from the drill string steel components  located below and above the MWD tool. Radial interferences are numerous.  Therefore, there is a risk that magXAxialCorUsed includes both Axial and radial corrections.")]
        public bool AxialMagInterferenceCorUsed {
            get {
                return this.axialMagInterferenceCorUsedField;
            }
            set {
                this.axialMagInterferenceCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AxialMagInterferenceCorUsedSpecified {
            get {
                return this.axialMagInterferenceCorUsedFieldSpecified;
            }
            set {
                this.axialMagInterferenceCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>WWas a Cosag Correction applied to the azimuth values?   Values are "true" (or "1") and "false" (or "0"). The BHA Sag Correction is the same as the Sag Correction except it includes the horizontal  misalignment (Cosag).</summary>
        [System.ComponentModel.DescriptionAttribute("WWas a Cosag Correction applied to the azimuth values?   Values are \"true\" (or \"1" +
            "\") and \"false\" (or \"0\"). The BHA Sag Correction is the same as the Sag Correctio" +
            "n except it includes the horizontal  misalignment (Cosag).")]
        public bool CosagCorUsed {
            get {
                return this.cosagCorUsedField;
            }
            set {
                this.cosagCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CosagCorUsedSpecified {
            get {
                return this.cosagCorUsedFieldSpecified;
            }
            set {
                this.cosagCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was a correction applied to the survey due to a  Multi-Station Analysis process?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Was a correction applied to the survey due to a  Multi-Station Analysis process? " +
            "  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool MSACorUsed {
            get {
                return this.mSACorUsedField;
            }
            set {
                this.mSACorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MSACorUsedSpecified {
            get {
                return this.mSACorUsedFieldSpecified;
            }
            set {
                this.mSACorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gravitational field theoretical/reference value.</summary>
        [System.ComponentModel.DescriptionAttribute("Gravitational field theoretical/reference value.")]
        public LinearAccelerationMeasure GravTotalFieldReference {
            get {
                return this.gravTotalFieldReferenceField;
            }
            set {
                this.gravTotalFieldReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Geomagnetic field theoretical/reference value.</summary>
        [System.ComponentModel.DescriptionAttribute("Geomagnetic field theoretical/reference value.")]
        public MagneticFluxDensityMeasure MagTotalFieldReference {
            get {
                return this.magTotalFieldReferenceField;
            }
            set {
                this.magTotalFieldReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Magnetic dip angle theoretical/reference value.</summary>
        [System.ComponentModel.DescriptionAttribute("Magnetic dip angle theoretical/reference value.")]
        public PlaneAngleMeasure MagDipAngleReference {
            get {
                return this.magDipAngleReferenceField;
            }
            set {
                this.magDipAngleReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Geomagnetic model used.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Geomagnetic model used.")]
        public string MagModelUsed {
            get {
                return this.magModelUsedField;
            }
            set {
                this.magModelUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Current valid interval for the geomagnetic model used.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Current valid interval for the geomagnetic model used.")]
        public string MagModelValid {
            get {
                return this.magModelValidField;
            }
            set {
                this.magModelValidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gravitational model used.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Gravitational model used.")]
        public string GeoModelUsed {
            get {
                return this.geoModelUsedField;
            }
            set {
                this.geoModelUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Status of the station.</summary>
        [System.ComponentModel.DescriptionAttribute("Status of the station.")]
        public TrajStationStatus StatusTrajStation {
            get {
                return this.statusTrajStationField;
            }
            set {
                this.statusTrajStationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusTrajStationSpecified {
            get {
                return this.statusTrajStationFieldSpecified;
            }
            set {
                this.statusTrajStationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public StnTrajValid Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public StnTrajMatrixCov MatrixCov {
            get {
                return this.matrixCovField;
            }
            set {
                this.matrixCovField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Location")]
        public AbstractWellLocation[] Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public RefWellboreTrajectoryStation SourceStation {
            get {
                return this.sourceStationField;
            }
            set {
                this.sourceStationField = value;
            }
        }
        
        /// <remarks/>
        public StnTrajRawData RawData {
            get {
                return this.rawDataField;
            }
            set {
                this.rawDataField = value;
            }
        }
        
        /// <remarks/>
        public StnTrajCorUsed CorUsed {
            get {
                return this.corUsedField;
            }
            set {
                this.corUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum TrajStationType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("AZI and TVD")]
        AZIandTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("azimuth on plane")]
        azimuthonplane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS to NS")]
        DLStoNS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EW and TVD")]
        EWandTVD,
        
        /// <remarks/>
        NS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate to delta-MD")]
        buildratetodeltaMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate to INCL")]
        buildratetoINCL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate to MD")]
        buildratetoMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate and turnrate to AZI")]
        buildrateandturnratetoAZI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate and turnrate to delta-MD")]
        buildrateandturnratetodeltaMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate and turnrate to INCL")]
        buildrateandturnratetoINCL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate and turnrate to INCL and AZI")]
        buildrateandturnratetoINCLandAZI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate and turnrate to MD")]
        buildrateandturnratetoMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate and turnrate to TVD")]
        buildrateandturnratetoTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate TVD")]
        buildrateTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing MD")]
        casingMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing TVD")]
        casingTVD,
        
        /// <remarks/>
        DLS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS to AZI and MD")]
        DLStoAZIandMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS to AZI-TVD")]
        DLStoAZITVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS to INCL")]
        DLStoINCL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS to INCL and AZI")]
        DLStoINCLandAZI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS to INCL and MD")]
        DLStoINCLandMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS to INCL and TVD")]
        DLStoINCLandTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS and toolface to AZI")]
        DLSandtoolfacetoAZI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS and toolface to delta-MD")]
        DLSandtoolfacetodeltaMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS and toolface to INCL")]
        DLSandtoolfacetoINCL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS and toolface to INCL-AZI")]
        DLSandtoolfacetoINCLAZI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS and toolface to MD")]
        DLSandtoolfacetoMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS and toolface to TVD")]
        DLSandtoolfacetoTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation MD")]
        formationMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation TVD")]
        formationTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hold to delta-MD")]
        holdtodeltaMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hold to MD")]
        holdtoMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hold to TVD")]
        holdtoTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("marker MD")]
        markerMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("marker TVD")]
        markerTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("target center")]
        targetcenter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("target offset")]
        targetoffset,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tie in point")]
        tieinpoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("turnrate to AZI")]
        turnratetoAZI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("turnrate to delta-MD")]
        turnratetodeltaMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("turnrate to MD")]
        turnratetoMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("turnrate to TVD")]
        turnratetoTVD,
        
        /// <remarks/>
        unknown,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MD and INCL")]
        MDandINCL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MD INCL and AZI")]
        MDINCLandAZI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N E and TVD")]
        NEandTVD,
        
        /// <remarks/>
        interpolated,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class AnglePerLengthMeasure {
        
        private AnglePerLengthUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public AnglePerLengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum AnglePerLengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.01 dega/ft")]
        Item001degaft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/30 dega/ft")]
        Item130degaft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/30 dega/m")]
        Item130degam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dega/ft")]
        degaft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dega/m")]
        degam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rad/ft")]
        radft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rad/m")]
        radm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rev/ft")]
        revft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rev/m")]
        revm,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum TrajStationStatus {
        
        /// <remarks/>
        open,
        
        /// <remarks/>
        rejected,
        
        /// <remarks/>
        position,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectedWellLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticWellLocation))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public abstract partial class AbstractWellLocation {
        
        private bool originalField;
        
        private bool originalFieldSpecified;
        
        private string descriptionField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Flag indicating (if "true" or "1") that this pair of values was  the original data given for the location. If the pair of values was  calculated from an original pair of values, this flag should be "false" (or "0"),  or not present.</summary>
        [System.ComponentModel.DescriptionAttribute("Flag indicating (if \"true\" or \"1\") that this pair of values was  the original dat" +
            "a given for the location. If the pair of values was  calculated from an original" +
            " pair of values, this flag should be \"false\" (or \"0\"),  or not present.")]
        public bool Original {
            get {
                return this.originalField;
            }
            set {
                this.originalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OriginalSpecified {
            get {
                return this.originalFieldSpecified;
            }
            set {
                this.originalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A Comment, generally given to help the reader  interpret the coordinates if the CRS and the chosen pair do not make them clear.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A Comment, generally given to help the reader  interpret the coordinates if the C" +
            "RS and the chosen pair do not make them clear.")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class ProjectedWellLocation : AbstractWellLocation {
        
        private double xField;
        
        private double yField;
        
        private AbstractProjectedCrs crsField;
        
        /// <remarks/>
        public double X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public double Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        public AbstractProjectedCrs Crs {
            get {
                return this.crsField;
            }
            set {
                this.crsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectedLocalAuthorityCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectedGmlCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectedWktCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectedUnknownCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectedEpsgCrs))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public abstract partial class AbstractProjectedCrs {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ProjectedLocalAuthorityCrs : AbstractProjectedCrs {
        
        private string localAuthorityCrsNameField;
        
        /// <remarks/>
        public string LocalAuthorityCrsName {
            get {
                return this.localAuthorityCrsNameField;
            }
            set {
                this.localAuthorityCrsNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ProjectedGmlCrs : AbstractProjectedCrs {
        
        private ProjectedCRSType gmlProjectedCrsDefinitionField;
        
        /// <remarks/>
        public ProjectedCRSType GmlProjectedCrsDefinition {
            get {
                return this.gmlProjectedCrsDefinitionField;
            }
            set {
                this.gmlProjectedCrsDefinitionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("ProjectedCRS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class ProjectedCRSType : AbstractGeneralDerivedCRSType {
        
        private GeodeticCRSPropertyType itemField;
        
        private CartesianCSPropertyType cartesianCSField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("baseGeodeticCRS")]
        public GeodeticCRSPropertyType Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public CartesianCSPropertyType cartesianCS {
            get {
                return this.cartesianCSField;
            }
            set {
                this.cartesianCSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("baseGeodeticCRS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class GeodeticCRSPropertyType {
        
        private GeodeticCRSType geodeticCRSField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public GeodeticCRSType GeodeticCRS {
            get {
                return this.geodeticCRSField;
            }
            set {
                this.geodeticCRSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("GeodeticCRS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class GeodeticCRSType : AbstractCRSType {
        
        private object itemField;
        
        private GeodeticDatumPropertyType geodeticDatumField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cartesianCS", typeof(CartesianCSPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("ellipsoidalCS", typeof(EllipsoidalCSPropertyType))]
        [System.Xml.Serialization.XmlElementAttribute("sphericalCS", typeof(SphericalCSPropertyType))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public GeodeticDatumPropertyType geodeticDatum {
            get {
                return this.geodeticDatumField;
            }
            set {
                this.geodeticDatumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("cartesianCS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class CartesianCSPropertyType {
        
        private CartesianCSType cartesianCSField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CartesianCSType CartesianCS {
            get {
                return this.cartesianCSField;
            }
            set {
                this.cartesianCSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("CartesianCS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class CartesianCSType : AbstractCoordinateSystemType {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SphericalCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CartesianCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipsoidalCSType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("AbstractCoordinateSystem", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public abstract partial class AbstractCoordinateSystemType : IdentifiedObjectType {
        
        private CoordinateSystemAxisPropertyType[] axisField;
        
        private AggregationType aggregationTypeField;
        
        private bool aggregationTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("axis")]
        public CoordinateSystemAxisPropertyType[] axis {
            get {
                return this.axisField;
            }
            set {
                this.axisField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public AggregationType aggregationType {
            get {
                return this.aggregationTypeField;
            }
            set {
                this.aggregationTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool aggregationTypeSpecified {
            get {
                return this.aggregationTypeFieldSpecified;
            }
            set {
                this.aggregationTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("axis", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class CoordinateSystemAxisPropertyType {
        
        private CoordinateSystemAxisType coordinateSystemAxisField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CoordinateSystemAxisType CoordinateSystemAxis {
            get {
                return this.coordinateSystemAxisField;
            }
            set {
                this.coordinateSystemAxisField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("CoordinateSystemAxis", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class CoordinateSystemAxisType : IdentifiedObjectType {
        
        private CodeType axisAbbrevField;
        
        private CodeWithAuthorityType axisDirectionField;
        
        private double minimumValueField;
        
        private bool minimumValueFieldSpecified;
        
        private double maximumValueField;
        
        private bool maximumValueFieldSpecified;
        
        private CodeWithAuthorityType rangeMeaningField;
        
        /// <remarks/>
        public CodeType axisAbbrev {
            get {
                return this.axisAbbrevField;
            }
            set {
                this.axisAbbrevField = value;
            }
        }
        
        /// <remarks/>
        public CodeWithAuthorityType axisDirection {
            get {
                return this.axisDirectionField;
            }
            set {
                this.axisDirectionField = value;
            }
        }
        
        /// <remarks/>
        public double minimumValue {
            get {
                return this.minimumValueField;
            }
            set {
                this.minimumValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minimumValueSpecified {
            get {
                return this.minimumValueFieldSpecified;
            }
            set {
                this.minimumValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double maximumValue {
            get {
                return this.maximumValueField;
            }
            set {
                this.maximumValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maximumValueSpecified {
            get {
                return this.maximumValueFieldSpecified;
            }
            set {
                this.maximumValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public CodeWithAuthorityType rangeMeaning {
            get {
                return this.rangeMeaningField;
            }
            set {
                this.rangeMeaningField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CodeWithAuthorityType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("name", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class CodeType {
        
        private string codeSpaceField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string codeSpace {
            get {
                return this.codeSpaceField;
            }
            set {
                this.codeSpaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("identifier", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class CodeWithAuthorityType : CodeType {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractCoordinateOperationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractGeneralConversionType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipsoidType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PrimeMeridianType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractDatumType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalDatumType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticDatumType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CoordinateSystemAxisType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractCoordinateSystemType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SphericalCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CartesianCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipsoidalCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractGeneralDerivedCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectedCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticCRSType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    public abstract partial class IdentifiedObjectType : DefinitionType {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IdentifiedObjectType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractCoordinateOperationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractGeneralConversionType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipsoidType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PrimeMeridianType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractDatumType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalDatumType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticDatumType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CoordinateSystemAxisType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractCoordinateSystemType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SphericalCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CartesianCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipsoidalCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractGeneralDerivedCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectedCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticCRSType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("Definition", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class DefinitionType : DefinitionBaseType {
        
        private string remarksField;
        
        /// <remarks/>
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DefinitionType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IdentifiedObjectType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractCoordinateOperationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractGeneralConversionType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipsoidType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PrimeMeridianType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractDatumType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalDatumType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticDatumType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CoordinateSystemAxisType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractCoordinateSystemType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SphericalCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CartesianCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipsoidalCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractGeneralDerivedCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectedCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticCRSType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    public partial class DefinitionBaseType : AbstractGMLType {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractTimeObjectType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractTimePrimitiveType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DefinitionBaseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DefinitionType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IdentifiedObjectType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractCoordinateOperationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractGeneralConversionType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipsoidType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PrimeMeridianType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractDatumType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalDatumType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticDatumType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CoordinateSystemAxisType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractCoordinateSystemType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SphericalCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CartesianCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipsoidalCSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractGeneralDerivedCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectedCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticCRSType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("AbstractGML", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public abstract partial class AbstractGMLType {
        
        private StringOrRefType descriptionField;
        
        private ReferenceType descriptionReferenceField;
        
        private CodeWithAuthorityType identifierField;
        
        private CodeType[] nameField;
        
        private string idField;
        
        /// <remarks/>
        public StringOrRefType description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public ReferenceType descriptionReference {
            get {
                return this.descriptionReferenceField;
            }
            set {
                this.descriptionReferenceField = value;
            }
        }
        
        /// <remarks/>
        public CodeWithAuthorityType identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name")]
        public CodeType[] name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="ID")]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("description", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class StringOrRefType {
        
        private string nilReasonField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("descriptionReference", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class ReferenceType {
        
        private bool ownsField;
        
        private string nilReasonField;
        
        public ReferenceType() {
            this.ownsField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool owns {
            get {
                return this.ownsField;
            }
            set {
                this.ownsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractTimePrimitiveType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("AbstractTimeObject", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public abstract partial class AbstractTimeObjectType : AbstractGMLType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("AbstractTimePrimitive", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public abstract partial class AbstractTimePrimitiveType : AbstractTimeObjectType {
        
        private RelatedTimeType[] relatedTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("relatedTime")]
        public RelatedTimeType[] relatedTime {
            get {
                return this.relatedTimeField;
            }
            set {
                this.relatedTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    public partial class RelatedTimeType : TimePrimitivePropertyType {
        
        private RelatedTimeTypeRelativePosition relativePositionField;
        
        private bool relativePositionFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public RelatedTimeTypeRelativePosition relativePosition {
            get {
                return this.relativePositionField;
            }
            set {
                this.relativePositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool relativePositionSpecified {
            get {
                return this.relativePositionFieldSpecified;
            }
            set {
                this.relativePositionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.opengis.net/gml/3.2")]
    public enum RelatedTimeTypeRelativePosition {
        
        /// <remarks/>
        Before,
        
        /// <remarks/>
        After,
        
        /// <remarks/>
        Begins,
        
        /// <remarks/>
        Ends,
        
        /// <remarks/>
        During,
        
        /// <remarks/>
        Equals,
        
        /// <remarks/>
        Contains,
        
        /// <remarks/>
        Overlaps,
        
        /// <remarks/>
        Meets,
        
        /// <remarks/>
        OverlappedBy,
        
        /// <remarks/>
        MetBy,
        
        /// <remarks/>
        BegunBy,
        
        /// <remarks/>
        EndedBy,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RelatedTimeType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    public partial class TimePrimitivePropertyType {
        
        private AbstractTimePrimitiveType abstractTimePrimitiveField;
        
        private string nilReasonField;
        
        private bool ownsField;
        
        public TimePrimitivePropertyType() {
            this.ownsField = false;
        }
        
        /// <remarks/>
        public AbstractTimePrimitiveType AbstractTimePrimitive {
            get {
                return this.abstractTimePrimitiveField;
            }
            set {
                this.abstractTimePrimitiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool owns {
            get {
                return this.ownsField;
            }
            set {
                this.ownsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractGeneralConversionType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("AbstractOperation", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public abstract partial class AbstractCoordinateOperationType : IdentifiedObjectType {
        
        private domainOfValidity domainOfValidityField;
        
        private string[] scopeField;
        
        private string operationVersionField;
        
        private coordinateOperationAccuracy[] coordinateOperationAccuracyField;
        
        private CRSPropertyType sourceCRSField;
        
        private CRSPropertyType targetCRSField;
        
        /// <remarks/>
        public domainOfValidity domainOfValidity {
            get {
                return this.domainOfValidityField;
            }
            set {
                this.domainOfValidityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("scope")]
        public string[] scope {
            get {
                return this.scopeField;
            }
            set {
                this.scopeField = value;
            }
        }
        
        /// <remarks/>
        public string operationVersion {
            get {
                return this.operationVersionField;
            }
            set {
                this.operationVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coordinateOperationAccuracy")]
        public coordinateOperationAccuracy[] coordinateOperationAccuracy {
            get {
                return this.coordinateOperationAccuracyField;
            }
            set {
                this.coordinateOperationAccuracyField = value;
            }
        }
        
        /// <remarks/>
        public CRSPropertyType sourceCRS {
            get {
                return this.sourceCRSField;
            }
            set {
                this.sourceCRSField = value;
            }
        }
        
        /// <remarks/>
        public CRSPropertyType targetCRS {
            get {
                return this.targetCRSField;
            }
            set {
                this.targetCRSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class domainOfValidity {
        
        private EX_Extent_Type eX_ExtentField;
        
        private string nilReasonField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
        public EX_Extent_Type EX_Extent {
            get {
                return this.eX_ExtentField;
            }
            set {
                this.eX_ExtentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("EX_Extent", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public partial class EX_Extent_Type : AbstractObject_Type {
        
        private CharacterString_PropertyType descriptionField;
        
        private EX_GeographicExtent_PropertyType[] geographicElementField;
        
        private EX_TemporalExtent_PropertyType[] temporalElementField;
        
        private EX_VerticalExtent_PropertyType[] verticalElementField;
        
        /// <remarks/>
        public CharacterString_PropertyType description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("geographicElement")]
        public EX_GeographicExtent_PropertyType[] geographicElement {
            get {
                return this.geographicElementField;
            }
            set {
                this.geographicElementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("temporalElement")]
        public EX_TemporalExtent_PropertyType[] temporalElement {
            get {
                return this.temporalElementField;
            }
            set {
                this.temporalElementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("verticalElement")]
        public EX_VerticalExtent_PropertyType[] verticalElement {
            get {
                return this.verticalElementField;
            }
            set {
                this.verticalElementField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gco")]
    public partial class CharacterString_PropertyType {
        
        private string characterStringField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public string CharacterString {
            get {
                return this.characterStringField;
            }
            set {
                this.characterStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class EX_GeographicExtent_PropertyType {
        
        private AbstractEX_GeographicExtent_Type abstractEX_GeographicExtentField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public AbstractEX_GeographicExtent_Type AbstractEX_GeographicExtent {
            get {
                return this.abstractEX_GeographicExtentField;
            }
            set {
                this.abstractEX_GeographicExtentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("AbstractEX_GeographicExtent", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public abstract partial class AbstractEX_GeographicExtent_Type : AbstractObject_Type {
        
        private Boolean_PropertyType extentTypeCodeField;
        
        /// <remarks/>
        public Boolean_PropertyType extentTypeCode {
            get {
                return this.extentTypeCodeField;
            }
            set {
                this.extentTypeCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gco")]
    public partial class Boolean_PropertyType {
        
        private bool booleanField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public bool Boolean {
            get {
                return this.booleanField;
            }
            set {
                this.booleanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractDQ_Result_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CI_Series_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CI_OnlineResource_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CI_Address_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CI_Telephone_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CI_Contact_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CI_ResponsibleParty_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CI_Date_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CI_Citation_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MD_Identifier_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractDQ_Element_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractDQ_PositionalAccuracy_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EX_VerticalExtent_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EX_TemporalExtent_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractEX_GeographicExtent_Type))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EX_Extent_Type))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gco")]
    public abstract partial class AbstractObject_Type {
        
        private string idField;
        
        private string uuidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="ID")]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("AbstractDQ_Result", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public abstract partial class AbstractDQ_Result_Type : AbstractObject_Type {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("CI_Series", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public partial class CI_Series_Type : AbstractObject_Type {
        
        private CharacterString_PropertyType nameField;
        
        private CharacterString_PropertyType issueIdentificationField;
        
        private CharacterString_PropertyType pageField;
        
        /// <remarks/>
        public CharacterString_PropertyType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType issueIdentification {
            get {
                return this.issueIdentificationField;
            }
            set {
                this.issueIdentificationField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("CI_OnlineResource", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public partial class CI_OnlineResource_Type : AbstractObject_Type {
        
        private URL_PropertyType linkageField;
        
        private CharacterString_PropertyType protocolField;
        
        private CharacterString_PropertyType applicationProfileField;
        
        private CharacterString_PropertyType nameField;
        
        private CharacterString_PropertyType descriptionField;
        
        private CI_OnLineFunctionCode_PropertyType functionField;
        
        /// <remarks/>
        public URL_PropertyType linkage {
            get {
                return this.linkageField;
            }
            set {
                this.linkageField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType applicationProfile {
            get {
                return this.applicationProfileField;
            }
            set {
                this.applicationProfileField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public CI_OnLineFunctionCode_PropertyType function {
            get {
                return this.functionField;
            }
            set {
                this.functionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class URL_PropertyType {
        
        private string uRLField;
        
        private string nilReasonField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class CI_OnLineFunctionCode_PropertyType {
        
        private CodeListValue_Type cI_OnLineFunctionCodeField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CodeListValue_Type CI_OnLineFunctionCode {
            get {
                return this.cI_OnLineFunctionCodeField;
            }
            set {
                this.cI_OnLineFunctionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gco")]
    [System.Xml.Serialization.XmlRootAttribute("CI_DateTypeCode", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public partial class CodeListValue_Type {
        
        private string codeListField;
        
        private string codeListValueField;
        
        private string codeSpaceField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string codeList {
            get {
                return this.codeListField;
            }
            set {
                this.codeListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string codeListValue {
            get {
                return this.codeListValueField;
            }
            set {
                this.codeListValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string codeSpace {
            get {
                return this.codeSpaceField;
            }
            set {
                this.codeSpaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("CI_Address", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public partial class CI_Address_Type : AbstractObject_Type {
        
        private CharacterString_PropertyType[] deliveryPointField;
        
        private CharacterString_PropertyType cityField;
        
        private CharacterString_PropertyType administrativeAreaField;
        
        private CharacterString_PropertyType postalCodeField;
        
        private CharacterString_PropertyType countryField;
        
        private CharacterString_PropertyType[] electronicMailAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deliveryPoint")]
        public CharacterString_PropertyType[] deliveryPoint {
            get {
                return this.deliveryPointField;
            }
            set {
                this.deliveryPointField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType administrativeArea {
            get {
                return this.administrativeAreaField;
            }
            set {
                this.administrativeAreaField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType postalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("electronicMailAddress")]
        public CharacterString_PropertyType[] electronicMailAddress {
            get {
                return this.electronicMailAddressField;
            }
            set {
                this.electronicMailAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("CI_Telephone", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public partial class CI_Telephone_Type : AbstractObject_Type {
        
        private CharacterString_PropertyType[] voiceField;
        
        private CharacterString_PropertyType[] facsimileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("voice")]
        public CharacterString_PropertyType[] voice {
            get {
                return this.voiceField;
            }
            set {
                this.voiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("facsimile")]
        public CharacterString_PropertyType[] facsimile {
            get {
                return this.facsimileField;
            }
            set {
                this.facsimileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("CI_Contact", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public partial class CI_Contact_Type : AbstractObject_Type {
        
        private CI_Telephone_PropertyType phoneField;
        
        private CI_Address_PropertyType addressField;
        
        private CI_OnlineResource_PropertyType onlineResourceField;
        
        private CharacterString_PropertyType hoursOfServiceField;
        
        private CharacterString_PropertyType contactInstructionsField;
        
        /// <remarks/>
        public CI_Telephone_PropertyType phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public CI_Address_PropertyType address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public CI_OnlineResource_PropertyType onlineResource {
            get {
                return this.onlineResourceField;
            }
            set {
                this.onlineResourceField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType hoursOfService {
            get {
                return this.hoursOfServiceField;
            }
            set {
                this.hoursOfServiceField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType contactInstructions {
            get {
                return this.contactInstructionsField;
            }
            set {
                this.contactInstructionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class CI_Telephone_PropertyType {
        
        private CI_Telephone_Type cI_TelephoneField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CI_Telephone_Type CI_Telephone {
            get {
                return this.cI_TelephoneField;
            }
            set {
                this.cI_TelephoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class CI_Address_PropertyType {
        
        private CI_Address_Type cI_AddressField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CI_Address_Type CI_Address {
            get {
                return this.cI_AddressField;
            }
            set {
                this.cI_AddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class CI_OnlineResource_PropertyType {
        
        private CI_OnlineResource_Type cI_OnlineResourceField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CI_OnlineResource_Type CI_OnlineResource {
            get {
                return this.cI_OnlineResourceField;
            }
            set {
                this.cI_OnlineResourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("CI_ResponsibleParty", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public partial class CI_ResponsibleParty_Type : AbstractObject_Type {
        
        private CharacterString_PropertyType individualNameField;
        
        private CharacterString_PropertyType organisationNameField;
        
        private CharacterString_PropertyType positionNameField;
        
        private CI_Contact_PropertyType contactInfoField;
        
        private CI_RoleCode_PropertyType roleField;
        
        /// <remarks/>
        public CharacterString_PropertyType individualName {
            get {
                return this.individualNameField;
            }
            set {
                this.individualNameField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType organisationName {
            get {
                return this.organisationNameField;
            }
            set {
                this.organisationNameField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType positionName {
            get {
                return this.positionNameField;
            }
            set {
                this.positionNameField = value;
            }
        }
        
        /// <remarks/>
        public CI_Contact_PropertyType contactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
            }
        }
        
        /// <remarks/>
        public CI_RoleCode_PropertyType role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class CI_Contact_PropertyType {
        
        private CI_Contact_Type cI_ContactField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CI_Contact_Type CI_Contact {
            get {
                return this.cI_ContactField;
            }
            set {
                this.cI_ContactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class CI_RoleCode_PropertyType {
        
        private CodeListValue_Type cI_RoleCodeField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CodeListValue_Type CI_RoleCode {
            get {
                return this.cI_RoleCodeField;
            }
            set {
                this.cI_RoleCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("CI_Date", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public partial class CI_Date_Type : AbstractObject_Type {
        
        private Date_PropertyType dateField;
        
        private CI_DateTypeCode_PropertyType dateTypeField;
        
        /// <remarks/>
        public Date_PropertyType date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public CI_DateTypeCode_PropertyType dateType {
            get {
                return this.dateTypeField;
            }
            set {
                this.dateTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gco")]
    public partial class Date_PropertyType {
        
        private object itemField;
        
        private string nilReasonField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Date", typeof(string), IsNullable=true)]
        [System.Xml.Serialization.XmlElementAttribute("DateTime", typeof(System.DateTime))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class CI_DateTypeCode_PropertyType {
        
        private CodeListValue_Type cI_DateTypeCodeField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CodeListValue_Type CI_DateTypeCode {
            get {
                return this.cI_DateTypeCodeField;
            }
            set {
                this.cI_DateTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("CI_Citation", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public partial class CI_Citation_Type : AbstractObject_Type {
        
        private CharacterString_PropertyType titleField;
        
        private CharacterString_PropertyType[] alternateTitleField;
        
        private CI_Date_PropertyType[] dateField;
        
        private CharacterString_PropertyType editionField;
        
        private Date_PropertyType editionDateField;
        
        private MD_Identifier_PropertyType[] identifierField;
        
        private CI_ResponsibleParty_PropertyType[] citedResponsiblePartyField;
        
        private CI_PresentationFormCode_PropertyType[] presentationFormField;
        
        private CI_Series_PropertyType seriesField;
        
        private CharacterString_PropertyType otherCitationDetailsField;
        
        private CharacterString_PropertyType collectiveTitleField;
        
        private CharacterString_PropertyType iSBNField;
        
        private CharacterString_PropertyType iSSNField;
        
        /// <remarks/>
        public CharacterString_PropertyType title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("alternateTitle")]
        public CharacterString_PropertyType[] alternateTitle {
            get {
                return this.alternateTitleField;
            }
            set {
                this.alternateTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("date")]
        public CI_Date_PropertyType[] date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType edition {
            get {
                return this.editionField;
            }
            set {
                this.editionField = value;
            }
        }
        
        /// <remarks/>
        public Date_PropertyType editionDate {
            get {
                return this.editionDateField;
            }
            set {
                this.editionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("identifier")]
        public MD_Identifier_PropertyType[] identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("citedResponsibleParty")]
        public CI_ResponsibleParty_PropertyType[] citedResponsibleParty {
            get {
                return this.citedResponsiblePartyField;
            }
            set {
                this.citedResponsiblePartyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("presentationForm")]
        public CI_PresentationFormCode_PropertyType[] presentationForm {
            get {
                return this.presentationFormField;
            }
            set {
                this.presentationFormField = value;
            }
        }
        
        /// <remarks/>
        public CI_Series_PropertyType series {
            get {
                return this.seriesField;
            }
            set {
                this.seriesField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType otherCitationDetails {
            get {
                return this.otherCitationDetailsField;
            }
            set {
                this.otherCitationDetailsField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType collectiveTitle {
            get {
                return this.collectiveTitleField;
            }
            set {
                this.collectiveTitleField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType ISBN {
            get {
                return this.iSBNField;
            }
            set {
                this.iSBNField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType ISSN {
            get {
                return this.iSSNField;
            }
            set {
                this.iSSNField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class CI_Date_PropertyType {
        
        private CI_Date_Type cI_DateField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CI_Date_Type CI_Date {
            get {
                return this.cI_DateField;
            }
            set {
                this.cI_DateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class MD_Identifier_PropertyType {
        
        private MD_Identifier_Type mD_IdentifierField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public MD_Identifier_Type MD_Identifier {
            get {
                return this.mD_IdentifierField;
            }
            set {
                this.mD_IdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("MD_Identifier", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public partial class MD_Identifier_Type : AbstractObject_Type {
        
        private CI_Citation_PropertyType authorityField;
        
        private CharacterString_PropertyType codeField;
        
        /// <remarks/>
        public CI_Citation_PropertyType authority {
            get {
                return this.authorityField;
            }
            set {
                this.authorityField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class CI_Citation_PropertyType {
        
        private CI_Citation_Type cI_CitationField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CI_Citation_Type CI_Citation {
            get {
                return this.cI_CitationField;
            }
            set {
                this.cI_CitationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class CI_ResponsibleParty_PropertyType {
        
        private CI_ResponsibleParty_Type cI_ResponsiblePartyField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CI_ResponsibleParty_Type CI_ResponsibleParty {
            get {
                return this.cI_ResponsiblePartyField;
            }
            set {
                this.cI_ResponsiblePartyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class CI_PresentationFormCode_PropertyType {
        
        private CodeListValue_Type cI_PresentationFormCodeField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CodeListValue_Type CI_PresentationFormCode {
            get {
                return this.cI_PresentationFormCodeField;
            }
            set {
                this.cI_PresentationFormCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class CI_Series_PropertyType {
        
        private CI_Series_Type cI_SeriesField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CI_Series_Type CI_Series {
            get {
                return this.cI_SeriesField;
            }
            set {
                this.cI_SeriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractDQ_PositionalAccuracy_Type))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("AbstractDQ_Element", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public abstract partial class AbstractDQ_Element_Type : AbstractObject_Type {
        
        private CharacterString_PropertyType[] nameOfMeasureField;
        
        private MD_Identifier_PropertyType measureIdentificationField;
        
        private CharacterString_PropertyType measureDescriptionField;
        
        private DQ_EvaluationMethodTypeCode_PropertyType evaluationMethodTypeField;
        
        private CharacterString_PropertyType evaluationMethodDescriptionField;
        
        private CI_Citation_PropertyType evaluationProcedureField;
        
        private DateTime_PropertyType[] dateTimeField;
        
        private DQ_Result_PropertyType[] resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("nameOfMeasure")]
        public CharacterString_PropertyType[] nameOfMeasure {
            get {
                return this.nameOfMeasureField;
            }
            set {
                this.nameOfMeasureField = value;
            }
        }
        
        /// <remarks/>
        public MD_Identifier_PropertyType measureIdentification {
            get {
                return this.measureIdentificationField;
            }
            set {
                this.measureIdentificationField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType measureDescription {
            get {
                return this.measureDescriptionField;
            }
            set {
                this.measureDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public DQ_EvaluationMethodTypeCode_PropertyType evaluationMethodType {
            get {
                return this.evaluationMethodTypeField;
            }
            set {
                this.evaluationMethodTypeField = value;
            }
        }
        
        /// <remarks/>
        public CharacterString_PropertyType evaluationMethodDescription {
            get {
                return this.evaluationMethodDescriptionField;
            }
            set {
                this.evaluationMethodDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public CI_Citation_PropertyType evaluationProcedure {
            get {
                return this.evaluationProcedureField;
            }
            set {
                this.evaluationProcedureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dateTime")]
        public DateTime_PropertyType[] dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("result")]
        public DQ_Result_PropertyType[] result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class DQ_EvaluationMethodTypeCode_PropertyType {
        
        private CodeListValue_Type dQ_EvaluationMethodTypeCodeField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CodeListValue_Type DQ_EvaluationMethodTypeCode {
            get {
                return this.dQ_EvaluationMethodTypeCodeField;
            }
            set {
                this.dQ_EvaluationMethodTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gco")]
    public partial class DateTime_PropertyType {
        
        private System.DateTime dateTimeField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class DQ_Result_PropertyType {
        
        private AbstractDQ_Result_Type abstractDQ_ResultField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public AbstractDQ_Result_Type AbstractDQ_Result {
            get {
                return this.abstractDQ_ResultField;
            }
            set {
                this.abstractDQ_ResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("AbstractDQ_PositionalAccuracy", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public abstract partial class AbstractDQ_PositionalAccuracy_Type : AbstractDQ_Element_Type {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("EX_VerticalExtent", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public partial class EX_VerticalExtent_Type : AbstractObject_Type {
        
        private Real_PropertyType minimumValueField;
        
        private Real_PropertyType maximumValueField;
        
        private SC_CRS_PropertyType verticalCRSField;
        
        /// <remarks/>
        public Real_PropertyType minimumValue {
            get {
                return this.minimumValueField;
            }
            set {
                this.minimumValueField = value;
            }
        }
        
        /// <remarks/>
        public Real_PropertyType maximumValue {
            get {
                return this.maximumValueField;
            }
            set {
                this.maximumValueField = value;
            }
        }
        
        /// <remarks/>
        public SC_CRS_PropertyType verticalCRS {
            get {
                return this.verticalCRSField;
            }
            set {
                this.verticalCRSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gco")]
    public partial class Real_PropertyType {
        
        private double realField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public double Real {
            get {
                return this.realField;
            }
            set {
                this.realField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gsr")]
    public partial class SC_CRS_PropertyType {
        
        private AbstractCRSType abstractCRSField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.opengis.net/gml/3.2")]
        public AbstractCRSType AbstractCRS {
            get {
                return this.abstractCRSField;
            }
            set {
                this.abstractCRSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractGeneralDerivedCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectedCRSType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticCRSType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("AbstractCRS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public abstract partial class AbstractCRSType : IdentifiedObjectType {
        
        private domainOfValidity[] domainOfValidityField;
        
        private string[] scopeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("domainOfValidity")]
        public domainOfValidity[] domainOfValidity {
            get {
                return this.domainOfValidityField;
            }
            set {
                this.domainOfValidityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("scope")]
        public string[] scope {
            get {
                return this.scopeField;
            }
            set {
                this.scopeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("VerticalCRS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class VerticalCRSType : AbstractCRSType {
        
        private VerticalCSPropertyType verticalCSField;
        
        private VerticalDatumPropertyType verticalDatumField;
        
        /// <remarks/>
        public VerticalCSPropertyType verticalCS {
            get {
                return this.verticalCSField;
            }
            set {
                this.verticalCSField = value;
            }
        }
        
        /// <remarks/>
        public VerticalDatumPropertyType verticalDatum {
            get {
                return this.verticalDatumField;
            }
            set {
                this.verticalDatumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("verticalCS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class VerticalCSPropertyType {
        
        private VerticalCSType verticalCSField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public VerticalCSType VerticalCS {
            get {
                return this.verticalCSField;
            }
            set {
                this.verticalCSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("VerticalCS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class VerticalCSType : AbstractCoordinateSystemType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("verticalDatum", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class VerticalDatumPropertyType {
        
        private VerticalDatumType verticalDatumField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public VerticalDatumType VerticalDatum {
            get {
                return this.verticalDatumField;
            }
            set {
                this.verticalDatumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("VerticalDatum", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class VerticalDatumType : AbstractDatumType {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalDatumType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticDatumType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("AbstractDatum", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public abstract partial class AbstractDatumType : IdentifiedObjectType {
        
        private domainOfValidity domainOfValidityField;
        
        private string[] scopeField;
        
        private CodeType anchorDefinitionField;
        
        private System.DateTime realizationEpochField;
        
        private bool realizationEpochFieldSpecified;
        
        /// <remarks/>
        public domainOfValidity domainOfValidity {
            get {
                return this.domainOfValidityField;
            }
            set {
                this.domainOfValidityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("scope")]
        public string[] scope {
            get {
                return this.scopeField;
            }
            set {
                this.scopeField = value;
            }
        }
        
        /// <remarks/>
        public CodeType anchorDefinition {
            get {
                return this.anchorDefinitionField;
            }
            set {
                this.anchorDefinitionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime realizationEpoch {
            get {
                return this.realizationEpochField;
            }
            set {
                this.realizationEpochField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool realizationEpochSpecified {
            get {
                return this.realizationEpochFieldSpecified;
            }
            set {
                this.realizationEpochFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("GeodeticDatum", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class GeodeticDatumType : AbstractDatumType {
        
        private PrimeMeridianPropertyType primeMeridianField;
        
        private EllipsoidPropertyType ellipsoidField;
        
        /// <remarks/>
        public PrimeMeridianPropertyType primeMeridian {
            get {
                return this.primeMeridianField;
            }
            set {
                this.primeMeridianField = value;
            }
        }
        
        /// <remarks/>
        public EllipsoidPropertyType ellipsoid {
            get {
                return this.ellipsoidField;
            }
            set {
                this.ellipsoidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("primeMeridian", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class PrimeMeridianPropertyType {
        
        private PrimeMeridianType primeMeridianField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public PrimeMeridianType PrimeMeridian {
            get {
                return this.primeMeridianField;
            }
            set {
                this.primeMeridianField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("PrimeMeridian", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class PrimeMeridianType : IdentifiedObjectType {
        
        private AngleType greenwichLongitudeField;
        
        /// <remarks/>
        public AngleType greenwichLongitude {
            get {
                return this.greenwichLongitudeField;
            }
            set {
                this.greenwichLongitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("greenwichLongitude", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class AngleType : MeasureType {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LengthType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AngleType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("semiMajorAxis", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class MeasureType {
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    public partial class LengthType : MeasureType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("ellipsoid", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class EllipsoidPropertyType {
        
        private EllipsoidType ellipsoidField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public EllipsoidType Ellipsoid {
            get {
                return this.ellipsoidField;
            }
            set {
                this.ellipsoidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("Ellipsoid", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class EllipsoidType : IdentifiedObjectType {
        
        private MeasureType semiMajorAxisField;
        
        private secondDefiningParameter secondDefiningParameterField;
        
        /// <remarks/>
        public MeasureType semiMajorAxis {
            get {
                return this.semiMajorAxisField;
            }
            set {
                this.semiMajorAxisField = value;
            }
        }
        
        /// <remarks/>
        public secondDefiningParameter secondDefiningParameter {
            get {
                return this.secondDefiningParameterField;
            }
            set {
                this.secondDefiningParameterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class secondDefiningParameter {
        
        private SecondDefiningParameter secondDefiningParameterField;
        
        /// <remarks/>
        public SecondDefiningParameter SecondDefiningParameter {
            get {
                return this.secondDefiningParameterField;
            }
            set {
                this.secondDefiningParameterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class SecondDefiningParameter {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inverseFlattening", typeof(MeasureType))]
        [System.Xml.Serialization.XmlElementAttribute("isSphere", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("semiMinorAxis", typeof(LengthType))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectedCRSType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("AbstractGeneralDerivedCRS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public abstract partial class AbstractGeneralDerivedCRSType : AbstractCRSType {
        
        private GeneralConversionPropertyType conversionField;
        
        /// <remarks/>
        public GeneralConversionPropertyType conversion {
            get {
                return this.conversionField;
            }
            set {
                this.conversionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("conversion", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class GeneralConversionPropertyType {
        
        private AbstractGeneralConversionType abstractGeneralConversionField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public AbstractGeneralConversionType AbstractGeneralConversion {
            get {
                return this.abstractGeneralConversionField;
            }
            set {
                this.abstractGeneralConversionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("AbstractGeneralConversion", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public abstract partial class AbstractGeneralConversionType : AbstractCoordinateOperationType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    [System.Xml.Serialization.XmlRootAttribute("EX_TemporalExtent", Namespace="http://www.isotc211.org/2005/gmd", IsNullable=false)]
    public partial class EX_TemporalExtent_Type : AbstractObject_Type {
        
        private TM_Primitive_PropertyType extentField;
        
        /// <remarks/>
        public TM_Primitive_PropertyType extent {
            get {
                return this.extentField;
            }
            set {
                this.extentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gts")]
    public partial class TM_Primitive_PropertyType {
        
        private AbstractTimePrimitiveType abstractTimePrimitiveField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.opengis.net/gml/3.2")]
        public AbstractTimePrimitiveType AbstractTimePrimitive {
            get {
                return this.abstractTimePrimitiveField;
            }
            set {
                this.abstractTimePrimitiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class EX_TemporalExtent_PropertyType {
        
        private EX_TemporalExtent_Type eX_TemporalExtentField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public EX_TemporalExtent_Type EX_TemporalExtent {
            get {
                return this.eX_TemporalExtentField;
            }
            set {
                this.eX_TemporalExtentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
    public partial class EX_VerticalExtent_PropertyType {
        
        private EX_VerticalExtent_Type eX_VerticalExtentField;
        
        private string uuidrefField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public EX_VerticalExtent_Type EX_VerticalExtent {
            get {
                return this.eX_VerticalExtentField;
            }
            set {
                this.eX_VerticalExtentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuidref {
            get {
                return this.uuidrefField;
            }
            set {
                this.uuidrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.isotc211.org/2005/gco")]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class coordinateOperationAccuracy {
        
        private AbstractDQ_PositionalAccuracy_Type abstractDQ_PositionalAccuracyField;
        
        private string nilReasonField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.isotc211.org/2005/gmd")]
        public AbstractDQ_PositionalAccuracy_Type AbstractDQ_PositionalAccuracy {
            get {
                return this.abstractDQ_PositionalAccuracyField;
            }
            set {
                this.abstractDQ_PositionalAccuracyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("sourceCRS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class CRSPropertyType {
        
        private AbstractCRSType abstractCRSField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public AbstractCRSType AbstractCRS {
            get {
                return this.abstractCRSField;
            }
            set {
                this.abstractCRSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    public enum AggregationType {
        
        /// <remarks/>
        set,
        
        /// <remarks/>
        bag,
        
        /// <remarks/>
        sequence,
        
        /// <remarks/>
        array,
        
        /// <remarks/>
        record,
        
        /// <remarks/>
        table,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("SphericalCS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class SphericalCSType : AbstractCoordinateSystemType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("EllipsoidalCS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class EllipsoidalCSType : AbstractCoordinateSystemType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("ellipsoidalCS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class EllipsoidalCSPropertyType {
        
        private EllipsoidalCSType ellipsoidalCSField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public EllipsoidalCSType EllipsoidalCS {
            get {
                return this.ellipsoidalCSField;
            }
            set {
                this.ellipsoidalCSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("sphericalCS", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class SphericalCSPropertyType {
        
        private SphericalCSType sphericalCSField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public SphericalCSType SphericalCS {
            get {
                return this.sphericalCSField;
            }
            set {
                this.sphericalCSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.opengis.net/gml/3.2")]
    [System.Xml.Serialization.XmlRootAttribute("geodeticDatum", Namespace="http://www.opengis.net/gml/3.2", IsNullable=false)]
    public partial class GeodeticDatumPropertyType {
        
        private GeodeticDatumType geodeticDatumField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public GeodeticDatumType GeodeticDatum {
            get {
                return this.geodeticDatumField;
            }
            set {
                this.geodeticDatumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nilReason {
            get {
                return this.nilReasonField;
            }
            set {
                this.nilReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ProjectedWktCrs : AbstractProjectedCrs {
        
        private string wellKnownTextField;
        
        /// <remarks/>
        public string WellKnownText {
            get {
                return this.wellKnownTextField;
            }
            set {
                this.wellKnownTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ProjectedUnknownCrs : AbstractProjectedCrs {
        
        private string unknownField;
        
        /// <remarks/>
        public string Unknown {
            get {
                return this.unknownField;
            }
            set {
                this.unknownField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ProjectedEpsgCrs : AbstractProjectedCrs {
        
        private long epsgCodeField;
        
        /// <remarks/>
        public long EpsgCode {
            get {
                return this.epsgCodeField;
            }
            set {
                this.epsgCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class GeodeticWellLocation : AbstractWellLocation {
        
        private double latitudeField;
        
        private double longitudeField;
        
        private AbstractGeodeticCrs crsField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public AbstractGeodeticCrs Crs {
            get {
                return this.crsField;
            }
            set {
                this.crsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticLocalAuthorityCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticGmlCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticEpsgCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticWktCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeodeticUnknownCrs))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public abstract partial class AbstractGeodeticCrs {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class GeodeticLocalAuthorityCrs : AbstractGeodeticCrs {
        
        private string localAuthorityCrsNameField;
        
        /// <remarks/>
        public string LocalAuthorityCrsName {
            get {
                return this.localAuthorityCrsNameField;
            }
            set {
                this.localAuthorityCrsNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class GeodeticGmlCrs : AbstractGeodeticCrs {
        
        private GeodeticCRSType gmlProjectedCrsDefinitionField;
        
        /// <remarks/>
        public GeodeticCRSType GmlProjectedCrsDefinition {
            get {
                return this.gmlProjectedCrsDefinitionField;
            }
            set {
                this.gmlProjectedCrsDefinitionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class GeodeticEpsgCrs : AbstractGeodeticCrs {
        
        private long epsgCodeField;
        
        /// <remarks/>
        public long EpsgCode {
            get {
                return this.epsgCodeField;
            }
            set {
                this.epsgCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class GeodeticWktCrs : AbstractGeodeticCrs {
        
        private string wellKnownTextField;
        
        /// <remarks/>
        public string WellKnownText {
            get {
                return this.wellKnownTextField;
            }
            set {
                this.wellKnownTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class GeodeticUnknownCrs : AbstractGeodeticCrs {
        
        private string unknownField;
        
        /// <remarks/>
        public string Unknown {
            get {
                return this.unknownField;
            }
            set {
                this.unknownField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class GeologyFeature {
        
        private string nameField;
        
        private string geologyTypeField;
        
        private MdInterval featureMdIntervalField;
        
        private TvdInterval featureTvdIntervalField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string GeologyType {
            get {
                return this.geologyTypeField;
            }
            set {
                this.geologyTypeField = value;
            }
        }
        
        /// <remarks/>
        public MdInterval FeatureMdInterval {
            get {
                return this.featureMdIntervalField;
            }
            set {
                this.featureMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public TvdInterval FeatureTvdInterval {
            get {
                return this.featureTvdIntervalField;
            }
            set {
                this.featureTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Borehole {
        
        private string nameField;
        
        private string typeBoreholeField;
        
        private EventInfo equipmentEventHistoryField;
        
        private MdInterval mdIntervalField;
        
        private TvdInterval tvdIntervalField;
        
        private LengthMeasure boreholeDiameterField;
        
        private string descriptionPermanentField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string TypeBorehole {
            get {
                return this.typeBoreholeField;
            }
            set {
                this.typeBoreholeField = value;
            }
        }
        
        /// <remarks/>
        public EventInfo EquipmentEventHistory {
            get {
                return this.equipmentEventHistoryField;
            }
            set {
                this.equipmentEventHistoryField = value;
            }
        }
        
        /// <remarks/>
        public MdInterval MdInterval {
            get {
                return this.mdIntervalField;
            }
            set {
                this.mdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public TvdInterval TvdInterval {
            get {
                return this.tvdIntervalField;
            }
            set {
                this.tvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure BoreholeDiameter {
            get {
                return this.boreholeDiameterField;
            }
            set {
                this.boreholeDiameterField = value;
            }
        }
        
        /// <remarks/>
        public string DescriptionPermanent {
            get {
                return this.descriptionPermanentField;
            }
            set {
                this.descriptionPermanentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class BoreholeString {
        
        private string nameField;
        
        private StringEquipment[] accessoriesField;
        
        private Borehole[] boreholeField;
        
        private GeologyFeature[] geologyFeatureField;
        
        private DataObjectReference referenceWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Accessory", IsNullable=false)]
        public StringEquipment[] Accessories {
            get {
                return this.accessoriesField;
            }
            set {
                this.accessoriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Borehole")]
        public Borehole[] Borehole {
            get {
                return this.boreholeField;
            }
            set {
                this.boreholeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GeologyFeature")]
        public GeologyFeature[] GeologyFeature {
            get {
                return this.geologyFeatureField;
            }
            set {
                this.geologyFeatureField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference ReferenceWellbore {
            get {
                return this.referenceWellboreField;
            }
            set {
                this.referenceWellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class StringEquipment {
        
        private string equipmentTypeField;
        
        private string nameField;
        
        private EventInfo[] equipmentEventHistoryField;
        
        private string statusField;
        
        private string runNoField;
        
        private TimeMeasure previousRunDaysField;
        
        private string objectConditionField;
        
        private string surfaceConditionField;
        
        private int countField;
        
        private bool countFieldSpecified;
        
        private LengthMeasure lengthField;
        
        private MdInterval mdIntervalField;
        
        private TvdInterval tvdIntervalField;
        
        private bool outsideStringField;
        
        private bool outsideStringFieldSpecified;
        
        private ForceMeasure tensileMaxField;
        
        private PressureMeasure presRatingField;
        
        private PressureMeasure presCollapseField;
        
        private PressureMeasure presBurstField;
        
        private ThermodynamicTemperatureMeasure heatRatingField;
        
        private bool isLinetoSurfaceField;
        
        private bool isLinetoSurfaceFieldSpecified;
        
        private bool isCentralizedField;
        
        private bool isCentralizedFieldSpecified;
        
        private bool hasScratchersField;
        
        private bool hasScratchersFieldSpecified;
        
        private string[] perforationSetRefIDField;
        
        private string permanentRemarksField;
        
        private string usageCommentField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private Assembly assemblyField;
        
        private ObjectSequence orderOfObjectField;
        
        private RefContainer[] insideComponentField;
        
        private RefContainer[] outsideComponentField;
        
        private EquipmentConnection[] connectionNextField;
        
        private string uidField;
        
        private string equipmentRefUIDField;
        
        /// <remarks/>
        public string EquipmentType {
            get {
                return this.equipmentTypeField;
            }
            set {
                this.equipmentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EquipmentEventHistory")]
        public EventInfo[] EquipmentEventHistory {
            get {
                return this.equipmentEventHistoryField;
            }
            set {
                this.equipmentEventHistoryField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string RunNo {
            get {
                return this.runNoField;
            }
            set {
                this.runNoField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure PreviousRunDays {
            get {
                return this.previousRunDaysField;
            }
            set {
                this.previousRunDaysField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectCondition {
            get {
                return this.objectConditionField;
            }
            set {
                this.objectConditionField = value;
            }
        }
        
        /// <remarks/>
        public string SurfaceCondition {
            get {
                return this.surfaceConditionField;
            }
            set {
                this.surfaceConditionField = value;
            }
        }
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountSpecified {
            get {
                return this.countFieldSpecified;
            }
            set {
                this.countFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        public MdInterval MdInterval {
            get {
                return this.mdIntervalField;
            }
            set {
                this.mdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public TvdInterval TvdInterval {
            get {
                return this.tvdIntervalField;
            }
            set {
                this.tvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public bool OutsideString {
            get {
                return this.outsideStringField;
            }
            set {
                this.outsideStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutsideStringSpecified {
            get {
                return this.outsideStringFieldSpecified;
            }
            set {
                this.outsideStringFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ForceMeasure TensileMax {
            get {
                return this.tensileMaxField;
            }
            set {
                this.tensileMaxField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresRating {
            get {
                return this.presRatingField;
            }
            set {
                this.presRatingField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresCollapse {
            get {
                return this.presCollapseField;
            }
            set {
                this.presCollapseField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresBurst {
            get {
                return this.presBurstField;
            }
            set {
                this.presBurstField = value;
            }
        }
        
        /// <remarks/>
        public ThermodynamicTemperatureMeasure HeatRating {
            get {
                return this.heatRatingField;
            }
            set {
                this.heatRatingField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLinetoSurface {
            get {
                return this.isLinetoSurfaceField;
            }
            set {
                this.isLinetoSurfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsLinetoSurfaceSpecified {
            get {
                return this.isLinetoSurfaceFieldSpecified;
            }
            set {
                this.isLinetoSurfaceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsCentralized {
            get {
                return this.isCentralizedField;
            }
            set {
                this.isCentralizedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCentralizedSpecified {
            get {
                return this.isCentralizedFieldSpecified;
            }
            set {
                this.isCentralizedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool HasScratchers {
            get {
                return this.hasScratchersField;
            }
            set {
                this.hasScratchersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasScratchersSpecified {
            get {
                return this.hasScratchersFieldSpecified;
            }
            set {
                this.hasScratchersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PerforationSetRefID")]
        public string[] PerforationSetRefID {
            get {
                return this.perforationSetRefIDField;
            }
            set {
                this.perforationSetRefIDField = value;
            }
        }
        
        /// <remarks/>
        public string PermanentRemarks {
            get {
                return this.permanentRemarksField;
            }
            set {
                this.permanentRemarksField = value;
            }
        }
        
        /// <remarks/>
        public string UsageComment {
            get {
                return this.usageCommentField;
            }
            set {
                this.usageCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public Assembly Assembly {
            get {
                return this.assemblyField;
            }
            set {
                this.assemblyField = value;
            }
        }
        
        /// <remarks/>
        public ObjectSequence OrderOfObject {
            get {
                return this.orderOfObjectField;
            }
            set {
                this.orderOfObjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InsideComponent")]
        public RefContainer[] InsideComponent {
            get {
                return this.insideComponentField;
            }
            set {
                this.insideComponentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OutsideComponent")]
        public RefContainer[] OutsideComponent {
            get {
                return this.outsideComponentField;
            }
            set {
                this.outsideComponentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ConnectionNext")]
        public EquipmentConnection[] ConnectionNext {
            get {
                return this.connectionNextField;
            }
            set {
                this.connectionNextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string equipmentRefUID {
            get {
                return this.equipmentRefUIDField;
            }
            set {
                this.equipmentRefUIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Assembly {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class RefContainer {
        
        private string stringRefIDField;
        
        private string equipmentRefIDField;
        
        private string accesoryEquipmentRefIDField;
        
        private string commentField;
        
        /// <remarks/>
        public string StringRefID {
            get {
                return this.stringRefIDField;
            }
            set {
                this.stringRefIDField = value;
            }
        }
        
        /// <remarks/>
        public string EquipmentRefID {
            get {
                return this.equipmentRefIDField;
            }
            set {
                this.equipmentRefIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccesoryEquipmentRefID {
            get {
                return this.accesoryEquipmentRefIDField;
            }
            set {
                this.accesoryEquipmentRefIDField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class EquipmentConnection : Connection {
        
        private LengthMeasure radialOffsetField;
        
        private string connectionFormField;
        
        private string connectionUpsetField;
        
        private string stringEquipmentRefUIDField;
        
        /// <remarks/>
        public LengthMeasure RadialOffset {
            get {
                return this.radialOffsetField;
            }
            set {
                this.radialOffsetField = value;
            }
        }
        
        /// <remarks/>
        public string ConnectionForm {
            get {
                return this.connectionFormField;
            }
            set {
                this.connectionFormField = value;
            }
        }
        
        /// <remarks/>
        public string ConnectionUpset {
            get {
                return this.connectionUpsetField;
            }
            set {
                this.connectionUpsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string stringEquipmentRefUID {
            get {
                return this.stringEquipmentRefUIDField;
            }
            set {
                this.stringEquipmentRefUIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EquipmentConnection))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Connection {
        
        private LengthMeasure idField;
        
        private LengthMeasure odField;
        
        private LengthMeasure lenField;
        
        private string typeThreadField;
        
        private LengthMeasure sizeThreadField;
        
        private PressureMeasure tensYieldField;
        
        private MomentOfForceMeasure tqYieldField;
        
        private ConnectionPosition positionField;
        
        private bool positionFieldSpecified;
        
        private AreaMeasure criticalCrossSectionField;
        
        private PressureMeasure presLeakField;
        
        private MomentOfForceMeasure tqMakeupField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Internal diameter of the connection.</summary>
        [System.ComponentModel.DescriptionAttribute("Internal diameter of the connection.")]
        public LengthMeasure Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outside diameter of the body of the item.</summary>
        [System.ComponentModel.DescriptionAttribute("Outside diameter of the body of the item.")]
        public LengthMeasure Od {
            get {
                return this.odField;
            }
            set {
                this.odField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of the item.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of the item.")]
        public LengthMeasure Len {
            get {
                return this.lenField;
            }
            set {
                this.lenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Thread type from API RP7G, 5CT.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Thread type from API RP7G, 5CT.")]
        public string TypeThread {
            get {
                return this.typeThreadField;
            }
            set {
                this.typeThreadField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Thread size.</summary>
        [System.ComponentModel.DescriptionAttribute("Thread size.")]
        public LengthMeasure SizeThread {
            get {
                return this.sizeThreadField;
            }
            set {
                this.sizeThreadField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Yield stress of steel - worn stress.</summary>
        [System.ComponentModel.DescriptionAttribute("Yield stress of steel - worn stress.")]
        public PressureMeasure TensYield {
            get {
                return this.tensYieldField;
            }
            set {
                this.tensYieldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Torque at which yield occurs.</summary>
        [System.ComponentModel.DescriptionAttribute("Torque at which yield occurs.")]
        public MomentOfForceMeasure TqYield {
            get {
                return this.tqYieldField;
            }
            set {
                this.tqYieldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Where connected.</summary>
        [System.ComponentModel.DescriptionAttribute("Where connected.")]
        public ConnectionPosition Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionSpecified {
            get {
                return this.positionFieldSpecified;
            }
            set {
                this.positionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>For bending stiffness ratio.</summary>
        [System.ComponentModel.DescriptionAttribute("For bending stiffness ratio.")]
        public AreaMeasure CriticalCrossSection {
            get {
                return this.criticalCrossSectionField;
            }
            set {
                this.criticalCrossSectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Leak pressure rating.</summary>
        [System.ComponentModel.DescriptionAttribute("Leak pressure rating.")]
        public PressureMeasure PresLeak {
            get {
                return this.presLeakField;
            }
            set {
                this.presLeakField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Make up torque.</summary>
        [System.ComponentModel.DescriptionAttribute("Make up torque.")]
        public MomentOfForceMeasure TqMakeup {
            get {
                return this.tqMakeupField;
            }
            set {
                this.tqMakeupField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class MomentOfForceMeasure {
        
        private MomentOfForceUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public MomentOfForceUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum MomentOfForceUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000 lbf.ft")]
        Item1000lbfft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("daN.m")]
        daNm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dN.m")]
        dNm,
        
        /// <remarks/>
        J,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf.m")]
        kgfm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kN.m")]
        kNm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf.ft")]
        lbfft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf.in")]
        lbfin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm.ft2/s2")]
        lbmft2s2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N.m")]
        Nm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pdl.ft")]
        pdlft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonf[US].ft")]
        tonfUSft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonf[US].mi")]
        tonfUSmi,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ConnectionPosition {
        
        /// <remarks/>
        both,
        
        /// <remarks/>
        bottom,
        
        /// <remarks/>
        top,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class PerfHole {
        
        private MdInterval mdIntervalField;
        
        private TvdInterval tvdIntervalField;
        
        private LengthMeasure holeDiameterField;
        
        private PlaneAngleMeasure holeAngleField;
        
        private string holePatternField;
        
        private ReciprocalLengthMeasure holeDensityField;
        
        private int holeCountField;
        
        private bool holeCountFieldSpecified;
        
        private string remarksField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        /// <remarks/>
        public MdInterval MdInterval {
            get {
                return this.mdIntervalField;
            }
            set {
                this.mdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public TvdInterval TvdInterval {
            get {
                return this.tvdIntervalField;
            }
            set {
                this.tvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure HoleDiameter {
            get {
                return this.holeDiameterField;
            }
            set {
                this.holeDiameterField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure HoleAngle {
            get {
                return this.holeAngleField;
            }
            set {
                this.holeAngleField = value;
            }
        }
        
        /// <remarks/>
        public string HolePattern {
            get {
                return this.holePatternField;
            }
            set {
                this.holePatternField = value;
            }
        }
        
        /// <remarks/>
        public ReciprocalLengthMeasure HoleDensity {
            get {
                return this.holeDensityField;
            }
            set {
                this.holeDensityField = value;
            }
        }
        
        /// <remarks/>
        public int HoleCount {
            get {
                return this.holeCountField;
            }
            set {
                this.holeCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HoleCountSpecified {
            get {
                return this.holeCountFieldSpecified;
            }
            set {
                this.holeCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class PerfSlot {
        
        private LengthMeasure slotHeightField;
        
        private LengthMeasure slotWidthField;
        
        private LengthMeasure slotCenterDistanceField;
        
        private int slotCountField;
        
        private bool slotCountFieldSpecified;
        
        private string remarksField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        /// <remarks/>
        public LengthMeasure SlotHeight {
            get {
                return this.slotHeightField;
            }
            set {
                this.slotHeightField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure SlotWidth {
            get {
                return this.slotWidthField;
            }
            set {
                this.slotWidthField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure SlotCenterDistance {
            get {
                return this.slotCenterDistanceField;
            }
            set {
                this.slotCenterDistanceField = value;
            }
        }
        
        /// <remarks/>
        public int SlotCount {
            get {
                return this.slotCountField;
            }
            set {
                this.slotCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SlotCountSpecified {
            get {
                return this.slotCountFieldSpecified;
            }
            set {
                this.slotCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class ExtPropNameValue {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Equipment {
        
        private string equipmentNameField;
        
        private string equipmentTypeField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private string catalogIDField;
        
        private string catalogNameField;
        
        private string brandNameField;
        
        private string modelTypeField;
        
        private string seriesField;
        
        private bool isSerializedField;
        
        private bool isSerializedFieldSpecified;
        
        private string serialNumberField;
        
        private string partNoField;
        
        private string surfaceConditionField;
        
        private string materialField;
        
        private string gradeField;
        
        private MassPerLengthMeasure unitWeightField;
        
        private bool coatingLinerappliedField;
        
        private bool coatingLinerappliedFieldSpecified;
        
        private string outsideCoatingField;
        
        private string insideCoatingField;
        
        private LengthMeasure unitLengthField;
        
        private LengthMeasure majorODField;
        
        private LengthMeasure minorODField;
        
        private LengthMeasure odField;
        
        private LengthMeasure maxODField;
        
        private LengthMeasure minODField;
        
        private LengthMeasure majorIDField;
        
        private LengthMeasure minorIDField;
        
        private LengthMeasure idField;
        
        private LengthMeasure maxIDField;
        
        private LengthMeasure minIDField;
        
        private LengthMeasure driftField;
        
        private LengthMeasure nominalSizeField;
        
        private string nameServiceField;
        
        private string descriptionField;
        
        private string descriptionPermanentField;
        
        private string remarkField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        private ExtPropNameValue[] propertyField;
        
        private PerfSlot[] slotAsManufacturedField;
        
        private PerfHole[] holeAsManufacturedField;
        
        private string uidField;
        
        /// <remarks/>
        public string EquipmentName {
            get {
                return this.equipmentNameField;
            }
            set {
                this.equipmentNameField = value;
            }
        }
        
        /// <remarks/>
        public string EquipmentType {
            get {
                return this.equipmentTypeField;
            }
            set {
                this.equipmentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string CatalogID {
            get {
                return this.catalogIDField;
            }
            set {
                this.catalogIDField = value;
            }
        }
        
        /// <remarks/>
        public string CatalogName {
            get {
                return this.catalogNameField;
            }
            set {
                this.catalogNameField = value;
            }
        }
        
        /// <remarks/>
        public string BrandName {
            get {
                return this.brandNameField;
            }
            set {
                this.brandNameField = value;
            }
        }
        
        /// <remarks/>
        public string ModelType {
            get {
                return this.modelTypeField;
            }
            set {
                this.modelTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Series {
            get {
                return this.seriesField;
            }
            set {
                this.seriesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSerialized {
            get {
                return this.isSerializedField;
            }
            set {
                this.isSerializedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSerializedSpecified {
            get {
                return this.isSerializedFieldSpecified;
            }
            set {
                this.isSerializedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PartNo {
            get {
                return this.partNoField;
            }
            set {
                this.partNoField = value;
            }
        }
        
        /// <remarks/>
        public string SurfaceCondition {
            get {
                return this.surfaceConditionField;
            }
            set {
                this.surfaceConditionField = value;
            }
        }
        
        /// <remarks/>
        public string Material {
            get {
                return this.materialField;
            }
            set {
                this.materialField = value;
            }
        }
        
        /// <remarks/>
        public string Grade {
            get {
                return this.gradeField;
            }
            set {
                this.gradeField = value;
            }
        }
        
        /// <remarks/>
        public MassPerLengthMeasure UnitWeight {
            get {
                return this.unitWeightField;
            }
            set {
                this.unitWeightField = value;
            }
        }
        
        /// <remarks/>
        public bool CoatingLinerapplied {
            get {
                return this.coatingLinerappliedField;
            }
            set {
                this.coatingLinerappliedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CoatingLinerappliedSpecified {
            get {
                return this.coatingLinerappliedFieldSpecified;
            }
            set {
                this.coatingLinerappliedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string OutsideCoating {
            get {
                return this.outsideCoatingField;
            }
            set {
                this.outsideCoatingField = value;
            }
        }
        
        /// <remarks/>
        public string InsideCoating {
            get {
                return this.insideCoatingField;
            }
            set {
                this.insideCoatingField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure UnitLength {
            get {
                return this.unitLengthField;
            }
            set {
                this.unitLengthField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure MajorOD {
            get {
                return this.majorODField;
            }
            set {
                this.majorODField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure MinorOD {
            get {
                return this.minorODField;
            }
            set {
                this.minorODField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure OD {
            get {
                return this.odField;
            }
            set {
                this.odField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure MaxOD {
            get {
                return this.maxODField;
            }
            set {
                this.maxODField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure MinOD {
            get {
                return this.minODField;
            }
            set {
                this.minODField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure MajorID {
            get {
                return this.majorIDField;
            }
            set {
                this.majorIDField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure MinorID {
            get {
                return this.minorIDField;
            }
            set {
                this.minorIDField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure MaxID {
            get {
                return this.maxIDField;
            }
            set {
                this.maxIDField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure MinID {
            get {
                return this.minIDField;
            }
            set {
                this.minIDField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure Drift {
            get {
                return this.driftField;
            }
            set {
                this.driftField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure NominalSize {
            get {
                return this.nominalSizeField;
            }
            set {
                this.nominalSizeField = value;
            }
        }
        
        /// <remarks/>
        public string NameService {
            get {
                return this.nameServiceField;
            }
            set {
                this.nameServiceField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DescriptionPermanent {
            get {
                return this.descriptionPermanentField;
            }
            set {
                this.descriptionPermanentField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Property")]
        public ExtPropNameValue[] Property {
            get {
                return this.propertyField;
            }
            set {
                this.propertyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SlotAsManufactured")]
        public PerfSlot[] SlotAsManufactured {
            get {
                return this.slotAsManufacturedField;
            }
            set {
                this.slotAsManufacturedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HoleAsManufactured")]
        public PerfHole[] HoleAsManufactured {
            get {
                return this.holeAsManufacturedField;
            }
            set {
                this.holeAsManufacturedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class PerforationSet {
        
        private string[] boreholeStringRefIDField;
        
        private string[] downholeStringRefIDField;
        
        private EventInfo eventHistoryField;
        
        private MdInterval mdIntervalField;
        
        private TvdInterval tvdIntervalField;
        
        private LengthMeasure holeDiameterField;
        
        private PlaneAngleMeasure holeAngleField;
        
        private string holePatternField;
        
        private ReciprocalLengthMeasure holeDensityField;
        
        private int holeCountField;
        
        private bool holeCountFieldSpecified;
        
        private double frictionFactorField;
        
        private bool frictionFactorFieldSpecified;
        
        private PressureMeasure frictionPresField;
        
        private double dischargeCoefficientField;
        
        private bool dischargeCoefficientFieldSpecified;
        
        private string perforationToolField;
        
        private LengthMeasure perforationPenetrationField;
        
        private LengthMeasure crushZoneDiameterField;
        
        private string crushDamageRatioField;
        
        private string perforationDateField;
        
        private string permanentRemarksField;
        
        private string uidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BoreholeStringRefID")]
        public string[] BoreholeStringRefID {
            get {
                return this.boreholeStringRefIDField;
            }
            set {
                this.boreholeStringRefIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DownholeStringRefID")]
        public string[] DownholeStringRefID {
            get {
                return this.downholeStringRefIDField;
            }
            set {
                this.downholeStringRefIDField = value;
            }
        }
        
        /// <remarks/>
        public EventInfo EventHistory {
            get {
                return this.eventHistoryField;
            }
            set {
                this.eventHistoryField = value;
            }
        }
        
        /// <remarks/>
        public MdInterval MdInterval {
            get {
                return this.mdIntervalField;
            }
            set {
                this.mdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public TvdInterval TvdInterval {
            get {
                return this.tvdIntervalField;
            }
            set {
                this.tvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure HoleDiameter {
            get {
                return this.holeDiameterField;
            }
            set {
                this.holeDiameterField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure HoleAngle {
            get {
                return this.holeAngleField;
            }
            set {
                this.holeAngleField = value;
            }
        }
        
        /// <remarks/>
        public string HolePattern {
            get {
                return this.holePatternField;
            }
            set {
                this.holePatternField = value;
            }
        }
        
        /// <remarks/>
        public ReciprocalLengthMeasure HoleDensity {
            get {
                return this.holeDensityField;
            }
            set {
                this.holeDensityField = value;
            }
        }
        
        /// <remarks/>
        public int HoleCount {
            get {
                return this.holeCountField;
            }
            set {
                this.holeCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HoleCountSpecified {
            get {
                return this.holeCountFieldSpecified;
            }
            set {
                this.holeCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double FrictionFactor {
            get {
                return this.frictionFactorField;
            }
            set {
                this.frictionFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrictionFactorSpecified {
            get {
                return this.frictionFactorFieldSpecified;
            }
            set {
                this.frictionFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure FrictionPres {
            get {
                return this.frictionPresField;
            }
            set {
                this.frictionPresField = value;
            }
        }
        
        /// <remarks/>
        public double DischargeCoefficient {
            get {
                return this.dischargeCoefficientField;
            }
            set {
                this.dischargeCoefficientField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DischargeCoefficientSpecified {
            get {
                return this.dischargeCoefficientFieldSpecified;
            }
            set {
                this.dischargeCoefficientFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string PerforationTool {
            get {
                return this.perforationToolField;
            }
            set {
                this.perforationToolField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure PerforationPenetration {
            get {
                return this.perforationPenetrationField;
            }
            set {
                this.perforationPenetrationField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure CrushZoneDiameter {
            get {
                return this.crushZoneDiameterField;
            }
            set {
                this.crushZoneDiameterField = value;
            }
        }
        
        /// <remarks/>
        public string CrushDamageRatio {
            get {
                return this.crushDamageRatioField;
            }
            set {
                this.crushDamageRatioField = value;
            }
        }
        
        /// <remarks/>
        public string PerforationDate {
            get {
                return this.perforationDateField;
            }
            set {
                this.perforationDateField = value;
            }
        }
        
        /// <remarks/>
        public string PermanentRemarks {
            get {
                return this.permanentRemarksField;
            }
            set {
                this.permanentRemarksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DownholeString {
        
        private string stringTypeField;
        
        private string subStringTypeField;
        
        private string nameField;
        
        private string stringInstallDateField;
        
        private string parentStringsNameField;
        
        private MdInterval stringMdIntervalField;
        
        private LengthMeasure axisOffsetField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private StringEquipment[] accessoriesField;
        
        private StringEquipment[] stringEquipmentSetField;
        
        private CustomData extensionAnyField;
        
        private DataObjectReference referenceWellboreField;
        
        private string uidField;
        
        private string uidParentStringField;
        
        /// <remarks/>
        /// <summary>An enumeration type defined in equipmentCatelog, the "DownholeStringEnum"                     contains valid option of "case","rod","tubing", "otherString".</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("An enumeration type defined in equipmentCatelog, the \"DownholeStringEnum\"        " +
            "             contains valid option of \"case\",\"rod\",\"tubing\", \"otherString\".")]
        public string StringType {
            get {
                return this.stringTypeField;
            }
            set {
                this.stringTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An enumeration type define for express further string type etc. "SurfaceCasing", "IntermediaCasing", "productionCasing".</summary>
        [System.ComponentModel.DescriptionAttribute("An enumeration type define for express further string type etc. \"SurfaceCasing\", " +
            "\"IntermediaCasing\", \"productionCasing\".")]
        public string SubStringType {
            get {
                return this.subStringTypeField;
            }
            set {
                this.subStringTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of downhole string.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of downhole string.")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The install date of downhole string.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The install date of downhole string.")]
        public string StringInstallDate {
            get {
                return this.stringInstallDateField;
            }
            set {
                this.stringInstallDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of parent string.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of parent string.")]
        public string ParentStringsName {
            get {
                return this.parentStringsNameField;
            }
            set {
                this.parentStringsNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth interval between the top and the base of the downhole string.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth interval between the top and the base of the downhole string.")]
        public MdInterval StringMdInterval {
            get {
                return this.stringMdIntervalField;
            }
            set {
                this.stringMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>the distance from the sibling string.</summary>
        [System.ComponentModel.DescriptionAttribute("the distance from the sibling string.")]
        public LengthMeasure AxisOffset {
            get {
                return this.axisOffsetField;
            }
            set {
                this.axisOffsetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Accessory", IsNullable=false)]
        public StringEquipment[] Accessories {
            get {
                return this.accessoriesField;
            }
            set {
                this.accessoriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public StringEquipment[] StringEquipmentSet {
            get {
                return this.stringEquipmentSetField;
            }
            set {
                this.stringEquipmentSetField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference ReferenceWellbore {
            get {
                return this.referenceWellboreField;
            }
            set {
                this.referenceWellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uidParentString {
            get {
                return this.uidParentStringField;
            }
            set {
                this.uidParentStringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("part_EvaluatedIntervalShow", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class ShowEvaluationInterval {
        
        private MdInterval mdIntervalField;
        
        private Citation citationField;
        
        private ShowFluid showFluidField;
        
        private ShowRating showRatingField;
        
        private bool showRatingFieldSpecified;
        
        /// <remarks/>
        public MdInterval MdInterval {
            get {
                return this.mdIntervalField;
            }
            set {
                this.mdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public Citation Citation {
            get {
                return this.citationField;
            }
            set {
                this.citationField = value;
            }
        }
        
        /// <remarks/>
        public ShowFluid ShowFluid {
            get {
                return this.showFluidField;
            }
            set {
                this.showFluidField = value;
            }
        }
        
        /// <remarks/>
        public ShowRating ShowRating {
            get {
                return this.showRatingField;
            }
            set {
                this.showRatingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowRatingSpecified {
            get {
                return this.showRatingFieldSpecified;
            }
            set {
                this.showRatingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class Citation {
        
        private string titleField;
        
        private string originatorField;
        
        private System.DateTime creationField;
        
        private string formatField;
        
        private string editorField;
        
        private System.DateTime lastUpdateField;
        
        private bool lastUpdateFieldSpecified;
        
        private string versionStringField;
        
        private string descriptionField;
        
        private string descriptiveKeywordsField;
        
        /// <remarks/>
        /// <summary>One line description/name of the RESQML object.  This is the equivalent in ISO 19115 of CI_Citation.title  Legacy DCGroup - title</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("One line description/name of the RESQML object.  This is the equivalent in ISO 19" +
            "115 of CI_Citation.title  Legacy DCGroup - title")]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name (or other human-readable identifier) of the person who initially originated the object or RESQML document in the source application. If that information is not available, the user who created the RESQML format file. The originator remains the same as the object is subsequently edited.   This is the equivalent in ISO 19115 to the CI_Individual.name or the CI_Organization.name of the citedResponsibleParty whose role is "originator".  Legacy DCGroup - author</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"Name (or other human-readable identifier) of the person who initially originated the object or RESQML document in the source application. If that information is not available, the user who created the RESQML format file. The originator remains the same as the object is subsequently edited.   This is the equivalent in ISO 19115 to the CI_Individual.name or the CI_Organization.name of the citedResponsibleParty whose role is ""originator"".  Legacy DCGroup - author")]
        public string Originator {
            get {
                return this.originatorField;
            }
            set {
                this.originatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time the document was created in the source application or, if that information is not available, when it was saved to the RESQML format file.  This is the equivalent of the ISO 19115 CI_Date where the CI_DateTypeCode = ”creation"  The type is the Energistics timestamp datatype which is the W3C xs:dateTime with the optional timezone offset from UTC made mandatory.  Format: YYYY-MM-DDThh:mm:ssZ[+/-]hh:mm  Legacy DCGroup - created</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"Date and time the document was created in the source application or, if that information is not available, when it was saved to the RESQML format file.  This is the equivalent of the ISO 19115 CI_Date where the CI_DateTypeCode = ”creation""  The type is the Energistics timestamp datatype which is the W3C xs:dateTime with the optional timezone offset from UTC made mandatory.  Format: YYYY-MM-DDThh:mm:ssZ[+/-]hh:mm  Legacy DCGroup - created")]
        public System.DateTime Creation {
            get {
                return this.creationField;
            }
            set {
                this.creationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Software or service that was used to originate the object and the file format created. Must be human and machine readable and unambiguously identify the software by including the company name, software name and software version. This is the equivalent in ISO 19115 to the distributionFormat.MD_Format.  The ISO format for this is [vendor:applicationName]/fileExtension where the application name includes the version number of the application.  SIG Implementation Notes  1. RESQML   - Legacy DCGroup from v1.1 - publisher - fileExtension is not relevant and will be ignored if present. - vendor and applicationName are mandatory.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute(@"Software or service that was used to originate the object and the file format created. Must be human and machine readable and unambiguously identify the software by including the company name, software name and software version. This is the equivalent in ISO 19115 to the distributionFormat.MD_Format.  The ISO format for this is [vendor:applicationName]/fileExtension where the application name includes the version number of the application.  SIG Implementation Notes  1. RESQML   - Legacy DCGroup from v1.1 - publisher - fileExtension is not relevant and will be ignored if present. - vendor and applicationName are mandatory.")]
        public string Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name (or other human-readable identifier) of the last person who updated the object.   This is the equivalent in ISO 19115 to the CI_Individual.name or the CI_Organization.name of the citedResponsibleParty whose role is "editor".  Legacy DCGroup - contributor</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"Name (or other human-readable identifier) of the last person who updated the object.   This is the equivalent in ISO 19115 to the CI_Individual.name or the CI_Organization.name of the citedResponsibleParty whose role is ""editor"".  Legacy DCGroup - contributor")]
        public string Editor {
            get {
                return this.editorField;
            }
            set {
                this.editorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time the document was last modified in the source application or, if that information is not available, when it was last saved to the RESQML format file.  This is the equivalent of the ISO 19115 CI_Date where the CI_DateTypeCode = ”lastUpdate"  The type is the Energistics timestamp datatype which is the W3C xs:dateTime with the optional timezone offset from UTC made mandatory.  Format: YYYY-MM-DDThh:mm:ssZ[+/-]hh:mm  Legacy DCGroup - modified</summary>
        [System.ComponentModel.DescriptionAttribute(@"Date and time the document was last modified in the source application or, if that information is not available, when it was last saved to the RESQML format file.  This is the equivalent of the ISO 19115 CI_Date where the CI_DateTypeCode = ”lastUpdate""  The type is the Energistics timestamp datatype which is the W3C xs:dateTime with the optional timezone offset from UTC made mandatory.  Format: YYYY-MM-DDThh:mm:ssZ[+/-]hh:mm  Legacy DCGroup - modified")]
        public System.DateTime LastUpdate {
            get {
                return this.lastUpdateField;
            }
            set {
                this.lastUpdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastUpdateSpecified {
            get {
                return this.lastUpdateFieldSpecified;
            }
            set {
                this.lastUpdateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string VersionString {
            get {
                return this.versionStringField;
            }
            set {
                this.versionStringField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>User descriptive comments about the object. Intended for end-user use (human readable); not necessarily meant to be used by software.  This is the equivalent of the ISO 19115 abstract.CharacterString  Legacy DCGroup - description</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("User descriptive comments about the object. Intended for end-user use (human read" +
            "able); not necessarily meant to be used by software.  This is the equivalent of " +
            "the ISO 19115 abstract.CharacterString  Legacy DCGroup - description")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Key words to describe the activity, for example, history match or volumetric calculations, relevant to this object. Intended to be used in a search function by software.  This is the equivalent in ISO 19115 of descriptiveKeywords.MD_Keywords  Legacy DCGroup - subject</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute(@"Key words to describe the activity, for example, history match or volumetric calculations, relevant to this object. Intended to be used in a search function by software.  This is the equivalent in ISO 19115 of descriptiveKeywords.MD_Keywords  Legacy DCGroup - subject")]
        public string DescriptiveKeywords {
            get {
                return this.descriptiveKeywordsField;
            }
            set {
                this.descriptiveKeywordsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ShowFluid {
        
        /// <remarks/>
        gas,
        
        /// <remarks/>
        oil,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ShowRating {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("very poor")]
        verypoor,
        
        /// <remarks/>
        poor,
        
        /// <remarks/>
        fair,
        
        /// <remarks/>
        good,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("very good")]
        verygood,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class InterpretedIntervalLithology {
        
        private string kindField;
        
        private Citation citationField;
        
        private string codeLithField;
        
        private string colorField;
        
        private string textureField;
        
        private string hardnessField;
        
        private string compactionField;
        
        private string sizeGrainField;
        
        private string roundnessField;
        
        private string sortingField;
        
        private string sphericityField;
        
        private string matrixCementField;
        
        private string porosityVisibleField;
        
        private string porosityFabricField;
        
        private string permeabilityField;
        
        private LithologyQualifier[] qualifierField;
        
        private string uidField;
        
        /// <remarks/>
        public string Kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        public Citation Citation {
            get {
                return this.citationField;
            }
            set {
                this.citationField = value;
            }
        }
        
        /// <remarks/>
        public string CodeLith {
            get {
                return this.codeLithField;
            }
            set {
                this.codeLithField = value;
            }
        }
        
        /// <remarks/>
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        public string Texture {
            get {
                return this.textureField;
            }
            set {
                this.textureField = value;
            }
        }
        
        /// <remarks/>
        public string Hardness {
            get {
                return this.hardnessField;
            }
            set {
                this.hardnessField = value;
            }
        }
        
        /// <remarks/>
        public string Compaction {
            get {
                return this.compactionField;
            }
            set {
                this.compactionField = value;
            }
        }
        
        /// <remarks/>
        public string SizeGrain {
            get {
                return this.sizeGrainField;
            }
            set {
                this.sizeGrainField = value;
            }
        }
        
        /// <remarks/>
        public string Roundness {
            get {
                return this.roundnessField;
            }
            set {
                this.roundnessField = value;
            }
        }
        
        /// <remarks/>
        public string Sorting {
            get {
                return this.sortingField;
            }
            set {
                this.sortingField = value;
            }
        }
        
        /// <remarks/>
        public string Sphericity {
            get {
                return this.sphericityField;
            }
            set {
                this.sphericityField = value;
            }
        }
        
        /// <remarks/>
        public string MatrixCement {
            get {
                return this.matrixCementField;
            }
            set {
                this.matrixCementField = value;
            }
        }
        
        /// <remarks/>
        public string PorosityVisible {
            get {
                return this.porosityVisibleField;
            }
            set {
                this.porosityVisibleField = value;
            }
        }
        
        /// <remarks/>
        public string PorosityFabric {
            get {
                return this.porosityFabricField;
            }
            set {
                this.porosityFabricField = value;
            }
        }
        
        /// <remarks/>
        public string Permeability {
            get {
                return this.permeabilityField;
            }
            set {
                this.permeabilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Qualifier")]
        public LithologyQualifier[] Qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class LithologyQualifier {
        
        private string kindField;
        
        private MdInterval mdIntervalField;
        
        private VolumePerVolumeMeasure abundanceField;
        
        private string descriptionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The type of qualifier.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of qualifier.")]
        public string Kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth interval represented by the qualifier. This must be within the range of the parent geologic interval. If MdInterval is not given then the qualifier is deemed to exist over the entire depth range of the parent geologyInterval.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth interval represented by the qualifier. This must be within the" +
            " range of the parent geologic interval. If MdInterval is not given then the qual" +
            "ifier is deemed to exist over the entire depth range of the parent geologyInterv" +
            "al.")]
        public MdInterval MdInterval {
            get {
                return this.mdIntervalField;
            }
            set {
                this.mdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The relative abundance of the qualifier estimated based on a "visual area" basis by inspecting the cuttings  spread out on the shaker table prior to washing, or in the sample tray after washing. This represents the upper bound of the observed range, and is in the following increments at the upper bound. 1 = less than or equal to 1%, 2 = greater than or equal to 1 and less than 2%, 5 = greater than or equal to 2 and less than 5% and then in 5% increments, 10 (=5-10%), 15 (=10-15%) up to 100(=95-100%). The end user can then elect  to either display  the %, or map then to an operator specific term or coding, i.e. 1 less then or equal to 1%=Rare Trace, or occasional, or very sparse etc., depending on the the end users' terminology.)</summary>
        [System.ComponentModel.DescriptionAttribute(@"The relative abundance of the qualifier estimated based on a ""visual area"" basis by inspecting the cuttings  spread out on the shaker table prior to washing, or in the sample tray after washing. This represents the upper bound of the observed range, and is in the following increments at the upper bound. 1 = less than or equal to 1%, 2 = greater than or equal to 1 and less than 2%, 5 = greater than or equal to 2 and less than 5% and then in 5% increments, 10 (=5-10%), 15 (=10-15%) up to 100(=95-100%). The end user can then elect  to either display  the %, or map then to an operator specific term or coding, i.e. 1 less then or equal to 1%=Rare Trace, or occasional, or very sparse etc., depending on the the end users' terminology.)")]
        public VolumePerVolumeMeasure Abundance {
            get {
                return this.abundanceField;
            }
            set {
                this.abundanceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual description of the qualifier.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A textual description of the qualifier.")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class LithostratigraphicUnit {
        
        private string authorityField;
        
        private LithostratigraphicRank kindField;
        
        private bool kindFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string authority {
            get {
                return this.authorityField;
            }
            set {
                this.authorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LithostratigraphicRank kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kindSpecified {
            get {
                return this.kindFieldSpecified;
            }
            set {
                this.kindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum LithostratigraphicRank {
        
        /// <remarks/>
        group,
        
        /// <remarks/>
        formation,
        
        /// <remarks/>
        member,
        
        /// <remarks/>
        bed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("part_InterpretedGeologyInterval", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class InterpretedGeologyInterval {
        
        private MdInterval mdIntervalField;
        
        private Citation citationField;
        
        private string[] geochronologicalUnitField;
        
        private LithostratigraphicUnit[] lithostratigraphicUnitField;
        
        private InterpretedIntervalLithology interpretedLithologyField;
        
        private string uidField;
        
        /// <remarks/>
        public MdInterval MdInterval {
            get {
                return this.mdIntervalField;
            }
            set {
                this.mdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public Citation Citation {
            get {
                return this.citationField;
            }
            set {
                this.citationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GeochronologicalUnit")]
        public string[] GeochronologicalUnit {
            get {
                return this.geochronologicalUnitField;
            }
            set {
                this.geochronologicalUnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LithostratigraphicUnit")]
        public LithostratigraphicUnit[] LithostratigraphicUnit {
            get {
                return this.lithostratigraphicUnitField;
            }
            set {
                this.lithostratigraphicUnitField = value;
            }
        }
        
        /// <remarks/>
        public InterpretedIntervalLithology InterpretedLithology {
            get {
                return this.interpretedLithologyField;
            }
            set {
                this.interpretedLithologyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class CuttingsIntervalShow {
        
        private Citation citationField;
        
        private ShowRating showRatingField;
        
        private bool showRatingFieldSpecified;
        
        private string stainColorField;
        
        private string stainDistrField;
        
        private AreaPerAreaMeasure stainPcField;
        
        private ShowSpeed cutSpeedField;
        
        private bool cutSpeedFieldSpecified;
        
        private string cutColorField;
        
        private string cutStrengthField;
        
        private ShowLevel cutFormField;
        
        private bool cutFormFieldSpecified;
        
        private string cutLevelField;
        
        private ShowLevel cutFlorFormField;
        
        private bool cutFlorFormFieldSpecified;
        
        private string cutFlorColorField;
        
        private string cutFlorStrengthField;
        
        private ShowSpeed cutFlorSpeedField;
        
        private bool cutFlorSpeedFieldSpecified;
        
        private ShowFluorescence cutFlorLevelField;
        
        private bool cutFlorLevelFieldSpecified;
        
        private string natFlorColorField;
        
        private AreaPerAreaMeasure natFlorPcField;
        
        private ShowFluorescence natFlorLevelField;
        
        private bool natFlorLevelFieldSpecified;
        
        private string natFlorDescField;
        
        private string residueColorField;
        
        private string impregnatedLithoField;
        
        private string odorField;
        
        private string cuttingFluidField;
        
        private string uidField;
        
        /// <remarks/>
        public Citation Citation {
            get {
                return this.citationField;
            }
            set {
                this.citationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Show Rating.</summary>
        [System.ComponentModel.DescriptionAttribute("Show Rating.")]
        public ShowRating ShowRating {
            get {
                return this.showRatingField;
            }
            set {
                this.showRatingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowRatingSpecified {
            get {
                return this.showRatingFieldSpecified;
            }
            set {
                this.showRatingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Visible Stain Color.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Visible Stain Color.")]
        public string StainColor {
            get {
                return this.stainColorField;
            }
            set {
                this.stainColorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Visible Stain Distribution.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Visible Stain Distribution.")]
        public string StainDistr {
            get {
                return this.stainDistrField;
            }
            set {
                this.stainDistrField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Visible Stain (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Visible Stain (commonly in percent).")]
        public AreaPerAreaMeasure StainPc {
            get {
                return this.stainPcField;
            }
            set {
                this.stainPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut speed.</summary>
        [System.ComponentModel.DescriptionAttribute("Cut speed.")]
        public ShowSpeed CutSpeed {
            get {
                return this.cutSpeedField;
            }
            set {
                this.cutSpeedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CutSpeedSpecified {
            get {
                return this.cutSpeedFieldSpecified;
            }
            set {
                this.cutSpeedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut color.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Cut color.")]
        public string CutColor {
            get {
                return this.cutColorField;
            }
            set {
                this.cutColorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut strength.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Cut strength.")]
        public string CutStrength {
            get {
                return this.cutStrengthField;
            }
            set {
                this.cutStrengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut formulation.</summary>
        [System.ComponentModel.DescriptionAttribute("Cut formulation.")]
        public ShowLevel CutForm {
            get {
                return this.cutFormField;
            }
            set {
                this.cutFormField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CutFormSpecified {
            get {
                return this.cutFormFieldSpecified;
            }
            set {
                this.cutFormFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut level (Faint, Bright, etc.).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Cut level (Faint, Bright, etc.).")]
        public string CutLevel {
            get {
                return this.cutLevelField;
            }
            set {
                this.cutLevelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut fluorescence form.</summary>
        [System.ComponentModel.DescriptionAttribute("Cut fluorescence form.")]
        public ShowLevel CutFlorForm {
            get {
                return this.cutFlorFormField;
            }
            set {
                this.cutFlorFormField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CutFlorFormSpecified {
            get {
                return this.cutFlorFormFieldSpecified;
            }
            set {
                this.cutFlorFormFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut fluorescence color.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Cut fluorescence color.")]
        public string CutFlorColor {
            get {
                return this.cutFlorColorField;
            }
            set {
                this.cutFlorColorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut fluorescence strength.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Cut fluorescence strength.")]
        public string CutFlorStrength {
            get {
                return this.cutFlorStrengthField;
            }
            set {
                this.cutFlorStrengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut fluorescence speed.</summary>
        [System.ComponentModel.DescriptionAttribute("Cut fluorescence speed.")]
        public ShowSpeed CutFlorSpeed {
            get {
                return this.cutFlorSpeedField;
            }
            set {
                this.cutFlorSpeedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CutFlorSpeedSpecified {
            get {
                return this.cutFlorSpeedFieldSpecified;
            }
            set {
                this.cutFlorSpeedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut fluorescence level.</summary>
        [System.ComponentModel.DescriptionAttribute("Cut fluorescence level.")]
        public ShowFluorescence CutFlorLevel {
            get {
                return this.cutFlorLevelField;
            }
            set {
                this.cutFlorLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CutFlorLevelSpecified {
            get {
                return this.cutFlorLevelFieldSpecified;
            }
            set {
                this.cutFlorLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Natural Fluorescence Color.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Natural Fluorescence Color.")]
        public string NatFlorColor {
            get {
                return this.natFlorColorField;
            }
            set {
                this.natFlorColorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Natural fluorescence (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Natural fluorescence (commonly in percent).")]
        public AreaPerAreaMeasure NatFlorPc {
            get {
                return this.natFlorPcField;
            }
            set {
                this.natFlorPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Natural fluorescence level.</summary>
        [System.ComponentModel.DescriptionAttribute("Natural fluorescence level.")]
        public ShowFluorescence NatFlorLevel {
            get {
                return this.natFlorLevelField;
            }
            set {
                this.natFlorLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NatFlorLevelSpecified {
            get {
                return this.natFlorLevelFieldSpecified;
            }
            set {
                this.natFlorLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Natural fluorescence description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Natural fluorescence description.")]
        public string NatFlorDesc {
            get {
                return this.natFlorDescField;
            }
            set {
                this.natFlorDescField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Residue color.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Residue color.")]
        public string ResidueColor {
            get {
                return this.residueColorField;
            }
            set {
                this.residueColorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Impregnated lithology.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Impregnated lithology.")]
        public string ImpregnatedLitho {
            get {
                return this.impregnatedLithoField;
            }
            set {
                this.impregnatedLithoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of any hydrocarbon type odors smelled.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of any hydrocarbon type odors smelled.")]
        public string Odor {
            get {
                return this.odorField;
            }
            set {
                this.odorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of any hydrocarbon type odors smelled</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of any hydrocarbon type odors smelled")]
        public string CuttingFluid {
            get {
                return this.cuttingFluidField;
            }
            set {
                this.cuttingFluidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ShowSpeed {
        
        /// <remarks/>
        slow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("moderately fast")]
        moderatelyfast,
        
        /// <remarks/>
        fast,
        
        /// <remarks/>
        instantaneous,
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ShowLevel {
        
        /// <remarks/>
        blooming,
        
        /// <remarks/>
        streaming,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ShowFluorescence {
        
        /// <remarks/>
        faint,
        
        /// <remarks/>
        bright,
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class CuttingsIntervalLithology {
        
        private string kindField;
        
        private VolumePerVolumeMeasure lithPcField;
        
        private Citation citationField;
        
        private string codeLithField;
        
        private string colorField;
        
        private string textureField;
        
        private string hardnessField;
        
        private string compactionField;
        
        private string sizeGrainField;
        
        private string roundnessField;
        
        private string sphericityField;
        
        private string sortingField;
        
        private string matrixCementField;
        
        private string porosityVisibleField;
        
        private string porosityFabricField;
        
        private string permeabilityField;
        
        private CuttingsIntervalShow[] showsField;
        
        private LithologyQualifier[] qualifierField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The geological name for the type of lithology from the enum table listing a  subset of the OneGeology / CGI defined formation types.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The geological name for the type of lithology from the enum table listing a  subs" +
            "et of the OneGeology / CGI defined formation types.")]
        public string Kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The lithology represents the portion of the sampled interval this lithology type relates to. The total of the lithologies within an interval should add up to 100 percent. If LithologySource in cs-geology is "interpreted" only 100% is allowed. If "core" or "cuttings" then recommended useage is the creating application uses blocks of 10%. i.e. 10, 20, 30, 40, 50, 60, 70, 80, 90, 100. Ideally the input application should enforce a total of 100% for every defined depth interval. If the total for a depth interval does not add up to 100%, the "undifferentiated" code should be used to fill out to 100%.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The lithology represents the portion of the sampled interval this lithology type relates to. The total of the lithologies within an interval should add up to 100 percent. If LithologySource in cs-geology is ""interpreted"" only 100% is allowed. If ""core"" or ""cuttings"" then recommended useage is the creating application uses blocks of 10%. i.e. 10, 20, 30, 40, 50, 60, 70, 80, 90, 100. Ideally the input application should enforce a total of 100% for every defined depth interval. If the total for a depth interval does not add up to 100%, the ""undifferentiated"" code should be used to fill out to 100%.")]
        public VolumePerVolumeMeasure LithPc {
            get {
                return this.lithPcField;
            }
            set {
                this.lithPcField = value;
            }
        }
        
        /// <remarks/>
        public Citation Citation {
            get {
                return this.citationField;
            }
            set {
                this.citationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A custom Lithology encoding sceme if desired. (It is recommended that if used, this follows the NPD required useage with the numeric values noted in the enum tables, which was the original intent for this item).  The NPD Coding System assigned a digital code to the main lithologies as per the Norwegian Blue Book data standards. The code was then derived by Lithology = (Main lithology * 10) + cement + (modifier / 100). Example: Calcite cemented silty micaceous sandstone: ( 33 * 10 ) + 1 + (21 / 100) gives a numeric code of 331.21. However the NPD is also working through Energistics/Ceasar to potentially change this useage.) This should not be used for mnemonics, as those vary by operator, and if an abbreviation is  required a local look up table should be used by the rendering client, based on Lithology Type.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"A custom Lithology encoding sceme if desired. (It is recommended that if used, this follows the NPD required useage with the numeric values noted in the enum tables, which was the original intent for this item).  The NPD Coding System assigned a digital code to the main lithologies as per the Norwegian Blue Book data standards. The code was then derived by Lithology = (Main lithology * 10) + cement + (modifier / 100). Example: Calcite cemented silty micaceous sandstone: ( 33 * 10 ) + 1 + (21 / 100) gives a numeric code of 331.21. However the NPD is also working through Energistics/Ceasar to potentially change this useage.) This should not be used for mnemonics, as those vary by operator, and if an abbreviation is  required a local look up table should be used by the rendering client, based on Lithology Type.")]
        public string CodeLith {
            get {
                return this.codeLithField;
            }
            set {
                this.codeLithField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>STRUCTURED DESCRIPTION USAGE. Lithology color description, from Shell 1995 4.3.3.1 and 4.3.3.2 Colors. with the addition of Frosted. eg black blue brown buff green grey olive orange pink purple red translucent frosted white yellow, modified by dark, light, moderate, medium, mottled, variegated, slight, weak, strong, vivid.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"STRUCTURED DESCRIPTION USAGE. Lithology color description, from Shell 1995 4.3.3.1 and 4.3.3.2 Colors. with the addition of Frosted. eg black blue brown buff green grey olive orange pink purple red translucent frosted white yellow, modified by dark, light, moderate, medium, mottled, variegated, slight, weak, strong, vivid.")]
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>STRUCTURED DESCRIPTION USAGE. Lithology matrix texture description from Shell 1995 4.3.2.6. crystalline, (often "feather-edge" appearance on breaking),  friable, dull, earthy,  chalky, (particle size less than 20m; often exhibits capillary imbibition) visibly particulate, granular,   sucrosic, (often exhibits capillary imbibition). e.g.: compact interlocking, particulate, (Gradational textures are quite common,) chalky matrix with sucrosic patches, (Composite textures also occur)</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"STRUCTURED DESCRIPTION USAGE. Lithology matrix texture description from Shell 1995 4.3.2.6. crystalline, (often ""feather-edge"" appearance on breaking),  friable, dull, earthy,  chalky, (particle size less than 20m; often exhibits capillary imbibition) visibly particulate, granular,   sucrosic, (often exhibits capillary imbibition). e.g.: compact interlocking, particulate, (Gradational textures are quite common,) chalky matrix with sucrosic patches, (Composite textures also occur)")]
        public string Texture {
            get {
                return this.textureField;
            }
            set {
                this.textureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>STRUCTURED DESCRIPTION USAGE. Mineral hardness. (Typically this will rarely be used as mineral hardness is not typically recorded. What is recorded is typically compaction. It is retained though for use defined as per Mohs scale of mineral hardness.)</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("STRUCTURED DESCRIPTION USAGE. Mineral hardness. (Typically this will rarely be us" +
            "ed as mineral hardness is not typically recorded. What is recorded is typically " +
            "compaction. It is retained though for use defined as per Mohs scale of mineral h" +
            "ardness.)")]
        public string Hardness {
            get {
                return this.hardnessField;
            }
            set {
                this.hardnessField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>STRUCTURED DESCRIPTION USAGE. Lithology compaction from Shell 1995 4.3.1.5. not compacted, slightly compacted, compacted, strongly compacted, friable, indurated, hard.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("STRUCTURED DESCRIPTION USAGE. Lithology compaction from Shell 1995 4.3.1.5. not c" +
            "ompacted, slightly compacted, compacted, strongly compacted, friable, indurated," +
            " hard.")]
        public string Compaction {
            get {
                return this.compactionField;
            }
            set {
                this.compactionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>STRUCTURED DESCRIPTION USAGE. Lithology grain size description. Defined from Shell 4.3.1.1.(Wentworth) modified to remove the ambiguous term Pelite.  Size ranges in millimeter (or micrometer) and Inches. LT 256 mmLT 10.1 in "boulder"; 64-256 mm2.5-10.1 in"cobble"; 32-64 mm1.26-2.5 in"very coarse gravel"; 16-32 mm0.63-1.26 in"coarse gravel"; 8-16 mm0.31-0.63 in"medium gravel"; 4-8 mm0.157-0.31 in"fine gravel"; 2-4 mm0.079-0.157 in"very fine gravel"; 1-2 mm0.039-0.079 in"very coarse sand"; 0.5-1 mm0.020-0.039 in"coarse sand"; 0.25-0.5 mm0.010-0.020 in"medium sand"; 125-250 um0.0049-0.010 in"fine sand"; 62.5-125 um0.0025-0.0049 in"very fine sand"; 3.90625-62.5 um0.00015-0.0025 in"silt"; LT 3.90625 umLT 0.00015 in"clay"; LT 1 umLT 0.000039 in "colloid"</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"STRUCTURED DESCRIPTION USAGE. Lithology grain size description. Defined from Shell 4.3.1.1.(Wentworth) modified to remove the ambiguous term Pelite.  Size ranges in millimeter (or micrometer) and Inches. LT 256 mmLT 10.1 in ""boulder""; 64-256 mm2.5-10.1 in""cobble""; 32-64 mm1.26-2.5 in""very coarse gravel""; 16-32 mm0.63-1.26 in""coarse gravel""; 8-16 mm0.31-0.63 in""medium gravel""; 4-8 mm0.157-0.31 in""fine gravel""; 2-4 mm0.079-0.157 in""very fine gravel""; 1-2 mm0.039-0.079 in""very coarse sand""; 0.5-1 mm0.020-0.039 in""coarse sand""; 0.25-0.5 mm0.010-0.020 in""medium sand""; 125-250 um0.0049-0.010 in""fine sand""; 62.5-125 um0.0025-0.0049 in""very fine sand""; 3.90625-62.5 um0.00015-0.0025 in""silt""; LT 3.90625 umLT 0.00015 in""clay""; LT 1 umLT 0.000039 in ""colloid""")]
        public string SizeGrain {
            get {
                return this.sizeGrainField;
            }
            set {
                this.sizeGrainField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>STRUCTURED DESCRIPTION USAGE. Lithology roundness description from Shell 4.3.1.3 Roundness (roundness refers to modal size class). very angular, angular, subangular, subrounded, rounded, well rounded.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("STRUCTURED DESCRIPTION USAGE. Lithology roundness description from Shell 4.3.1.3 " +
            "Roundness (roundness refers to modal size class). very angular, angular, subangu" +
            "lar, subrounded, rounded, well rounded.")]
        public string Roundness {
            get {
                return this.roundnessField;
            }
            set {
                this.roundnessField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>STRUCTURED DESCRIPTION USAGE. Lithology sphericity description for the modal size class of grains in the sample, defined as per Shell 4.3.1.4 Sphericity. very elongated, elongated, slightly elongated, slightly spherical, spherical, very spherical</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("STRUCTURED DESCRIPTION USAGE. Lithology sphericity description for the modal size" +
            " class of grains in the sample, defined as per Shell 4.3.1.4 Sphericity. very el" +
            "ongated, elongated, slightly elongated, slightly spherical, spherical, very sphe" +
            "rical")]
        public string Sphericity {
            get {
                return this.sphericityField;
            }
            set {
                this.sphericityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>STRUCTURED DESCRIPTION USAGE. Lithology sorting descriptione from Shell 4.3.1.2 Sorting. very poorly sorted, unsorted, poorly sorted, poorly to moderately well sorted, moderately well sorted, well sorted, very well sorted, unimodally sorted, bimodally sorted.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"STRUCTURED DESCRIPTION USAGE. Lithology sorting descriptione from Shell 4.3.1.2 Sorting. very poorly sorted, unsorted, poorly sorted, poorly to moderately well sorted, moderately well sorted, well sorted, very well sorted, unimodally sorted, bimodally sorted.")]
        public string Sorting {
            get {
                return this.sortingField;
            }
            set {
                this.sortingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>STRUCTURED DESCRIPTION USAGE. Lithology matrix/cement description. Terms will be as defined in the enumeration table. eg. "calcite" (Common) "dolomite", "ankerite" (eg. North Sea HPHT reservoirs such as Elgin and Franklin have almost pure Ankerite cementation, "siderite" (Sherwood sandstones, southern UK typical Siderite cements), "quartz" (grain to grain contact cementation or secondary quartz deposition), "kaolinite", "illite" (eg. Village Fields North Sea), "smectite","chlorite" (Teg, Algeria.)</summary>
        [System.ComponentModel.DescriptionAttribute(@"STRUCTURED DESCRIPTION USAGE. Lithology matrix/cement description. Terms will be as defined in the enumeration table. eg. ""calcite"" (Common) ""dolomite"", ""ankerite"" (eg. North Sea HPHT reservoirs such as Elgin and Franklin have almost pure Ankerite cementation, ""siderite"" (Sherwood sandstones, southern UK typical Siderite cements), ""quartz"" (grain to grain contact cementation or secondary quartz deposition), ""kaolinite"", ""illite"" (eg. Village Fields North Sea), ""smectite"",""chlorite"" (Teg, Algeria.)")]
        public string MatrixCement {
            get {
                return this.matrixCementField;
            }
            set {
                this.matrixCementField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>STRUCTURED DESCRIPTION USAGE. Lithology visible porosity description. Defined after BakerHughes definitions, as opposed to Shell, which has no linkage to actual numeric estimates. The theoretical maximum porosity for a clastic rock is about 26%. This is normally much reduced by other factors. When estimating porosities use: MT 15% "good" 10 to 15% "fair" 5 to 10% "poor" LT 5% "trace" 0 "none"</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"STRUCTURED DESCRIPTION USAGE. Lithology visible porosity description. Defined after BakerHughes definitions, as opposed to Shell, which has no linkage to actual numeric estimates. The theoretical maximum porosity for a clastic rock is about 26%. This is normally much reduced by other factors. When estimating porosities use: MT 15% ""good"" 10 to 15% ""fair"" 5 to 10% ""poor"" LT 5% ""trace"" 0 ""none""")]
        public string PorosityVisible {
            get {
                return this.porosityVisibleField;
            }
            set {
                this.porosityVisibleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>STRUCTURED DESCRIPTION USAGE. Visible porosity fabric description from after Shell 4.3.2.1 and 4.3.2.2. intergranular (particle size greater than 20m), fine interparticle (particle size less than 20m), intercrystalline, intragranular, intraskeletal, intracrystalline, mouldic, fenestral, shelter, framework, stylolitic, replacement, solution, vuggy, channel, cavernous.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"STRUCTURED DESCRIPTION USAGE. Visible porosity fabric description from after Shell 4.3.2.1 and 4.3.2.2. intergranular (particle size greater than 20m), fine interparticle (particle size less than 20m), intercrystalline, intragranular, intraskeletal, intracrystalline, mouldic, fenestral, shelter, framework, stylolitic, replacement, solution, vuggy, channel, cavernous.")]
        public string PorosityFabric {
            get {
                return this.porosityFabricField;
            }
            set {
                this.porosityFabricField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>STRUCTURED DESCRIPTION USAGE. Lithology permeability description from Shell 4.3.2.5. In future these would benefit from quantification. tight, slightly, fairly, highly.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("STRUCTURED DESCRIPTION USAGE. Lithology permeability description from Shell 4.3.2" +
            ".5. In future these would benefit from quantification. tight, slightly, fairly, " +
            "highly.")]
        public string Permeability {
            get {
                return this.permeabilityField;
            }
            set {
                this.permeabilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Shows")]
        public CuttingsIntervalShow[] Shows {
            get {
                return this.showsField;
            }
            set {
                this.showsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Qualifier")]
        public LithologyQualifier[] Qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class IlluminanceMeasure {
        
        private IlluminanceUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public IlluminanceUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum IlluminanceUom {
        
        /// <remarks/>
        footcandle,
        
        /// <remarks/>
        klx,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lm/m2")]
        lmm2,
        
        /// <remarks/>
        lx,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("part_CuttingsInterval", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class CuttingsGeologyInterval {
        
        private MdInterval mdIntervalField;
        
        private Citation citationField;
        
        private MassPerVolumeMeasure densBulkField;
        
        private MassPerVolumeMeasure densShaleField;
        
        private VolumePerVolumeMeasure calciteField;
        
        private VolumePerVolumeMeasure calcStabField;
        
        private DimensionlessMeasure cecField;
        
        private VolumePerVolumeMeasure dolomiteField;
        
        private LengthMeasure sizeMnField;
        
        private LengthMeasure sizeMaxField;
        
        private IlluminanceMeasure qftField;
        
        private string cleaningMethodField;
        
        private string dryingMethodField;
        
        private CuttingsIntervalLithology[] cuttingsIntervalLithologyField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The measured depth interval which is represented by the cuttings described here.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The measured depth interval which is represented by the cuttings described here.")]
        public MdInterval MdInterval {
            get {
                return this.mdIntervalField;
            }
            set {
                this.mdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public Citation Citation {
            get {
                return this.citationField;
            }
            set {
                this.citationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sample bulk density for the interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Sample bulk density for the interval.")]
        public MassPerVolumeMeasure DensBulk {
            get {
                return this.densBulkField;
            }
            set {
                this.densBulkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Shale density for the interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Shale density for the interval.")]
        public MassPerVolumeMeasure DensShale {
            get {
                return this.densShaleField;
            }
            set {
                this.densShaleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calcimetry calcite percentage.</summary>
        [System.ComponentModel.DescriptionAttribute("Calcimetry calcite percentage.")]
        public VolumePerVolumeMeasure Calcite {
            get {
                return this.calciteField;
            }
            set {
                this.calciteField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calcimetry stabilized percentage.</summary>
        [System.ComponentModel.DescriptionAttribute("Calcimetry stabilized percentage.")]
        public VolumePerVolumeMeasure CalcStab {
            get {
                return this.calcStabField;
            }
            set {
                this.calcStabField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cuttings cationic exchange capacity. Temporarily calling this a DimensionlessMeasure</summary>
        [System.ComponentModel.DescriptionAttribute("Cuttings cationic exchange capacity. Temporarily calling this a DimensionlessMeas" +
            "ure")]
        public DimensionlessMeasure Cec {
            get {
                return this.cecField;
            }
            set {
                this.cecField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calcimetry dolomite percentage.</summary>
        [System.ComponentModel.DescriptionAttribute("Calcimetry dolomite percentage.")]
        public VolumePerVolumeMeasure Dolomite {
            get {
                return this.dolomiteField;
            }
            set {
                this.dolomiteField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum size.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum size.")]
        public LengthMeasure SizeMn {
            get {
                return this.sizeMnField;
            }
            set {
                this.sizeMnField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure SizeMax {
            get {
                return this.sizeMaxField;
            }
            set {
                this.sizeMaxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluorescence as measured using a device licensed for the Quantitative Fluorescence Technique.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluorescence as measured using a device licensed for the Quantitative Fluorescenc" +
            "e Technique.")]
        public IlluminanceMeasure Qft {
            get {
                return this.qftField;
            }
            set {
                this.qftField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sample treatment: cleaning method.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Sample treatment: cleaning method.")]
        public string CleaningMethod {
            get {
                return this.cleaningMethodField;
            }
            set {
                this.cleaningMethodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sample treatment: drying method.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Sample treatment: drying method.")]
        public string DryingMethod {
            get {
                return this.dryingMethodField;
            }
            set {
                this.dryingMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CuttingsIntervalLithology")]
        public CuttingsIntervalLithology[] CuttingsIntervalLithology {
            get {
                return this.cuttingsIntervalLithologyField;
            }
            set {
                this.cuttingsIntervalLithologyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ChannelValueContext))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObjectContext))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IndexRangeContext))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public abstract partial class AbstractLogDataContext {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class ChannelValueContext : AbstractLogDataContext {
        
        private DataObjectReference channelReferenceField;
        
        private string dataValueField;
        
        /// <remarks/>
        public DataObjectReference ChannelReference {
            get {
                return this.channelReferenceField;
            }
            set {
                this.channelReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string DataValue {
            get {
                return this.dataValueField;
            }
            set {
                this.dataValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class ObjectContext : AbstractLogDataContext {
        
        private DataObjectReference objectReferenceField;
        
        private string uidField;
        
        /// <remarks/>
        public DataObjectReference ObjectReference {
            get {
                return this.objectReferenceField;
            }
            set {
                this.objectReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string Uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class IndexRangeContext : AbstractLogDataContext {
        
        private AbstractIndexValue startIndexField;
        
        private AbstractIndexValue endIndexField;
        
        /// <remarks/>
        public AbstractIndexValue StartIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
            }
        }
        
        /// <remarks/>
        public AbstractIndexValue EndIndex {
            get {
                return this.endIndexField;
            }
            set {
                this.endIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DepthIndexValue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TimeIndexValue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PassIndexedDepth))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public abstract partial class AbstractIndexValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DepthIndexValue : AbstractIndexValue {
        
        private float depthField;
        
        /// <remarks/>
        public float Depth {
            get {
                return this.depthField;
            }
            set {
                this.depthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class TimeIndexValue : AbstractIndexValue {
        
        private string timeField;
        
        /// <remarks/>
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class PassIndexedDepth : AbstractIndexValue {
        
        private int passField;
        
        private int directionField;
        
        private float depthField;
        
        /// <remarks/>
        public int Pass {
            get {
                return this.passField;
            }
            set {
                this.passField = value;
            }
        }
        
        /// <remarks/>
        public int Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        public float Depth {
            get {
                return this.depthField;
            }
            set {
                this.depthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class ChannelData {
        
        private string dataField;
        
        private string fileUriField;
        
        /// <remarks/>
        /// <summary>The data blob in JSON form. This allows you to embed the bulk data in a single file with the xml, to avoid the issues that arise with splitting the data across multiple files.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The data blob in JSON form. This allows you to embed the bulk data in a single fi" +
            "le with the xml, to avoid the issues that arise with splitting the data across m" +
            "ultiple files.")]
        public string data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The uri of a file containing the bulkdata. If this field is non-null, then the data field is ignored. For files written to disk, this should normally contain a simple file name in relative URI form. For instance, if an application writes a log file to disk, it might write the xml as abc.xml, and the bulk data abc.avro. In that case the value of this element would be './abc.avro'.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The uri of a file containing the bulkdata. If this field is non-null, then the data field is ignored. For files written to disk, this should normally contain a simple file name in relative URI form. For instance, if an application writes a log file to disk, it might write the xml as abc.xml, and the bulk data abc.avro. In that case the value of this element would be './abc.avro'.")]
        public string fileUri {
            get {
                return this.fileUriField;
            }
            set {
                this.fileUriField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class PointMetadata {
        
        private string nameField;
        
        private EtpDataType etpDataTypeField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public EtpDataType EtpDataType {
            get {
                return this.etpDataTypeField;
            }
            set {
                this.etpDataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum EtpDataType {
        
        /// <remarks/>
        boolean,
        
        /// <remarks/>
        bytes,
        
        /// <remarks/>
        @double,
        
        /// <remarks/>
        @float,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        @long,
        
        /// <remarks/>
        @null,
        
        /// <remarks/>
        @string,
        
        /// <remarks/>
        vector,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class LengthMeasureExt {
        
        private string uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class LogChannelAxis {
        
        private long axisOrderField;
        
        private double axisStartField;
        
        private double axisSpacingField;
        
        private long axisCountField;
        
        private string axisNameField;
        
        private string axisPropertyTypeField;
        
        private string axisUomField;
        
        /// <remarks/>
        /// <summary>The order of this axis. The order should begin with one and increment by one for each additional axis. The order indicates how fast the index of the axis varies in the serialized list of values. The index of an axis with an order of one varies the slowest. The index of an axis with an order of two varies the next slowest. And so on. This is the same ordering that is used in the C programming language. For example, the following array: [ x axis ] | z11 z12 z13 y axis: z21 z22 z23 | z31 z32 z33 | z41 z42 z43 may be encoded as follows: axisDefinition[order=1].name='x' axisDefinition[order=1].count='3' axisDefinition[order=2].name='y' axisDefinition[order=2].count='4' { z11 z21 z31 z41 z12 z22 z32 z42 z13 z23 z33 z43 } or alternatively: axisDefinition[order=1].name='y' axisDefinition[order=1].count='4' axisDefinition[order=2].name='x' axisDefinition[order=2].count='3' { z11 z12 z13 z21 z22 z23 z31 z32 z33 z41 z42 z43 } STORE UNIQUE KEY: When accessed via the Store Interface, the "order" must be unique.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The order of this axis. The order should begin with one and increment by one for each additional axis. The order indicates how fast the index of the axis varies in the serialized list of values. The index of an axis with an order of one varies the slowest. The index of an axis with an order of two varies the next slowest. And so on. This is the same ordering that is used in the C programming language. For example, the following array: [ x axis ] | z11 z12 z13 y axis: z21 z22 z23 | z31 z32 z33 | z41 z42 z43 may be encoded as follows: axisDefinition[order=1].name='x' axisDefinition[order=1].count='3' axisDefinition[order=2].name='y' axisDefinition[order=2].count='4' { z11 z21 z31 z41 z12 z22 z32 z42 z13 z23 z33 z43 } or alternatively: axisDefinition[order=1].name='y' axisDefinition[order=1].count='4' axisDefinition[order=2].name='x' axisDefinition[order=2].count='3' { z11 z12 z13 z21 z22 z23 z31 z32 z33 z41 z42 z43 } STORE UNIQUE KEY: When accessed via the Store Interface, the ""order"" must be unique.")]
        public long AxisOrder {
            get {
                return this.axisOrderField;
            }
            set {
                this.axisOrderField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Value of the initial entry in the list of axis index values.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Value of the initial entry in the list of axis index values.")]
        public double AxisStart {
            get {
                return this.axisStartField;
            }
            set {
                this.axisStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The increment to be used to fill out the list of the log channel axis index values.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The increment to be used to fill out the list of the log channel axis index value" +
            "s.")]
        public double AxisSpacing {
            get {
                return this.axisSpacingField;
            }
            set {
                this.axisSpacingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The count of elements along this axis of the array.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The count of elements along this axis of the array.")]
        public long AxisCount {
            get {
                return this.axisCountField;
            }
            set {
                this.axisCountField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the array axis.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the array axis.")]
        public string AxisName {
            get {
                return this.axisNameField;
            }
            set {
                this.axisNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The property type by which the array axis is classified. Like "measured depth" or "elapsed time".</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The property type by which the array axis is classified. Like \"measured depth\" or" +
            " \"elapsed time\".")]
        public string AxisPropertyType {
            get {
                return this.axisPropertyTypeField;
            }
            set {
                this.axisPropertyTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A string representing the units of measure of the axis values.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A string representing the units of measure of the axis values.")]
        public string AxisUom {
            get {
                return this.axisUomField;
            }
            set {
                this.axisUomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class ChannelIndex {
        
        private ChannelIndexType indexTypeField;
        
        private string uomField;
        
        private IndexDirection directionField;
        
        private string mnemonicField;
        
        private string datumReferenceField;
        
        /// <remarks/>
        /// <summary>The type of index (time, depth, etc)</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of index (time, depth, etc)")]
        public ChannelIndexType IndexType {
            get {
                return this.indexTypeField;
            }
            set {
                this.indexTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The units of the index. Must be one of the units allowed for the specified IndexType (i.e. time or distance).</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The units of the index. Must be one of the units allowed for the specified IndexT" +
            "ype (i.e. time or distance).")]
        public string Uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The direction of the index, either increasing or decreasing. Index direction may not change within the life of a channel.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The direction of the index, either increasing or decreasing. Index direction may " +
            "not change within the life of a channel.")]
        public IndexDirection Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mnemonic for the index.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The mnemonic for the index.")]
        public string Mnemonic {
            get {
                return this.mnemonicField;
            }
            set {
                this.mnemonicField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>For depth indexes, this contains the uid of the datum, in the Channel's Well object, to which all of the index values are referenced.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("For depth indexes, this contains the uid of the datum, in the Channel\'s Well obje" +
            "ct, to which all of the index values are referenced.")]
        public string DatumReference {
            get {
                return this.datumReferenceField;
            }
            set {
                this.datumReferenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ChannelIndexType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("measured depth")]
        measureddepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("true vertical depth")]
        trueverticaldepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pass indexed depth")]
        passindexeddepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("date time")]
        datetime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("elapsed time")]
        elapsedtime,
        
        /// <remarks/>
        temperature,
        
        /// <remarks/>
        pressure,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum IndexDirection {
        
        /// <remarks/>
        decreasing,
        
        /// <remarks/>
        increasing,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class CementPumpSchedule {
        
        private TimeMeasure eTimPumpField;
        
        private VolumePerTimeMeasure ratePumpField;
        
        private VolumeMeasure volPumpField;
        
        private int strokePumpField;
        
        private bool strokePumpFieldSpecified;
        
        private PressureMeasure presBackField;
        
        private TimeMeasure eTimShutdownField;
        
        private string commentsField;
        
        /// <remarks/>
        public TimeMeasure ETimPump {
            get {
                return this.eTimPumpField;
            }
            set {
                this.eTimPumpField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerTimeMeasure RatePump {
            get {
                return this.ratePumpField;
            }
            set {
                this.ratePumpField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolPump {
            get {
                return this.volPumpField;
            }
            set {
                this.volPumpField = value;
            }
        }
        
        /// <remarks/>
        public int StrokePump {
            get {
                return this.strokePumpField;
            }
            set {
                this.strokePumpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StrokePumpSpecified {
            get {
                return this.strokePumpFieldSpecified;
            }
            set {
                this.strokePumpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresBack {
            get {
                return this.presBackField;
            }
            set {
                this.presBackField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimShutdown {
            get {
                return this.eTimShutdownField;
            }
            set {
                this.eTimShutdownField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class CementAdditive {
        
        private string nameAddField;
        
        private string typeAddField;
        
        private string formAddField;
        
        private MassPerVolumeMeasure densAddField;
        
        private MassMeasure additiveField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private object[] itemsField;
        
        private string uidField;
        
        /// <remarks/>
        public string NameAdd {
            get {
                return this.nameAddField;
            }
            set {
                this.nameAddField = value;
            }
        }
        
        /// <remarks/>
        public string TypeAdd {
            get {
                return this.typeAddField;
            }
            set {
                this.typeAddField = value;
            }
        }
        
        /// <remarks/>
        public string FormAdd {
            get {
                return this.formAddField;
            }
            set {
                this.formAddField = value;
            }
        }
        
        /// <remarks/>
        public MassPerVolumeMeasure DensAdd {
            get {
                return this.densAddField;
            }
            set {
                this.densAddField = value;
            }
        }
        
        /// <remarks/>
        public MassMeasure Additive {
            get {
                return this.additiveField;
            }
            set {
                this.additiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Concentration", typeof(MassPerMassMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("TypeConc", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("VolSack", typeof(VolumeMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("WtSack", typeof(MassMeasure))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class VolumePerMassMeasure {
        
        private VolumePerMassUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public VolumePerMassUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum VolumePerMassUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.01 L/kg")]
        Item001Lkg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/ton[UK]")]
        bbltonUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/ton[US]")]
        bbltonUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/g")]
        cm3g,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm3/kg")]
        dm3kg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm3/t")]
        dm3t,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/kg")]
        ft3kg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/lbm")]
        ft3lbm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/sack[94lbm]")]
        ft3sack94lbm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[UK]/lbm")]
        galUKlbm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[US]/lbm")]
        galUSlbm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[US]/sack[94lbm]")]
        galUSsack94lbm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[US]/ton[UK]")]
        galUStonUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gal[US]/ton[US]")]
        galUStonUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/kg")]
        Lkg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/t")]
        Lt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/ton[UK]")]
        LtonUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/g")]
        m3g,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/kg")]
        m3kg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/t")]
        m3t,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/ton[UK]")]
        m3tonUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/ton[US]")]
        m3tonUS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class CementingFluid {
        
        private string typeFluidField;
        
        private int fluidIndexField;
        
        private bool fluidIndexFieldSpecified;
        
        private string descFluidField;
        
        private string purposeField;
        
        private string classSlurryDryBlendField;
        
        private MeasuredDepthCoord mdFluidTopField;
        
        private MeasuredDepthCoord mdFluidBottomField;
        
        private string sourceWaterField;
        
        private VolumeMeasure volWaterField;
        
        private VolumeMeasure volCementField;
        
        private VolumePerMassMeasure ratioMixWaterField;
        
        private VolumeMeasure volFluidField;
        
        private VolumePerVolumeMeasure excessPcField;
        
        private VolumePerMassMeasure volYieldField;
        
        private MassPerVolumeMeasure densityField;
        
        private VolumePerVolumeMeasure solidVolumeFractionField;
        
        private VolumeMeasure volPumpedField;
        
        private VolumeMeasure volOtherField;
        
        private string fluidRheologicalModelField;
        
        private DynamicViscosityMeasure visField;
        
        private PressureMeasure ypField;
        
        private DimensionlessMeasure nField;
        
        private DimensionlessMeasure kField;
        
        private PlaneAngleMeasure gel10SecReadingField;
        
        private PressureMeasure gel10SecStrengthField;
        
        private PlaneAngleMeasure gel1MinReadingField;
        
        private PressureMeasure gel1MinStrengthField;
        
        private PlaneAngleMeasure gel10MinReadingField;
        
        private PressureMeasure gel10MinStrengthField;
        
        private string typeBaseFluidField;
        
        private MassPerVolumeMeasure densBaseFluidField;
        
        private string dryBlendNameField;
        
        private string dryBlendDescriptionField;
        
        private MassMeasure massDryBlendField;
        
        private MassPerVolumeMeasure densDryBlendField;
        
        private MassMeasure massSackDryBlendField;
        
        private bool foamUsedField;
        
        private bool foamUsedFieldSpecified;
        
        private string typeGasFoamField;
        
        private VolumeMeasure volGasFoamField;
        
        private VolumePerVolumeMeasure ratioConstGasMethodAvField;
        
        private MassPerVolumeMeasure densConstGasMethodField;
        
        private VolumePerVolumeMeasure ratioConstGasMethodStartField;
        
        private VolumePerVolumeMeasure ratioConstGasMethodEndField;
        
        private MassPerVolumeMeasure densConstGasFoamField;
        
        private TimeMeasure eTimThickeningField;
        
        private ThermodynamicTemperatureMeasure tempThickeningField;
        
        private PressureMeasure presTestThickeningField;
        
        private DimensionlessMeasure consTestThickeningField;
        
        private VolumePerVolumeMeasure pcFreeWaterField;
        
        private ThermodynamicTemperatureMeasure tempFreeWaterField;
        
        private VolumeMeasure volTestFluidLossField;
        
        private ThermodynamicTemperatureMeasure tempFluidLossField;
        
        private PressureMeasure presTestFluidLossField;
        
        private TimeMeasure timeFluidLossField;
        
        private VolumeMeasure volAPIFluidLossField;
        
        private TimeMeasure eTimComprStren1Field;
        
        private TimeMeasure eTimComprStren2Field;
        
        private PressureMeasure presComprStren1Field;
        
        private PressureMeasure presComprStren2Field;
        
        private ThermodynamicTemperatureMeasure tempComprStren1Field;
        
        private ThermodynamicTemperatureMeasure tempComprStren2Field;
        
        private MassPerVolumeMeasure densAtPresField;
        
        private VolumeMeasure volReservedField;
        
        private VolumeMeasure volTotSlurryField;
        
        private CementAdditive[] cementAdditiveField;
        
        private CementPumpSchedule cementPumpScheduleField;
        
        /// <remarks/>
        public string TypeFluid {
            get {
                return this.typeFluidField;
            }
            set {
                this.typeFluidField = value;
            }
        }
        
        /// <remarks/>
        public int FluidIndex {
            get {
                return this.fluidIndexField;
            }
            set {
                this.fluidIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FluidIndexSpecified {
            get {
                return this.fluidIndexFieldSpecified;
            }
            set {
                this.fluidIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string DescFluid {
            get {
                return this.descFluidField;
            }
            set {
                this.descFluidField = value;
            }
        }
        
        /// <remarks/>
        public string Purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
        
        /// <remarks/>
        public string ClassSlurryDryBlend {
            get {
                return this.classSlurryDryBlendField;
            }
            set {
                this.classSlurryDryBlendField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdFluidTop {
            get {
                return this.mdFluidTopField;
            }
            set {
                this.mdFluidTopField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdFluidBottom {
            get {
                return this.mdFluidBottomField;
            }
            set {
                this.mdFluidBottomField = value;
            }
        }
        
        /// <remarks/>
        public string SourceWater {
            get {
                return this.sourceWaterField;
            }
            set {
                this.sourceWaterField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolWater {
            get {
                return this.volWaterField;
            }
            set {
                this.volWaterField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolCement {
            get {
                return this.volCementField;
            }
            set {
                this.volCementField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerMassMeasure RatioMixWater {
            get {
                return this.ratioMixWaterField;
            }
            set {
                this.ratioMixWaterField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolFluid {
            get {
                return this.volFluidField;
            }
            set {
                this.volFluidField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerVolumeMeasure ExcessPc {
            get {
                return this.excessPcField;
            }
            set {
                this.excessPcField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerMassMeasure VolYield {
            get {
                return this.volYieldField;
            }
            set {
                this.volYieldField = value;
            }
        }
        
        /// <remarks/>
        public MassPerVolumeMeasure Density {
            get {
                return this.densityField;
            }
            set {
                this.densityField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerVolumeMeasure SolidVolumeFraction {
            get {
                return this.solidVolumeFractionField;
            }
            set {
                this.solidVolumeFractionField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolPumped {
            get {
                return this.volPumpedField;
            }
            set {
                this.volPumpedField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolOther {
            get {
                return this.volOtherField;
            }
            set {
                this.volOtherField = value;
            }
        }
        
        /// <remarks/>
        public string FluidRheologicalModel {
            get {
                return this.fluidRheologicalModelField;
            }
            set {
                this.fluidRheologicalModelField = value;
            }
        }
        
        /// <remarks/>
        public DynamicViscosityMeasure Vis {
            get {
                return this.visField;
            }
            set {
                this.visField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure Yp {
            get {
                return this.ypField;
            }
            set {
                this.ypField = value;
            }
        }
        
        /// <remarks/>
        public DimensionlessMeasure N {
            get {
                return this.nField;
            }
            set {
                this.nField = value;
            }
        }
        
        /// <remarks/>
        public DimensionlessMeasure K {
            get {
                return this.kField;
            }
            set {
                this.kField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure Gel10SecReading {
            get {
                return this.gel10SecReadingField;
            }
            set {
                this.gel10SecReadingField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure Gel10SecStrength {
            get {
                return this.gel10SecStrengthField;
            }
            set {
                this.gel10SecStrengthField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure Gel1MinReading {
            get {
                return this.gel1MinReadingField;
            }
            set {
                this.gel1MinReadingField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure Gel1MinStrength {
            get {
                return this.gel1MinStrengthField;
            }
            set {
                this.gel1MinStrengthField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure Gel10MinReading {
            get {
                return this.gel10MinReadingField;
            }
            set {
                this.gel10MinReadingField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure Gel10MinStrength {
            get {
                return this.gel10MinStrengthField;
            }
            set {
                this.gel10MinStrengthField = value;
            }
        }
        
        /// <remarks/>
        public string TypeBaseFluid {
            get {
                return this.typeBaseFluidField;
            }
            set {
                this.typeBaseFluidField = value;
            }
        }
        
        /// <remarks/>
        public MassPerVolumeMeasure DensBaseFluid {
            get {
                return this.densBaseFluidField;
            }
            set {
                this.densBaseFluidField = value;
            }
        }
        
        /// <remarks/>
        public string DryBlendName {
            get {
                return this.dryBlendNameField;
            }
            set {
                this.dryBlendNameField = value;
            }
        }
        
        /// <remarks/>
        public string DryBlendDescription {
            get {
                return this.dryBlendDescriptionField;
            }
            set {
                this.dryBlendDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public MassMeasure MassDryBlend {
            get {
                return this.massDryBlendField;
            }
            set {
                this.massDryBlendField = value;
            }
        }
        
        /// <remarks/>
        public MassPerVolumeMeasure DensDryBlend {
            get {
                return this.densDryBlendField;
            }
            set {
                this.densDryBlendField = value;
            }
        }
        
        /// <remarks/>
        public MassMeasure MassSackDryBlend {
            get {
                return this.massSackDryBlendField;
            }
            set {
                this.massSackDryBlendField = value;
            }
        }
        
        /// <remarks/>
        public bool FoamUsed {
            get {
                return this.foamUsedField;
            }
            set {
                this.foamUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FoamUsedSpecified {
            get {
                return this.foamUsedFieldSpecified;
            }
            set {
                this.foamUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string TypeGasFoam {
            get {
                return this.typeGasFoamField;
            }
            set {
                this.typeGasFoamField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolGasFoam {
            get {
                return this.volGasFoamField;
            }
            set {
                this.volGasFoamField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerVolumeMeasure RatioConstGasMethodAv {
            get {
                return this.ratioConstGasMethodAvField;
            }
            set {
                this.ratioConstGasMethodAvField = value;
            }
        }
        
        /// <remarks/>
        public MassPerVolumeMeasure DensConstGasMethod {
            get {
                return this.densConstGasMethodField;
            }
            set {
                this.densConstGasMethodField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerVolumeMeasure RatioConstGasMethodStart {
            get {
                return this.ratioConstGasMethodStartField;
            }
            set {
                this.ratioConstGasMethodStartField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerVolumeMeasure RatioConstGasMethodEnd {
            get {
                return this.ratioConstGasMethodEndField;
            }
            set {
                this.ratioConstGasMethodEndField = value;
            }
        }
        
        /// <remarks/>
        public MassPerVolumeMeasure DensConstGasFoam {
            get {
                return this.densConstGasFoamField;
            }
            set {
                this.densConstGasFoamField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimThickening {
            get {
                return this.eTimThickeningField;
            }
            set {
                this.eTimThickeningField = value;
            }
        }
        
        /// <remarks/>
        public ThermodynamicTemperatureMeasure TempThickening {
            get {
                return this.tempThickeningField;
            }
            set {
                this.tempThickeningField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresTestThickening {
            get {
                return this.presTestThickeningField;
            }
            set {
                this.presTestThickeningField = value;
            }
        }
        
        /// <remarks/>
        public DimensionlessMeasure ConsTestThickening {
            get {
                return this.consTestThickeningField;
            }
            set {
                this.consTestThickeningField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerVolumeMeasure PcFreeWater {
            get {
                return this.pcFreeWaterField;
            }
            set {
                this.pcFreeWaterField = value;
            }
        }
        
        /// <remarks/>
        public ThermodynamicTemperatureMeasure TempFreeWater {
            get {
                return this.tempFreeWaterField;
            }
            set {
                this.tempFreeWaterField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolTestFluidLoss {
            get {
                return this.volTestFluidLossField;
            }
            set {
                this.volTestFluidLossField = value;
            }
        }
        
        /// <remarks/>
        public ThermodynamicTemperatureMeasure TempFluidLoss {
            get {
                return this.tempFluidLossField;
            }
            set {
                this.tempFluidLossField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresTestFluidLoss {
            get {
                return this.presTestFluidLossField;
            }
            set {
                this.presTestFluidLossField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure TimeFluidLoss {
            get {
                return this.timeFluidLossField;
            }
            set {
                this.timeFluidLossField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolAPIFluidLoss {
            get {
                return this.volAPIFluidLossField;
            }
            set {
                this.volAPIFluidLossField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimComprStren1 {
            get {
                return this.eTimComprStren1Field;
            }
            set {
                this.eTimComprStren1Field = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimComprStren2 {
            get {
                return this.eTimComprStren2Field;
            }
            set {
                this.eTimComprStren2Field = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresComprStren1 {
            get {
                return this.presComprStren1Field;
            }
            set {
                this.presComprStren1Field = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresComprStren2 {
            get {
                return this.presComprStren2Field;
            }
            set {
                this.presComprStren2Field = value;
            }
        }
        
        /// <remarks/>
        public ThermodynamicTemperatureMeasure TempComprStren1 {
            get {
                return this.tempComprStren1Field;
            }
            set {
                this.tempComprStren1Field = value;
            }
        }
        
        /// <remarks/>
        public ThermodynamicTemperatureMeasure TempComprStren2 {
            get {
                return this.tempComprStren2Field;
            }
            set {
                this.tempComprStren2Field = value;
            }
        }
        
        /// <remarks/>
        public MassPerVolumeMeasure DensAtPres {
            get {
                return this.densAtPresField;
            }
            set {
                this.densAtPresField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolReserved {
            get {
                return this.volReservedField;
            }
            set {
                this.volReservedField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolTotSlurry {
            get {
                return this.volTotSlurryField;
            }
            set {
                this.volTotSlurryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CementAdditive")]
        public CementAdditive[] CementAdditive {
            get {
                return this.cementAdditiveField;
            }
            set {
                this.cementAdditiveField = value;
            }
        }
        
        /// <remarks/>
        public CementPumpSchedule CementPumpSchedule {
            get {
                return this.cementPumpScheduleField;
            }
            set {
                this.cementPumpScheduleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CementJobStage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CementDesignStage))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public abstract partial class AbstractCementStage {
        
        private int numStageField;
        
        private string typeStageField;
        
        private MdInterval stageMdIntervalField;
        
        private VolumePerTimeMeasure flowrateDisplaceAvField;
        
        private VolumePerTimeMeasure flowrateDisplaceMxField;
        
        private PressureMeasure presDisplaceField;
        
        private VolumeMeasure volReturnsField;
        
        private VolumePerTimeMeasure flowrateMudCircField;
        
        private PressureMeasure presMudCircField;
        
        private VolumePerTimeMeasure flowrateEndField;
        
        private MeasuredDepthCoord mdStringField;
        
        private MeasuredDepthCoord mdToolField;
        
        private MeasuredDepthCoord mdCoilTbgField;
        
        private VolumeMeasure volCsgInField;
        
        private VolumeMeasure volCsgOutField;
        
        private bool tailPipeUsedField;
        
        private bool tailPipeUsedFieldSpecified;
        
        private LengthMeasure diaTailPipeField;
        
        private bool tailPipePerfField;
        
        private bool tailPipePerfFieldSpecified;
        
        private PressureMeasure presTbgStartField;
        
        private PressureMeasure presTbgEndField;
        
        private PressureMeasure presCsgStartField;
        
        private PressureMeasure presCsgEndField;
        
        private PressureMeasure presBackPressureField;
        
        private PressureMeasure presCoilTbgStartField;
        
        private PressureMeasure presCoilTbgEndField;
        
        private PressureMeasure presBreakDownField;
        
        private VolumePerTimeMeasure flowrateBreakDownField;
        
        private PressureMeasure presSqueezeAvField;
        
        private PressureMeasure presSqueezeEndField;
        
        private bool presSqueezeHeldField;
        
        private bool presSqueezeHeldFieldSpecified;
        
        private PressureMeasure presSqueezeField;
        
        private TimeMeasure eTimPresHeldField;
        
        private VolumePerTimeMeasure flowrateSqueezeAvField;
        
        private VolumePerTimeMeasure flowrateSqueezeMxField;
        
        private VolumePerTimeMeasure flowratePumpStartField;
        
        private VolumePerTimeMeasure flowratePumpEndField;
        
        private bool pillBelowPlugField;
        
        private bool pillBelowPlugFieldSpecified;
        
        private MeasuredDepthCoord mdCircOutField;
        
        private VolumeMeasure volCircPriorField;
        
        private string typeOriginalMudField;
        
        private MassPerVolumeMeasure wtMudField;
        
        private TimeMeasure visFunnelMudField;
        
        private DynamicViscosityMeasure pvMudField;
        
        private PressureMeasure ypMudField;
        
        private PressureMeasure gel10SecField;
        
        private PressureMeasure gel10MinField;
        
        private ThermodynamicTemperatureMeasure tempBHCTField;
        
        private ThermodynamicTemperatureMeasure tempBHSTField;
        
        private string volExcessMethodField;
        
        private string mixMethodField;
        
        private string densMeasByField;
        
        private bool annFlowAfterField;
        
        private bool annFlowAfterFieldSpecified;
        
        private bool topPlugField;
        
        private bool topPlugFieldSpecified;
        
        private bool botPlugField;
        
        private bool botPlugFieldSpecified;
        
        private int botPlugNumberField;
        
        private bool botPlugNumberFieldSpecified;
        
        private bool plugBumpedField;
        
        private bool plugBumpedFieldSpecified;
        
        private PressureMeasure presPriorBumpField;
        
        private PressureMeasure presBumpField;
        
        private PressureMeasure presHeldField;
        
        private bool floatHeldField;
        
        private bool floatHeldFieldSpecified;
        
        private VolumeMeasure volMudLostField;
        
        private string fluidDisplaceField;
        
        private MassPerVolumeMeasure densDisplaceFluidField;
        
        private VolumeMeasure volDisplaceFluidField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CementingFluid[] cementingFluidField;
        
        /// <remarks/>
        public int NumStage {
            get {
                return this.numStageField;
            }
            set {
                this.numStageField = value;
            }
        }
        
        /// <remarks/>
        public string TypeStage {
            get {
                return this.typeStageField;
            }
            set {
                this.typeStageField = value;
            }
        }
        
        /// <remarks/>
        public MdInterval StageMdInterval {
            get {
                return this.stageMdIntervalField;
            }
            set {
                this.stageMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerTimeMeasure FlowrateDisplaceAv {
            get {
                return this.flowrateDisplaceAvField;
            }
            set {
                this.flowrateDisplaceAvField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerTimeMeasure FlowrateDisplaceMx {
            get {
                return this.flowrateDisplaceMxField;
            }
            set {
                this.flowrateDisplaceMxField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresDisplace {
            get {
                return this.presDisplaceField;
            }
            set {
                this.presDisplaceField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolReturns {
            get {
                return this.volReturnsField;
            }
            set {
                this.volReturnsField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerTimeMeasure FlowrateMudCirc {
            get {
                return this.flowrateMudCircField;
            }
            set {
                this.flowrateMudCircField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresMudCirc {
            get {
                return this.presMudCircField;
            }
            set {
                this.presMudCircField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerTimeMeasure FlowrateEnd {
            get {
                return this.flowrateEndField;
            }
            set {
                this.flowrateEndField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdString {
            get {
                return this.mdStringField;
            }
            set {
                this.mdStringField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdTool {
            get {
                return this.mdToolField;
            }
            set {
                this.mdToolField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdCoilTbg {
            get {
                return this.mdCoilTbgField;
            }
            set {
                this.mdCoilTbgField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolCsgIn {
            get {
                return this.volCsgInField;
            }
            set {
                this.volCsgInField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolCsgOut {
            get {
                return this.volCsgOutField;
            }
            set {
                this.volCsgOutField = value;
            }
        }
        
        /// <remarks/>
        public bool TailPipeUsed {
            get {
                return this.tailPipeUsedField;
            }
            set {
                this.tailPipeUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TailPipeUsedSpecified {
            get {
                return this.tailPipeUsedFieldSpecified;
            }
            set {
                this.tailPipeUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure DiaTailPipe {
            get {
                return this.diaTailPipeField;
            }
            set {
                this.diaTailPipeField = value;
            }
        }
        
        /// <remarks/>
        public bool TailPipePerf {
            get {
                return this.tailPipePerfField;
            }
            set {
                this.tailPipePerfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TailPipePerfSpecified {
            get {
                return this.tailPipePerfFieldSpecified;
            }
            set {
                this.tailPipePerfFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresTbgStart {
            get {
                return this.presTbgStartField;
            }
            set {
                this.presTbgStartField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresTbgEnd {
            get {
                return this.presTbgEndField;
            }
            set {
                this.presTbgEndField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresCsgStart {
            get {
                return this.presCsgStartField;
            }
            set {
                this.presCsgStartField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresCsgEnd {
            get {
                return this.presCsgEndField;
            }
            set {
                this.presCsgEndField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresBackPressure {
            get {
                return this.presBackPressureField;
            }
            set {
                this.presBackPressureField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresCoilTbgStart {
            get {
                return this.presCoilTbgStartField;
            }
            set {
                this.presCoilTbgStartField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresCoilTbgEnd {
            get {
                return this.presCoilTbgEndField;
            }
            set {
                this.presCoilTbgEndField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresBreakDown {
            get {
                return this.presBreakDownField;
            }
            set {
                this.presBreakDownField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerTimeMeasure FlowrateBreakDown {
            get {
                return this.flowrateBreakDownField;
            }
            set {
                this.flowrateBreakDownField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresSqueezeAv {
            get {
                return this.presSqueezeAvField;
            }
            set {
                this.presSqueezeAvField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresSqueezeEnd {
            get {
                return this.presSqueezeEndField;
            }
            set {
                this.presSqueezeEndField = value;
            }
        }
        
        /// <remarks/>
        public bool PresSqueezeHeld {
            get {
                return this.presSqueezeHeldField;
            }
            set {
                this.presSqueezeHeldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PresSqueezeHeldSpecified {
            get {
                return this.presSqueezeHeldFieldSpecified;
            }
            set {
                this.presSqueezeHeldFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresSqueeze {
            get {
                return this.presSqueezeField;
            }
            set {
                this.presSqueezeField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimPresHeld {
            get {
                return this.eTimPresHeldField;
            }
            set {
                this.eTimPresHeldField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerTimeMeasure FlowrateSqueezeAv {
            get {
                return this.flowrateSqueezeAvField;
            }
            set {
                this.flowrateSqueezeAvField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerTimeMeasure FlowrateSqueezeMx {
            get {
                return this.flowrateSqueezeMxField;
            }
            set {
                this.flowrateSqueezeMxField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerTimeMeasure FlowratePumpStart {
            get {
                return this.flowratePumpStartField;
            }
            set {
                this.flowratePumpStartField = value;
            }
        }
        
        /// <remarks/>
        public VolumePerTimeMeasure FlowratePumpEnd {
            get {
                return this.flowratePumpEndField;
            }
            set {
                this.flowratePumpEndField = value;
            }
        }
        
        /// <remarks/>
        public bool PillBelowPlug {
            get {
                return this.pillBelowPlugField;
            }
            set {
                this.pillBelowPlugField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PillBelowPlugSpecified {
            get {
                return this.pillBelowPlugFieldSpecified;
            }
            set {
                this.pillBelowPlugFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdCircOut {
            get {
                return this.mdCircOutField;
            }
            set {
                this.mdCircOutField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolCircPrior {
            get {
                return this.volCircPriorField;
            }
            set {
                this.volCircPriorField = value;
            }
        }
        
        /// <remarks/>
        public string TypeOriginalMud {
            get {
                return this.typeOriginalMudField;
            }
            set {
                this.typeOriginalMudField = value;
            }
        }
        
        /// <remarks/>
        public MassPerVolumeMeasure WtMud {
            get {
                return this.wtMudField;
            }
            set {
                this.wtMudField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure VisFunnelMud {
            get {
                return this.visFunnelMudField;
            }
            set {
                this.visFunnelMudField = value;
            }
        }
        
        /// <remarks/>
        public DynamicViscosityMeasure PvMud {
            get {
                return this.pvMudField;
            }
            set {
                this.pvMudField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure YpMud {
            get {
                return this.ypMudField;
            }
            set {
                this.ypMudField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure Gel10Sec {
            get {
                return this.gel10SecField;
            }
            set {
                this.gel10SecField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure Gel10Min {
            get {
                return this.gel10MinField;
            }
            set {
                this.gel10MinField = value;
            }
        }
        
        /// <remarks/>
        public ThermodynamicTemperatureMeasure TempBHCT {
            get {
                return this.tempBHCTField;
            }
            set {
                this.tempBHCTField = value;
            }
        }
        
        /// <remarks/>
        public ThermodynamicTemperatureMeasure TempBHST {
            get {
                return this.tempBHSTField;
            }
            set {
                this.tempBHSTField = value;
            }
        }
        
        /// <remarks/>
        public string VolExcessMethod {
            get {
                return this.volExcessMethodField;
            }
            set {
                this.volExcessMethodField = value;
            }
        }
        
        /// <remarks/>
        public string MixMethod {
            get {
                return this.mixMethodField;
            }
            set {
                this.mixMethodField = value;
            }
        }
        
        /// <remarks/>
        public string DensMeasBy {
            get {
                return this.densMeasByField;
            }
            set {
                this.densMeasByField = value;
            }
        }
        
        /// <remarks/>
        public bool AnnFlowAfter {
            get {
                return this.annFlowAfterField;
            }
            set {
                this.annFlowAfterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnFlowAfterSpecified {
            get {
                return this.annFlowAfterFieldSpecified;
            }
            set {
                this.annFlowAfterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool TopPlug {
            get {
                return this.topPlugField;
            }
            set {
                this.topPlugField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TopPlugSpecified {
            get {
                return this.topPlugFieldSpecified;
            }
            set {
                this.topPlugFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool BotPlug {
            get {
                return this.botPlugField;
            }
            set {
                this.botPlugField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BotPlugSpecified {
            get {
                return this.botPlugFieldSpecified;
            }
            set {
                this.botPlugFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int BotPlugNumber {
            get {
                return this.botPlugNumberField;
            }
            set {
                this.botPlugNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BotPlugNumberSpecified {
            get {
                return this.botPlugNumberFieldSpecified;
            }
            set {
                this.botPlugNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool PlugBumped {
            get {
                return this.plugBumpedField;
            }
            set {
                this.plugBumpedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlugBumpedSpecified {
            get {
                return this.plugBumpedFieldSpecified;
            }
            set {
                this.plugBumpedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresPriorBump {
            get {
                return this.presPriorBumpField;
            }
            set {
                this.presPriorBumpField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresBump {
            get {
                return this.presBumpField;
            }
            set {
                this.presBumpField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresHeld {
            get {
                return this.presHeldField;
            }
            set {
                this.presHeldField = value;
            }
        }
        
        /// <remarks/>
        public bool FloatHeld {
            get {
                return this.floatHeldField;
            }
            set {
                this.floatHeldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FloatHeldSpecified {
            get {
                return this.floatHeldFieldSpecified;
            }
            set {
                this.floatHeldFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolMudLost {
            get {
                return this.volMudLostField;
            }
            set {
                this.volMudLostField = value;
            }
        }
        
        /// <remarks/>
        public string FluidDisplace {
            get {
                return this.fluidDisplaceField;
            }
            set {
                this.fluidDisplaceField = value;
            }
        }
        
        /// <remarks/>
        public MassPerVolumeMeasure DensDisplaceFluid {
            get {
                return this.densDisplaceFluidField;
            }
            set {
                this.densDisplaceFluidField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolDisplaceFluid {
            get {
                return this.volDisplaceFluidField;
            }
            set {
                this.volDisplaceFluidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CementingFluid")]
        public CementingFluid[] CementingFluid {
            get {
                return this.cementingFluidField;
            }
            set {
                this.cementingFluidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class CementJobStage : AbstractCementStage {
        
        private string dTimMixStartField;
        
        private string dTimPumpStartField;
        
        private string dTimPumpEndField;
        
        private string dTimDisplaceStartField;
        
        private VolumeMeasure volExcessField;
        
        private TimeMeasure eTimMudCirculationField;
        
        private bool afterFlowAnnField;
        
        private bool afterFlowAnnFieldSpecified;
        
        private bool squeezeObtainedField;
        
        private bool squeezeObtainedFieldSpecified;
        
        /// <remarks/>
        public string DTimMixStart {
            get {
                return this.dTimMixStartField;
            }
            set {
                this.dTimMixStartField = value;
            }
        }
        
        /// <remarks/>
        public string DTimPumpStart {
            get {
                return this.dTimPumpStartField;
            }
            set {
                this.dTimPumpStartField = value;
            }
        }
        
        /// <remarks/>
        public string DTimPumpEnd {
            get {
                return this.dTimPumpEndField;
            }
            set {
                this.dTimPumpEndField = value;
            }
        }
        
        /// <remarks/>
        public string DTimDisplaceStart {
            get {
                return this.dTimDisplaceStartField;
            }
            set {
                this.dTimDisplaceStartField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolExcess {
            get {
                return this.volExcessField;
            }
            set {
                this.volExcessField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimMudCirculation {
            get {
                return this.eTimMudCirculationField;
            }
            set {
                this.eTimMudCirculationField = value;
            }
        }
        
        /// <remarks/>
        public bool AfterFlowAnn {
            get {
                return this.afterFlowAnnField;
            }
            set {
                this.afterFlowAnnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AfterFlowAnnSpecified {
            get {
                return this.afterFlowAnnFieldSpecified;
            }
            set {
                this.afterFlowAnnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool SqueezeObtained {
            get {
                return this.squeezeObtainedField;
            }
            set {
                this.squeezeObtainedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SqueezeObtainedSpecified {
            get {
                return this.squeezeObtainedFieldSpecified;
            }
            set {
                this.squeezeObtainedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class CementDesignStage : AbstractCementStage {
        
        private string squeezeObjField;
        
        private bool plugCatcherField;
        
        private bool plugCatcherFieldSpecified;
        
        /// <remarks/>
        public string SqueezeObj {
            get {
                return this.squeezeObjField;
            }
            set {
                this.squeezeObjField = value;
            }
        }
        
        /// <remarks/>
        public bool PlugCatcher {
            get {
                return this.plugCatcherField;
            }
            set {
                this.plugCatcherField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlugCatcherSpecified {
            get {
                return this.plugCatcherFieldSpecified;
            }
            set {
                this.plugCatcherFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CementJobDesign))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CementJobReport))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class CementJobInfo {
        
        private string cementEngrField;
        
        private TimeMeasure wocField;
        
        private MdInterval plugIntervalField;
        
        private MeasuredDepthCoord mdHoleField;
        
        private AngularVelocityMeasure rpmPipeField;
        
        private MomentOfForceMeasure tqInitPipeRotField;
        
        private MomentOfForceMeasure tqPipeAvField;
        
        private MomentOfForceMeasure tqPipeMxField;
        
        private ForceMeasure overPullField;
        
        private ForceMeasure slackOffField;
        
        private AngularVelocityMeasure rpmPipeRecipField;
        
        private LengthMeasure lenPipeRecipStrokeField;
        
        private bool reciprocatingField;
        
        /// <remarks/>
        public string CementEngr {
            get {
                return this.cementEngrField;
            }
            set {
                this.cementEngrField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure Woc {
            get {
                return this.wocField;
            }
            set {
                this.wocField = value;
            }
        }
        
        /// <remarks/>
        public MdInterval PlugInterval {
            get {
                return this.plugIntervalField;
            }
            set {
                this.plugIntervalField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdHole {
            get {
                return this.mdHoleField;
            }
            set {
                this.mdHoleField = value;
            }
        }
        
        /// <remarks/>
        public AngularVelocityMeasure RpmPipe {
            get {
                return this.rpmPipeField;
            }
            set {
                this.rpmPipeField = value;
            }
        }
        
        /// <remarks/>
        public MomentOfForceMeasure TqInitPipeRot {
            get {
                return this.tqInitPipeRotField;
            }
            set {
                this.tqInitPipeRotField = value;
            }
        }
        
        /// <remarks/>
        public MomentOfForceMeasure TqPipeAv {
            get {
                return this.tqPipeAvField;
            }
            set {
                this.tqPipeAvField = value;
            }
        }
        
        /// <remarks/>
        public MomentOfForceMeasure TqPipeMx {
            get {
                return this.tqPipeMxField;
            }
            set {
                this.tqPipeMxField = value;
            }
        }
        
        /// <remarks/>
        public ForceMeasure OverPull {
            get {
                return this.overPullField;
            }
            set {
                this.overPullField = value;
            }
        }
        
        /// <remarks/>
        public ForceMeasure SlackOff {
            get {
                return this.slackOffField;
            }
            set {
                this.slackOffField = value;
            }
        }
        
        /// <remarks/>
        public AngularVelocityMeasure RpmPipeRecip {
            get {
                return this.rpmPipeRecipField;
            }
            set {
                this.rpmPipeRecipField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure LenPipeRecipStroke {
            get {
                return this.lenPipeRecipStrokeField;
            }
            set {
                this.lenPipeRecipStrokeField = value;
            }
        }
        
        /// <remarks/>
        public bool Reciprocating {
            get {
                return this.reciprocatingField;
            }
            set {
                this.reciprocatingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class CementJobDesign : CementJobInfo {
        
        private CementDesignStage[] cementDesignStageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CementDesignStage")]
        public CementDesignStage[] CementDesignStage {
            get {
                return this.cementDesignStageField;
            }
            set {
                this.cementDesignStageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class CementJobReport : CementJobInfo {
        
        private string dTimJobField;
        
        private string contractorField;
        
        private string dTimPlugSetField;
        
        private bool cementDrillOutField;
        
        private bool cementDrillOutFieldSpecified;
        
        private string dTimCementDrillOutField;
        
        private string dTimSqueezeField;
        
        private string dTimPipeRotStartField;
        
        private string dTimPipeRotEndField;
        
        private string dTimRecipStartField;
        
        private string dTimRecipEndField;
        
        private CementJobStage[] cementJobStageField;
        
        /// <remarks/>
        public string DTimJob {
            get {
                return this.dTimJobField;
            }
            set {
                this.dTimJobField = value;
            }
        }
        
        /// <remarks/>
        public string Contractor {
            get {
                return this.contractorField;
            }
            set {
                this.contractorField = value;
            }
        }
        
        /// <remarks/>
        public string DTimPlugSet {
            get {
                return this.dTimPlugSetField;
            }
            set {
                this.dTimPlugSetField = value;
            }
        }
        
        /// <remarks/>
        public bool CementDrillOut {
            get {
                return this.cementDrillOutField;
            }
            set {
                this.cementDrillOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CementDrillOutSpecified {
            get {
                return this.cementDrillOutFieldSpecified;
            }
            set {
                this.cementDrillOutFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string DTimCementDrillOut {
            get {
                return this.dTimCementDrillOutField;
            }
            set {
                this.dTimCementDrillOutField = value;
            }
        }
        
        /// <remarks/>
        public string DTimSqueeze {
            get {
                return this.dTimSqueezeField;
            }
            set {
                this.dTimSqueezeField = value;
            }
        }
        
        /// <remarks/>
        public string DTimPipeRotStart {
            get {
                return this.dTimPipeRotStartField;
            }
            set {
                this.dTimPipeRotStartField = value;
            }
        }
        
        /// <remarks/>
        public string DTimPipeRotEnd {
            get {
                return this.dTimPipeRotEndField;
            }
            set {
                this.dTimPipeRotEndField = value;
            }
        }
        
        /// <remarks/>
        public string DTimRecipStart {
            get {
                return this.dTimRecipStartField;
            }
            set {
                this.dTimRecipStartField = value;
            }
        }
        
        /// <remarks/>
        public string DTimRecipEnd {
            get {
                return this.dTimRecipEndField;
            }
            set {
                this.dTimRecipEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CementJobStage")]
        public CementJobStage[] CementJobStage {
            get {
                return this.cementJobStageField;
            }
            set {
                this.cementJobStageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("part_WellboreGeometrySection", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class WellboreGeometrySection {
        
        private Citation citationField;
        
        private HoleCasingType typeHoleCasingField;
        
        private bool typeHoleCasingFieldSpecified;
        
        private MdInterval sectionMdIntervalField;
        
        private string sectionTvdIntervalField;
        
        private LengthMeasure idSectionField;
        
        private LengthMeasure odSectionField;
        
        private MassPerLengthMeasure wtPerLenField;
        
        private string gradeField;
        
        private bool curveConductorField;
        
        private bool curveConductorFieldSpecified;
        
        private LengthMeasure diaDriftField;
        
        private double factFricField;
        
        private bool factFricFieldSpecified;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private DataObjectReference[] bhaRunField;
        
        private string uidField;
        
        /// <remarks/>
        public Citation Citation {
            get {
                return this.citationField;
            }
            set {
                this.citationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of fixed component.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of fixed component.")]
        public HoleCasingType TypeHoleCasing {
            get {
                return this.typeHoleCasingField;
            }
            set {
                this.typeHoleCasingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeHoleCasingSpecified {
            get {
                return this.typeHoleCasingFieldSpecified;
            }
            set {
                this.typeHoleCasingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth interval for this wellbore geometry section.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth interval for this wellbore geometry section.")]
        public MdInterval SectionMdInterval {
            get {
                return this.sectionMdIntervalField;
            }
            set {
                this.sectionMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth interval for this wellbore geometry section.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth interval for this wellbore geometry section.")]
        public string SectionTvdInterval {
            get {
                return this.sectionTvdIntervalField;
            }
            set {
                this.sectionTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter.")]
        public LengthMeasure IdSection {
            get {
                return this.idSectionField;
            }
            set {
                this.idSectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outer diameter - Only for casings and risers.</summary>
        [System.ComponentModel.DescriptionAttribute("Outer diameter - Only for casings and risers.")]
        public LengthMeasure OdSection {
            get {
                return this.odSectionField;
            }
            set {
                this.odSectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight per unit length for casing sections.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight per unit length for casing sections.")]
        public MassPerLengthMeasure WtPerLen {
            get {
                return this.wtPerLenField;
            }
            set {
                this.wtPerLenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Material grade for the tubular section.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Material grade for the tubular section.")]
        public string Grade {
            get {
                return this.gradeField;
            }
            set {
                this.gradeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Curved conductor? Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Curved conductor? Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool CurveConductor {
            get {
                return this.curveConductorField;
            }
            set {
                this.curveConductorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurveConductorSpecified {
            get {
                return this.curveConductorFieldSpecified;
            }
            set {
                this.curveConductorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The drift diameter is the inside diameter (ID) that the pipe manufacturer guarantees per specifications. Note that the nominal inside diameter is not the same as the drift diameter but is always slightly larger. The drift diameter is used by the well planner to determine what size tools or casing strings can later be run through the casing, whereas the nominal inside diameter is used for fluid volume calculations such as mud circulating times and cement slurry placement calculations. Source: www.glossary.oilfield.slb.com</summary>
        [System.ComponentModel.DescriptionAttribute(@"The drift diameter is the inside diameter (ID) that the pipe manufacturer guarantees per specifications. Note that the nominal inside diameter is not the same as the drift diameter but is always slightly larger. The drift diameter is used by the well planner to determine what size tools or casing strings can later be run through the casing, whereas the nominal inside diameter is used for fluid volume calculations such as mud circulating times and cement slurry placement calculations. Source: www.glossary.oilfield.slb.com")]
        public LengthMeasure DiaDrift {
            get {
                return this.diaDriftField;
            }
            set {
                this.diaDriftField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Friction factor.</summary>
        [System.ComponentModel.DescriptionAttribute("Friction factor.")]
        public double FactFric {
            get {
                return this.factFricField;
            }
            set {
                this.factFricField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FactFricSpecified {
            get {
                return this.factFricFieldSpecified;
            }
            set {
                this.factFricFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BhaRun")]
        public DataObjectReference[] BhaRun {
            get {
                return this.bhaRunField;
            }
            set {
                this.bhaRunField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier of this WbGeometrySection within the WbGeometry object.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("Unique identifier of this WbGeometrySection within the WbGeometry object.")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum HoleCasingType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("blow out preventer")]
        blowoutpreventer,
        
        /// <remarks/>
        casing,
        
        /// <remarks/>
        conductor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("curved conductor")]
        curvedconductor,
        
        /// <remarks/>
        liner,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("open hole")]
        openhole,
        
        /// <remarks/>
        riser,
        
        /// <remarks/>
        tubing,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillingParams {
        
        private TimeMeasure eTimOpBitField;
        
        private MeasuredDepthCoord mdHoleStartField;
        
        private MeasuredDepthCoord mdHoleStopField;
        
        private string tubularField;
        
        private ForceMeasure hkldRotField;
        
        private ForceMeasure overPullField;
        
        private ForceMeasure slackOffField;
        
        private ForceMeasure hkldUpField;
        
        private ForceMeasure hkldDnField;
        
        private MomentOfForceMeasure tqOnBotAvField;
        
        private MomentOfForceMeasure tqOnBotMxField;
        
        private MomentOfForceMeasure tqOnBotMnField;
        
        private MomentOfForceMeasure tqOffBotAvField;
        
        private MomentOfForceMeasure tqDhAvField;
        
        private ForceMeasure wtAboveJarField;
        
        private ForceMeasure wtBelowJarField;
        
        private MassPerVolumeMeasure wtMudField;
        
        private VolumePerTimeMeasure flowratePumpField;
        
        private PowerMeasure powBitField;
        
        private LengthPerTimeMeasure velNozzleAvField;
        
        private PressureMeasure presDropBitField;
        
        private TimeMeasure cTimHoldField;
        
        private TimeMeasure cTimSteeringField;
        
        private TimeMeasure cTimDrillRotField;
        
        private TimeMeasure cTimDrillSlidField;
        
        private TimeMeasure cTimCircField;
        
        private TimeMeasure cTimReamField;
        
        private LengthMeasure distDrillRotField;
        
        private LengthMeasure distDrillSlidField;
        
        private LengthMeasure distReamField;
        
        private LengthMeasure distHoldField;
        
        private LengthMeasure distSteeringField;
        
        private AngularVelocityMeasure rpmAvField;
        
        private AngularVelocityMeasure rpmMxField;
        
        private AngularVelocityMeasure rpmMnField;
        
        private AngularVelocityMeasure rpmAvDhField;
        
        private LengthPerTimeMeasure ropAvField;
        
        private LengthPerTimeMeasure ropMxField;
        
        private LengthPerTimeMeasure ropMnField;
        
        private ForceMeasure wobAvField;
        
        private ForceMeasure wobMxField;
        
        private ForceMeasure wobMnField;
        
        private ForceMeasure wobAvDhField;
        
        private string reasonTripField;
        
        private string objectiveBhaField;
        
        private PlaneAngleMeasure aziTopField;
        
        private PlaneAngleMeasure aziBottomField;
        
        private PlaneAngleMeasure inclStartField;
        
        private PlaneAngleMeasure inclMxField;
        
        private PlaneAngleMeasure inclMnField;
        
        private PlaneAngleMeasure inclStopField;
        
        private ThermodynamicTemperatureMeasure tempMudDhMxField;
        
        private PressureMeasure presPumpAvField;
        
        private VolumePerTimeMeasure flowrateBitField;
        
        private MudClass mudClassField;
        
        private bool mudClassFieldSpecified;
        
        private string mudSubClassField;
        
        private string commentsField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Operating time spent by bit for run.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Operating time spent by bit for run.")]
        public TimeMeasure ETimOpBit {
            get {
                return this.eTimOpBitField;
            }
            set {
                this.eTimOpBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at start.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at start.")]
        public MeasuredDepthCoord MdHoleStart {
            get {
                return this.mdHoleStartField;
            }
            set {
                this.mdHoleStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at stop.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Measured depth at stop.")]
        public MeasuredDepthCoord MdHoleStop {
            get {
                return this.mdHoleStopField;
            }
            set {
                this.mdHoleStopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the tubular assembly.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the tubular assembly.")]
        public string Tubular {
            get {
                return this.tubularField;
            }
            set {
                this.tubularField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hookload - rotating.</summary>
        [System.ComponentModel.DescriptionAttribute("Hookload - rotating.")]
        public ForceMeasure HkldRot {
            get {
                return this.hkldRotField;
            }
            set {
                this.hkldRotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>hkldUp-hkldRot.</summary>
        [System.ComponentModel.DescriptionAttribute("hkldUp-hkldRot.")]
        public ForceMeasure OverPull {
            get {
                return this.overPullField;
            }
            set {
                this.overPullField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>hkldRot-hkldDown.</summary>
        [System.ComponentModel.DescriptionAttribute("hkldRot-hkldDown.")]
        public ForceMeasure SlackOff {
            get {
                return this.slackOffField;
            }
            set {
                this.slackOffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hookload - string moving up.</summary>
        [System.ComponentModel.DescriptionAttribute("Hookload - string moving up.")]
        public ForceMeasure HkldUp {
            get {
                return this.hkldUpField;
            }
            set {
                this.hkldUpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hookload - string moving down.</summary>
        [System.ComponentModel.DescriptionAttribute("Hookload - string moving down.")]
        public ForceMeasure HkldDn {
            get {
                return this.hkldDnField;
            }
            set {
                this.hkldDnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average Torque - on bottom.</summary>
        [System.ComponentModel.DescriptionAttribute("Average Torque - on bottom.")]
        public MomentOfForceMeasure TqOnBotAv {
            get {
                return this.tqOnBotAvField;
            }
            set {
                this.tqOnBotAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum torque - on bottom.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum torque - on bottom.")]
        public MomentOfForceMeasure TqOnBotMx {
            get {
                return this.tqOnBotMxField;
            }
            set {
                this.tqOnBotMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum torque - on bottom.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum torque - on bottom.")]
        public MomentOfForceMeasure TqOnBotMn {
            get {
                return this.tqOnBotMnField;
            }
            set {
                this.tqOnBotMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average torque - off bottom.</summary>
        [System.ComponentModel.DescriptionAttribute("Average torque - off bottom.")]
        public MomentOfForceMeasure TqOffBotAv {
            get {
                return this.tqOffBotAvField;
            }
            set {
                this.tqOffBotAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average torque - downhole.</summary>
        [System.ComponentModel.DescriptionAttribute("Average torque - downhole.")]
        public MomentOfForceMeasure TqDhAv {
            get {
                return this.tqDhAvField;
            }
            set {
                this.tqDhAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight above jars.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight above jars.")]
        public ForceMeasure WtAboveJar {
            get {
                return this.wtAboveJarField;
            }
            set {
                this.wtAboveJarField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight below jars.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight below jars.")]
        public ForceMeasure WtBelowJar {
            get {
                return this.wtBelowJarField;
            }
            set {
                this.wtBelowJarField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud density.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud density.")]
        public MassPerVolumeMeasure WtMud {
            get {
                return this.wtMudField;
            }
            set {
                this.wtMudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump flow rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Pump flow rate.")]
        public VolumePerTimeMeasure FlowratePump {
            get {
                return this.flowratePumpField;
            }
            set {
                this.flowratePumpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bit hydraulic.</summary>
        [System.ComponentModel.DescriptionAttribute("Bit hydraulic.")]
        public PowerMeasure PowBit {
            get {
                return this.powBitField;
            }
            set {
                this.powBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bit nozzle average velocity.</summary>
        [System.ComponentModel.DescriptionAttribute("Bit nozzle average velocity.")]
        public LengthPerTimeMeasure VelNozzleAv {
            get {
                return this.velNozzleAvField;
            }
            set {
                this.velNozzleAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure drop in bit.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure drop in bit.")]
        public PressureMeasure PresDropBit {
            get {
                return this.presDropBitField;
            }
            set {
                this.presDropBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent on hold from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent on hold from start of bit run.")]
        public TimeMeasure CTimHold {
            get {
                return this.cTimHoldField;
            }
            set {
                this.cTimHoldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent steering from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent steering from start of bit run.")]
        public TimeMeasure CTimSteering {
            get {
                return this.cTimSteeringField;
            }
            set {
                this.cTimSteeringField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent rotary drilling from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent rotary drilling from start of bit run.")]
        public TimeMeasure CTimDrillRot {
            get {
                return this.cTimDrillRotField;
            }
            set {
                this.cTimDrillRotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent slide drilling from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent slide drilling from start of bit run.")]
        public TimeMeasure CTimDrillSlid {
            get {
                return this.cTimDrillSlidField;
            }
            set {
                this.cTimDrillSlidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent circulating from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent circulating from start of bit run.")]
        public TimeMeasure CTimCirc {
            get {
                return this.cTimCircField;
            }
            set {
                this.cTimCircField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent reaming from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent reaming from start of bit run.")]
        public TimeMeasure CTimReam {
            get {
                return this.cTimReamField;
            }
            set {
                this.cTimReamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance drilled - rotating.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance drilled - rotating.")]
        public LengthMeasure DistDrillRot {
            get {
                return this.distDrillRotField;
            }
            set {
                this.distDrillRotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance drilled - sliding</summary>
        [System.ComponentModel.DescriptionAttribute("Distance drilled - sliding")]
        public LengthMeasure DistDrillSlid {
            get {
                return this.distDrillSlidField;
            }
            set {
                this.distDrillSlidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance reamed.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance reamed.")]
        public LengthMeasure DistReam {
            get {
                return this.distReamField;
            }
            set {
                this.distReamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance covered while holding angle with a steerable drilling assembly.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance covered while holding angle with a steerable drilling assembly.")]
        public LengthMeasure DistHold {
            get {
                return this.distHoldField;
            }
            set {
                this.distHoldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance covered while actively steering with a steerable drilling assembly.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance covered while actively steering with a steerable drilling assembly.")]
        public LengthMeasure DistSteering {
            get {
                return this.distSteeringField;
            }
            set {
                this.distSteeringField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average turn rate (commonly in rpm) through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Average turn rate (commonly in rpm) through Interval.")]
        public AngularVelocityMeasure RpmAv {
            get {
                return this.rpmAvField;
            }
            set {
                this.rpmAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum turn rate (commonly in rpm).</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum turn rate (commonly in rpm).")]
        public AngularVelocityMeasure RpmMx {
            get {
                return this.rpmMxField;
            }
            set {
                this.rpmMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum turn rate (commonly in rpm).</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum turn rate (commonly in rpm).")]
        public AngularVelocityMeasure RpmMn {
            get {
                return this.rpmMnField;
            }
            set {
                this.rpmMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average turn rate (commonly in rpm) downhole.</summary>
        [System.ComponentModel.DescriptionAttribute("Average turn rate (commonly in rpm) downhole.")]
        public AngularVelocityMeasure RpmAvDh {
            get {
                return this.rpmAvDhField;
            }
            set {
                this.rpmAvDhField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average rate of penetration through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Average rate of penetration through Interval.")]
        public LengthPerTimeMeasure RopAv {
            get {
                return this.ropAvField;
            }
            set {
                this.ropAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum rate of penetration through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum rate of penetration through Interval.")]
        public LengthPerTimeMeasure RopMx {
            get {
                return this.ropMxField;
            }
            set {
                this.ropMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum rate of penetration through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum rate of penetration through Interval.")]
        public LengthPerTimeMeasure RopMn {
            get {
                return this.ropMnField;
            }
            set {
                this.ropMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Surface weight on bit - average through interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Surface weight on bit - average through interval.")]
        public ForceMeasure WobAv {
            get {
                return this.wobAvField;
            }
            set {
                this.wobAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight on bit - maximum.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight on bit - maximum.")]
        public ForceMeasure WobMx {
            get {
                return this.wobMxField;
            }
            set {
                this.wobMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight on bit - minimum.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight on bit - minimum.")]
        public ForceMeasure WobMn {
            get {
                return this.wobMnField;
            }
            set {
                this.wobMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight on bit - average downhole.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight on bit - average downhole.")]
        public ForceMeasure WobAvDh {
            get {
                return this.wobAvDhField;
            }
            set {
                this.wobAvDhField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reason for trip.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Reason for trip.")]
        public string ReasonTrip {
            get {
                return this.reasonTripField;
            }
            set {
                this.reasonTripField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Objective of bottom hole assembly.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Objective of bottom hole assembly.")]
        public string ObjectiveBha {
            get {
                return this.objectiveBhaField;
            }
            set {
                this.objectiveBhaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Azimuth at start measured depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Azimuth at start measured depth.")]
        public PlaneAngleMeasure AziTop {
            get {
                return this.aziTopField;
            }
            set {
                this.aziTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Azimuth at stop measured depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Azimuth at stop measured depth.")]
        public PlaneAngleMeasure AziBottom {
            get {
                return this.aziBottomField;
            }
            set {
                this.aziBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inclination at start measured depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Inclination at start measured depth.")]
        public PlaneAngleMeasure InclStart {
            get {
                return this.inclStartField;
            }
            set {
                this.inclStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum inclination.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum inclination.")]
        public PlaneAngleMeasure InclMx {
            get {
                return this.inclMxField;
            }
            set {
                this.inclMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum inclination.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum inclination.")]
        public PlaneAngleMeasure InclMn {
            get {
                return this.inclMnField;
            }
            set {
                this.inclMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inclination at stop measured depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Inclination at stop measured depth.")]
        public PlaneAngleMeasure InclStop {
            get {
                return this.inclStopField;
            }
            set {
                this.inclStopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum mud temperature downhole during run.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum mud temperature downhole during run.")]
        public ThermodynamicTemperatureMeasure TempMudDhMx {
            get {
                return this.tempMudDhMxField;
            }
            set {
                this.tempMudDhMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average pump pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Average pump pressure.")]
        public PressureMeasure PresPumpAv {
            get {
                return this.presPumpAvField;
            }
            set {
                this.presPumpAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Flow rate at bit.</summary>
        [System.ComponentModel.DescriptionAttribute("Flow rate at bit.")]
        public VolumePerTimeMeasure FlowrateBit {
            get {
                return this.flowrateBitField;
            }
            set {
                this.flowrateBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The class of the drilling fluid.</summary>
        [System.ComponentModel.DescriptionAttribute("The class of the drilling fluid.")]
        public MudClass MudClass {
            get {
                return this.mudClassField;
            }
            set {
                this.mudClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MudClassSpecified {
            get {
                return this.mudClassFieldSpecified;
            }
            set {
                this.mudClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud Subtype at event occurrence.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud Subtype at event occurrence.")]
        public string MudSubClass {
            get {
                return this.mudSubClassField;
            }
            set {
                this.mudSubClassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum MudClass {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water based")]
        waterbased,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil based")]
        oilbased,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        pneumatic,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillReportSurveyStation {
        
        private string dTimField;
        
        private MeasuredDepthCoord mdField;
        
        private WellVerticalDepthCoord tvdField;
        
        private PlaneAngleMeasure inclField;
        
        private PlaneAngleMeasure aziField;
        
        private LengthMeasure vertSectField;
        
        private AnglePerLengthMeasure dlsField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private AbstractWellLocation[] locationField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The date at which the directional survey took place.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The date at which the directional survey took place.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of measurement from the drill datum.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Measured depth of measurement from the drill datum.")]
        public MeasuredDepthCoord Md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Vertical depth of the measurements.</summary>
        [System.ComponentModel.DescriptionAttribute("Vertical depth of the measurements.")]
        public WellVerticalDepthCoord Tvd {
            get {
                return this.tvdField;
            }
            set {
                this.tvdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole inclination, measured from vertical.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole inclination, measured from vertical.")]
        public PlaneAngleMeasure Incl {
            get {
                return this.inclField;
            }
            set {
                this.inclField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole azimuth. Corrected to wells azimuth reference.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole azimuth. Corrected to wells azimuth reference.")]
        public PlaneAngleMeasure Azi {
            get {
                return this.aziField;
            }
            set {
                this.aziField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance along vertical section azimuth plane.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance along vertical section azimuth plane.")]
        public LengthMeasure VertSect {
            get {
                return this.vertSectField;
            }
            set {
                this.vertSectField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Dogleg severity.</summary>
        [System.ComponentModel.DescriptionAttribute("Dogleg severity.")]
        public AnglePerLengthMeasure Dls {
            get {
                return this.dlsField;
            }
            set {
                this.dlsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Location")]
        public AbstractWellLocation[] Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class TimestampedCommentString {
        
        private string dTimField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillReportPorePressure {
        
        private ReadingKind readingKindField;
        
        private MassPerVolumeMeasure equivalentMudWeightField;
        
        private string dTimField;
        
        private MeasuredDepthCoord mdField;
        
        private WellVerticalDepthCoord tvdField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Was the reading measured or estimated</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Was the reading measured or estimated")]
        public ReadingKind ReadingKind {
            get {
                return this.readingKindField;
            }
            set {
                this.readingKindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The equivalent mud weight value of the pore pressure reading.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The equivalent mud weight value of the pore pressure reading.")]
        public MassPerVolumeMeasure EquivalentMudWeight {
            get {
                return this.equivalentMudWeightField;
            }
            set {
                this.equivalentMudWeightField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time at the reading was made.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time at the reading was made.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth where the readings were recorded.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth where the readings were recorded.")]
        public MeasuredDepthCoord Md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The true vertical depth where the readings were recorded.</summary>
        [System.ComponentModel.DescriptionAttribute("The true vertical depth where the readings were recorded.")]
        public WellVerticalDepthCoord Tvd {
            get {
                return this.tvdField;
            }
            set {
                this.tvdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ReadingKind {
        
        /// <remarks/>
        measured,
        
        /// <remarks/>
        estimated,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class RheometerViscosity {
        
        private AngularVelocityMeasure speedField;
        
        private DynamicViscosityMeasure viscosityField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public AngularVelocityMeasure Speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DynamicViscosityMeasure Viscosity {
            get {
                return this.viscosityField;
            }
            set {
                this.viscosityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Rheometer {
        
        private ThermodynamicTemperatureMeasure tempRheomField;
        
        private PressureMeasure presRheomField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private RheometerViscosity[] viscosityField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Rheometer temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Rheometer temperature.")]
        public ThermodynamicTemperatureMeasure TempRheom {
            get {
                return this.tempRheomField;
            }
            set {
                this.tempRheomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rheometer pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Rheometer pressure.")]
        public PressureMeasure PresRheom {
            get {
                return this.presRheomField;
            }
            set {
                this.presRheomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Viscosity")]
        public RheometerViscosity[] Viscosity {
            get {
                return this.viscosityField;
            }
            set {
                this.viscosityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ElectricPotentialDifferenceMeasure {
        
        private ElectricPotentialDifferenceUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ElectricPotentialDifferenceUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum ElectricPotentialDifferenceUom {
        
        /// <remarks/>
        cV,
        
        /// <remarks/>
        dV,
        
        /// <remarks/>
        fV,
        
        /// <remarks/>
        GV,
        
        /// <remarks/>
        kV,
        
        /// <remarks/>
        mV,
        
        /// <remarks/>
        MV,
        
        /// <remarks/>
        nV,
        
        /// <remarks/>
        pV,
        
        /// <remarks/>
        TV,
        
        /// <remarks/>
        uV,
        
        /// <remarks/>
        V,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Fluid {
        
        private string typeField;
        
        private string locationSampleField;
        
        private string dTimField;
        
        private MeasuredDepthCoord mdField;
        
        private WellVerticalDepthCoord tvdField;
        
        private PressureMeasure presBopRatingField;
        
        private MudClass mudClassField;
        
        private bool mudClassFieldSpecified;
        
        private MassPerVolumeMeasure densityField;
        
        private TimeMeasure visFunnelField;
        
        private ThermodynamicTemperatureMeasure tempVisField;
        
        private DynamicViscosityMeasure pvField;
        
        private PressureMeasure ypField;
        
        private PressureMeasure gel10SecField;
        
        private PressureMeasure gel10MinField;
        
        private PressureMeasure gel30MinField;
        
        private LengthMeasure filterCakeLtlpField;
        
        private VolumeMeasure filtrateLtlpField;
        
        private ThermodynamicTemperatureMeasure tempHthpField;
        
        private PressureMeasure presHthpField;
        
        private VolumeMeasure filtrateHthpField;
        
        private LengthMeasure filterCakeHthpField;
        
        private VolumePerVolumeMeasure solidsPcField;
        
        private VolumePerVolumeMeasure waterPcField;
        
        private VolumePerVolumeMeasure oilPcField;
        
        private VolumePerVolumeMeasure sandPcField;
        
        private VolumePerVolumeMeasure solidsLowGravPcField;
        
        private VolumePerVolumeMeasure solidsCalcPcField;
        
        private VolumePerVolumeMeasure baritePcField;
        
        private MassPerVolumeMeasure lcmField;
        
        private string mbtField;
        
        private double phField;
        
        private bool phFieldSpecified;
        
        private ThermodynamicTemperatureMeasure tempPhField;
        
        private VolumeMeasure pmField;
        
        private VolumeMeasure pmFiltrateField;
        
        private VolumeMeasure mfField;
        
        private VolumeMeasure alkalinityP1Field;
        
        private VolumeMeasure alkalinityP2Field;
        
        private MassPerVolumeMeasure chlorideField;
        
        private MassPerVolumeMeasure calciumField;
        
        private MassPerVolumeMeasure magnesiumField;
        
        private MassPerVolumeMeasure potassiumField;
        
        private VolumePerVolumeMeasure brinePcField;
        
        private MassPerVolumeMeasure limeField;
        
        private ElectricPotentialDifferenceMeasure electStabField;
        
        private MassPerVolumeMeasure calciumChlorideField;
        
        private string companyField;
        
        private string engineerField;
        
        private double asgField;
        
        private bool asgFieldSpecified;
        
        private VolumePerVolumeMeasure solidsHiGravPcField;
        
        private VolumePerVolumeMeasure polymerField;
        
        private string polyTypeField;
        
        private VolumePerVolumeMeasure solCorPcField;
        
        private MassPerMassMeasure oilCtgField;
        
        private MassPerMassMeasure hardnessCaField;
        
        private MassPerVolumeMeasure sulfideField;
        
        private string commentsField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private Rheometer[] rheometerField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Description for the type of fluid.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description for the type of fluid.")]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sample location.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Sample location.")]
        public string LocationSample {
            get {
                return this.locationSampleField;
            }
            set {
                this.locationSampleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time when fluid readings were recorded.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The time when fluid readings were recorded.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth where the fluid readings were recorded.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth where the fluid readings were recorded.")]
        public MeasuredDepthCoord Md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The true vertical depth where the fluid readings were recorded.</summary>
        [System.ComponentModel.DescriptionAttribute("The true vertical depth where the fluid readings were recorded.")]
        public WellVerticalDepthCoord Tvd {
            get {
                return this.tvdField;
            }
            set {
                this.tvdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum pressure rating of the blow out preventer.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum pressure rating of the blow out preventer.")]
        public PressureMeasure PresBopRating {
            get {
                return this.presBopRatingField;
            }
            set {
                this.presBopRatingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The class of the drilling fluid.</summary>
        [System.ComponentModel.DescriptionAttribute("The class of the drilling fluid.")]
        public MudClass MudClass {
            get {
                return this.mudClassField;
            }
            set {
                this.mudClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MudClassSpecified {
            get {
                return this.mudClassFieldSpecified;
            }
            set {
                this.mudClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid density.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluid density.")]
        public MassPerVolumeMeasure Density {
            get {
                return this.densityField;
            }
            set {
                this.densityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Funnel viscosity in seconds.</summary>
        [System.ComponentModel.DescriptionAttribute("Funnel viscosity in seconds.")]
        public TimeMeasure VisFunnel {
            get {
                return this.visFunnelField;
            }
            set {
                this.visFunnelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Funnel viscosity temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Funnel viscosity temperature.")]
        public ThermodynamicTemperatureMeasure TempVis {
            get {
                return this.tempVisField;
            }
            set {
                this.tempVisField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Plastic viscosity.</summary>
        [System.ComponentModel.DescriptionAttribute("Plastic viscosity.")]
        public DynamicViscosityMeasure Pv {
            get {
                return this.pvField;
            }
            set {
                this.pvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Yield point (Bingham and Herschel Bulkley models).</summary>
        [System.ComponentModel.DescriptionAttribute("Yield point (Bingham and Herschel Bulkley models).")]
        public PressureMeasure Yp {
            get {
                return this.ypField;
            }
            set {
                this.ypField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>10 second gels.</summary>
        [System.ComponentModel.DescriptionAttribute("10 second gels.")]
        public PressureMeasure Gel10Sec {
            get {
                return this.gel10SecField;
            }
            set {
                this.gel10SecField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>10 minute gels.</summary>
        [System.ComponentModel.DescriptionAttribute("10 minute gels.")]
        public PressureMeasure Gel10Min {
            get {
                return this.gel10MinField;
            }
            set {
                this.gel10MinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>30 minute gels.</summary>
        [System.ComponentModel.DescriptionAttribute("30 minute gels.")]
        public PressureMeasure Gel30Min {
            get {
                return this.gel30MinField;
            }
            set {
                this.gel30MinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Filter cake thickness at low (normal) temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Filter cake thickness at low (normal) temperature and pressure.")]
        public LengthMeasure FilterCakeLtlp {
            get {
                return this.filterCakeLtlpField;
            }
            set {
                this.filterCakeLtlpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>API water loss (low temperature and pressure mud filtrate measurement) (volume per 30min).</summary>
        [System.ComponentModel.DescriptionAttribute("API water loss (low temperature and pressure mud filtrate measurement) (volume pe" +
            "r 30min).")]
        public VolumeMeasure FiltrateLtlp {
            get {
                return this.filtrateLtlpField;
            }
            set {
                this.filtrateLtlpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>High temperature high pressure (HTHP) temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("High temperature high pressure (HTHP) temperature.")]
        public ThermodynamicTemperatureMeasure TempHthp {
            get {
                return this.tempHthpField;
            }
            set {
                this.tempHthpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>High temperature high pressure (HTHP) pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("High temperature high pressure (HTHP) pressure.")]
        public PressureMeasure PresHthp {
            get {
                return this.presHthpField;
            }
            set {
                this.presHthpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>High temperature high pressure (HTHP) filtrate (volume per 30min).</summary>
        [System.ComponentModel.DescriptionAttribute("High temperature high pressure (HTHP) filtrate (volume per 30min).")]
        public VolumeMeasure FiltrateHthp {
            get {
                return this.filtrateHthpField;
            }
            set {
                this.filtrateHthpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>High temperature high pressure (HTHP) Filter cake thickness.</summary>
        [System.ComponentModel.DescriptionAttribute("High temperature high pressure (HTHP) Filter cake thickness.")]
        public LengthMeasure FilterCakeHthp {
            get {
                return this.filterCakeHthpField;
            }
            set {
                this.filterCakeHthpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Solids percentage from retort (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Solids percentage from retort (commonly in percent).")]
        public VolumePerVolumeMeasure SolidsPc {
            get {
                return this.solidsPcField;
            }
            set {
                this.solidsPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water content (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Water content (commonly in percent).")]
        public VolumePerVolumeMeasure WaterPc {
            get {
                return this.waterPcField;
            }
            set {
                this.waterPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Oil content from retort (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Oil content from retort (commonly in percent).")]
        public VolumePerVolumeMeasure OilPc {
            get {
                return this.oilPcField;
            }
            set {
                this.oilPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sand content (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Sand content (commonly in percent).")]
        public VolumePerVolumeMeasure SandPc {
            get {
                return this.sandPcField;
            }
            set {
                this.sandPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Low gravity solids (%).</summary>
        [System.ComponentModel.DescriptionAttribute("Low gravity solids (%).")]
        public VolumePerVolumeMeasure SolidsLowGravPc {
            get {
                return this.solidsLowGravPcField;
            }
            set {
                this.solidsLowGravPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Solids content (calculated) (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Solids content (calculated) (commonly in percent).")]
        public VolumePerVolumeMeasure SolidsCalcPc {
            get {
                return this.solidsCalcPcField;
            }
            set {
                this.solidsCalcPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Barite content (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Barite content (commonly in percent).")]
        public VolumePerVolumeMeasure BaritePc {
            get {
                return this.baritePcField;
            }
            set {
                this.baritePcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lost circulation material.</summary>
        [System.ComponentModel.DescriptionAttribute("Lost circulation material.")]
        public MassPerVolumeMeasure Lcm {
            get {
                return this.lcmField;
            }
            set {
                this.lcmField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cation exchange capacity (CEC) of the mud sample as measured by methylene blue titration (MBT).</summary>
        [System.ComponentModel.DescriptionAttribute("Cation exchange capacity (CEC) of the mud sample as measured by methylene blue ti" +
            "tration (MBT).")]
        public string Mbt {
            get {
                return this.mbtField;
            }
            set {
                this.mbtField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud pH.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud pH.")]
        public double Ph {
            get {
                return this.phField;
            }
            set {
                this.phField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhSpecified {
            get {
                return this.phFieldSpecified;
            }
            set {
                this.phFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud pH measurement temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud pH measurement temperature.")]
        public ThermodynamicTemperatureMeasure TempPh {
            get {
                return this.tempPhField;
            }
            set {
                this.tempPhField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Phenolphthalein alkalinity of whole mud.</summary>
        [System.ComponentModel.DescriptionAttribute("Phenolphthalein alkalinity of whole mud.")]
        public VolumeMeasure Pm {
            get {
                return this.pmField;
            }
            set {
                this.pmField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Phenolphthalein alkalinity of mud filtrate.</summary>
        [System.ComponentModel.DescriptionAttribute("Phenolphthalein alkalinity of mud filtrate.")]
        public VolumeMeasure PmFiltrate {
            get {
                return this.pmFiltrateField;
            }
            set {
                this.pmFiltrateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Methyl orange alkalinity of filtrate.</summary>
        [System.ComponentModel.DescriptionAttribute("Methyl orange alkalinity of filtrate.")]
        public VolumeMeasure Mf {
            get {
                return this.mfField;
            }
            set {
                this.mfField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud alkalinity P1 from alternate alkalinity method (volume in ml of 0.02N acid  to reach the phenolphthalein endpoint).</summary>
        [System.ComponentModel.DescriptionAttribute("Mud alkalinity P1 from alternate alkalinity method (volume in ml of 0.02N acid  t" +
            "o reach the phenolphthalein endpoint).")]
        public VolumeMeasure AlkalinityP1 {
            get {
                return this.alkalinityP1Field;
            }
            set {
                this.alkalinityP1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud alkalinity P2 from alternate alkalinity method (volume in ml of 0.02N acid to titrate the reagent mixture to the phenolphthalein endpoint).</summary>
        [System.ComponentModel.DescriptionAttribute("Mud alkalinity P2 from alternate alkalinity method (volume in ml of 0.02N acid to" +
            " titrate the reagent mixture to the phenolphthalein endpoint).")]
        public VolumeMeasure AlkalinityP2 {
            get {
                return this.alkalinityP2Field;
            }
            set {
                this.alkalinityP2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Chloride content.</summary>
        [System.ComponentModel.DescriptionAttribute("Chloride content.")]
        public MassPerVolumeMeasure Chloride {
            get {
                return this.chlorideField;
            }
            set {
                this.chlorideField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calcium content.</summary>
        [System.ComponentModel.DescriptionAttribute("Calcium content.")]
        public MassPerVolumeMeasure Calcium {
            get {
                return this.calciumField;
            }
            set {
                this.calciumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Magnesium content.</summary>
        [System.ComponentModel.DescriptionAttribute("Magnesium content.")]
        public MassPerVolumeMeasure Magnesium {
            get {
                return this.magnesiumField;
            }
            set {
                this.magnesiumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Potassium content.</summary>
        [System.ComponentModel.DescriptionAttribute("Potassium content.")]
        public MassPerVolumeMeasure Potassium {
            get {
                return this.potassiumField;
            }
            set {
                this.potassiumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Brine content (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Brine content (commonly in percent).")]
        public VolumePerVolumeMeasure BrinePc {
            get {
                return this.brinePcField;
            }
            set {
                this.brinePcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lime content.</summary>
        [System.ComponentModel.DescriptionAttribute("Lime content.")]
        public MassPerVolumeMeasure Lime {
            get {
                return this.limeField;
            }
            set {
                this.limeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measurement of the emulsion stability and oil-wetting capability in oil-based muds.</summary>
        [System.ComponentModel.DescriptionAttribute("Measurement of the emulsion stability and oil-wetting capability in oil-based mud" +
            "s.")]
        public ElectricPotentialDifferenceMeasure ElectStab {
            get {
                return this.electStabField;
            }
            set {
                this.electStabField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calcium chloride content.</summary>
        [System.ComponentModel.DescriptionAttribute("Calcium chloride content.")]
        public MassPerVolumeMeasure CalciumChloride {
            get {
                return this.calciumChlorideField;
            }
            set {
                this.calciumChlorideField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of company.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of company.")]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Engineer name</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Engineer name")]
        public string Engineer {
            get {
                return this.engineerField;
            }
            set {
                this.engineerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average specific gravity of solids.</summary>
        [System.ComponentModel.DescriptionAttribute("Average specific gravity of solids.")]
        public double Asg {
            get {
                return this.asgField;
            }
            set {
                this.asgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AsgSpecified {
            get {
                return this.asgFieldSpecified;
            }
            set {
                this.asgFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Solids high gravity (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Solids high gravity (commonly in percent).")]
        public VolumePerVolumeMeasure SolidsHiGravPc {
            get {
                return this.solidsHiGravPcField;
            }
            set {
                this.solidsHiGravPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Polymers present in mud system.</summary>
        [System.ComponentModel.DescriptionAttribute("Polymers present in mud system.")]
        public VolumePerVolumeMeasure Polymer {
            get {
                return this.polymerField;
            }
            set {
                this.polymerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of polymers present in mud system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Type of polymers present in mud system.")]
        public string PolyType {
            get {
                return this.polyTypeField;
            }
            set {
                this.polyTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Solids corrected for Chloride content (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Solids corrected for Chloride content (commonly in percent).")]
        public VolumePerVolumeMeasure SolCorPc {
            get {
                return this.solCorPcField;
            }
            set {
                this.solCorPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Oil on Cuttings.</summary>
        [System.ComponentModel.DescriptionAttribute("Oil on Cuttings.")]
        public MassPerMassMeasure OilCtg {
            get {
                return this.oilCtgField;
            }
            set {
                this.oilCtgField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total calcium hardness.</summary>
        [System.ComponentModel.DescriptionAttribute("Total calcium hardness.")]
        public MassPerMassMeasure HardnessCa {
            get {
                return this.hardnessCaField;
            }
            set {
                this.hardnessCaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sulfide content.</summary>
        [System.ComponentModel.DescriptionAttribute("Sulfide content.")]
        public MassPerVolumeMeasure Sulfide {
            get {
                return this.sulfideField;
            }
            set {
                this.sulfideField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Rheometer")]
        public Rheometer[] Rheometer {
            get {
                return this.rheometerField;
            }
            set {
                this.rheometerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillReportStatusInfo {
        
        private string dTimField;
        
        private MeasuredDepthCoord mdField;
        
        private WellVerticalDepthCoord tvdField;
        
        private MeasuredDepthCoord mdPlugTopField;
        
        private LengthMeasure diaHoleField;
        
        private MeasuredDepthCoord mdDiaHoleStartField;
        
        private LengthMeasure diaPilotField;
        
        private MeasuredDepthCoord mdDiaPilotPlanField;
        
        private WellVerticalDepthCoord tvdDiaPilotPlanField;
        
        private WellboreType typeWellboreField;
        
        private bool typeWellboreFieldSpecified;
        
        private MeasuredDepthCoord mdKickoffField;
        
        private MeasuredDepthCoord tvdKickoffField;
        
        private MassPerVolumeMeasure strengthFormField;
        
        private MeasuredDepthCoord mdStrengthFormField;
        
        private WellVerticalDepthCoord tvdStrengthFormField;
        
        private LengthMeasure diaCsgLastField;
        
        private MeasuredDepthCoord mdCsgLastField;
        
        private WellVerticalDepthCoord tvdCsgLastField;
        
        private PresTestType presTestTypeField;
        
        private bool presTestTypeFieldSpecified;
        
        private MeasuredDepthCoord mdPlannedField;
        
        private LengthMeasure distDrillField;
        
        private string sum24HrField;
        
        private string forecast24HrField;
        
        private LengthPerTimeMeasure ropCurrentField;
        
        private string rigField;
        
        private TimeMeasure eTimStartField;
        
        private TimeMeasure eTimSpudField;
        
        private TimeMeasure eTimLocField;
        
        private TimeMeasure eTimDrillField;
        
        private LengthPerTimeMeasure ropAvField;
        
        private string supervisorField;
        
        private string engineerField;
        
        private string geologistField;
        
        private TimeMeasure eTimDrillRotField;
        
        private TimeMeasure eTimDrillSlidField;
        
        private TimeMeasure eTimCircField;
        
        private TimeMeasure eTimReamField;
        
        private TimeMeasure eTimHoldField;
        
        private TimeMeasure eTimSteeringField;
        
        private LengthMeasure distDrillRotField;
        
        private LengthMeasure distDrillSlidField;
        
        private LengthMeasure distReamField;
        
        private LengthMeasure distHoldField;
        
        private LengthMeasure distSteeringField;
        
        private int numPobField;
        
        private bool numPobFieldSpecified;
        
        private int numContractField;
        
        private bool numContractFieldSpecified;
        
        private int numOperatorField;
        
        private bool numOperatorFieldSpecified;
        
        private int numServiceField;
        
        private bool numServiceFieldSpecified;
        
        private string numAFEField;
        
        private string conditionHoleField;
        
        private WellVerticalDepthCoord tvdLotField;
        
        private MassPerVolumeMeasure presLotEmwField;
        
        private PressureMeasure presKickTolField;
        
        private VolumeMeasure volKickTolField;
        
        private PressureMeasure maaspField;
        
        private string tubularField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private ObjectAlias[] parentWellboreField;
        
        private WellElevationCoord elevKellyField;
        
        private Cost costDayField;
        
        private Cost costDayMudField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>the date and time that for which the well status is reported.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("the date and time that for which the well status is reported.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wellbore measured depth at the end of the report period.</summary>
        [System.ComponentModel.DescriptionAttribute("Wellbore measured depth at the end of the report period.")]
        public MeasuredDepthCoord Md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wellbore true vertical depth at the end of the report.</summary>
        [System.ComponentModel.DescriptionAttribute("Wellbore true vertical depth at the end of the report.")]
        public WellVerticalDepthCoord Tvd {
            get {
                return this.tvdField;
            }
            set {
                this.tvdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured plug back depth.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured plug back depth.")]
        public MeasuredDepthCoord MdPlugTop {
            get {
                return this.mdPlugTopField;
            }
            set {
                this.mdPlugTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole nominal inside diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole nominal inside diameter.")]
        public LengthMeasure DiaHole {
            get {
                return this.diaHoleField;
            }
            set {
                this.diaHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth to the start of the current hole diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth to the start of the current hole diameter.")]
        public MeasuredDepthCoord MdDiaHoleStart {
            get {
                return this.mdDiaHoleStartField;
            }
            set {
                this.mdDiaHoleStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pilot hole nominal inside diameter at reporting time.</summary>
        [System.ComponentModel.DescriptionAttribute("Pilot hole nominal inside diameter at reporting time.")]
        public LengthMeasure DiaPilot {
            get {
                return this.diaPilotField;
            }
            set {
                this.diaPilotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The planned measured depth of the pilot hole.</summary>
        [System.ComponentModel.DescriptionAttribute("The planned measured depth of the pilot hole.")]
        public MeasuredDepthCoord MdDiaPilotPlan {
            get {
                return this.mdDiaPilotPlanField;
            }
            set {
                this.mdDiaPilotPlanField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The planned true vertical depth of the pilot hole.</summary>
        [System.ComponentModel.DescriptionAttribute("The planned true vertical depth of the pilot hole.")]
        public WellVerticalDepthCoord TvdDiaPilotPlan {
            get {
                return this.tvdDiaPilotPlanField;
            }
            set {
                this.tvdDiaPilotPlanField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of wellbore.")]
        public WellboreType TypeWellbore {
            get {
                return this.typeWellboreField;
            }
            set {
                this.typeWellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeWellboreSpecified {
            get {
                return this.typeWellboreFieldSpecified;
            }
            set {
                this.typeWellboreFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth to the kickoff point of the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth to the kickoff point of the wellbore.")]
        public MeasuredDepthCoord MdKickoff {
            get {
                return this.mdKickoffField;
            }
            set {
                this.mdKickoffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth to the kickoff point of the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth to the kickoff point of the wellbore.")]
        public MeasuredDepthCoord TvdKickoff {
            get {
                return this.tvdKickoffField;
            }
            set {
                this.tvdKickoffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured formation strength. This should be the final measurement before the end of the report period.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured formation strength. This should be the final measurement before the " +
            "end of the report period.")]
        public MassPerVolumeMeasure StrengthForm {
            get {
                return this.strengthFormField;
            }
            set {
                this.strengthFormField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth of the formation strength measuement.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth of the formation strength measuement.")]
        public MeasuredDepthCoord MdStrengthForm {
            get {
                return this.mdStrengthFormField;
            }
            set {
                this.mdStrengthFormField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The true vertical depth of the formation strength measuement.</summary>
        [System.ComponentModel.DescriptionAttribute("The true vertical depth of the formation strength measuement.")]
        public WellVerticalDepthCoord TvdStrengthForm {
            get {
                return this.tvdStrengthFormField;
            }
            set {
                this.tvdStrengthFormField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of last casing.</summary>
        [System.ComponentModel.DescriptionAttribute("Diameter of last casing.")]
        public LengthMeasure DiaCsgLast {
            get {
                return this.diaCsgLastField;
            }
            set {
                this.diaCsgLastField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of last casing.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of last casing.")]
        public MeasuredDepthCoord MdCsgLast {
            get {
                return this.mdCsgLastField;
            }
            set {
                this.mdCsgLastField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth of last casing.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth of last casing.")]
        public WellVerticalDepthCoord TvdCsgLast {
            get {
                return this.tvdCsgLastField;
            }
            set {
                this.tvdCsgLastField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of pressure test that was run during this reporting period.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of pressure test that was run during this reporting period.")]
        public PresTestType PresTestType {
            get {
                return this.presTestTypeField;
            }
            set {
                this.presTestTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PresTestTypeSpecified {
            get {
                return this.presTestTypeFieldSpecified;
            }
            set {
                this.presTestTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of plan for this day number (report period).</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of plan for this day number (report period).")]
        public MeasuredDepthCoord MdPlanned {
            get {
                return this.mdPlannedField;
            }
            set {
                this.mdPlannedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance drilled during this reporting period.   This should be measured along the centerline of the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance drilled during this reporting period.   This should be measured along th" +
            "e centerline of the wellbore.")]
        public LengthMeasure DistDrill {
            get {
                return this.distDrillField;
            }
            set {
                this.distDrillField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A summary that sumarizes the activities performed  and the status of the ongoing activities from the reporting period.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A summary that sumarizes the activities performed  and the status of the ongoing " +
            "activities from the reporting period.")]
        public string Sum24Hr {
            get {
                return this.sum24HrField;
            }
            set {
                this.sum24HrField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A summary that sumarizes the planned activities the next reporting period.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A summary that sumarizes the planned activities the next reporting period.")]
        public string Forecast24Hr {
            get {
                return this.forecast24HrField;
            }
            set {
                this.forecast24HrField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rate of penetration at the end of the reporting period.</summary>
        [System.ComponentModel.DescriptionAttribute("Rate of penetration at the end of the reporting period.")]
        public LengthPerTimeMeasure RopCurrent {
            get {
                return this.ropCurrentField;
            }
            set {
                this.ropCurrentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the rig utilized in this reporting period.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the rig utilized in this reporting period.")]
        public string Rig {
            get {
                return this.rigField;
            }
            set {
                this.rigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time from start of Operations (commonly in days).</summary>
        [System.ComponentModel.DescriptionAttribute("Time from start of Operations (commonly in days).")]
        public TimeMeasure ETimStart {
            get {
                return this.eTimStartField;
            }
            set {
                this.eTimStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time since bit broke ground (commonly in days).</summary>
        [System.ComponentModel.DescriptionAttribute("Time since bit broke ground (commonly in days).")]
        public TimeMeasure ETimSpud {
            get {
                return this.eTimSpudField;
            }
            set {
                this.eTimSpudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time rig on location (commonly in days).</summary>
        [System.ComponentModel.DescriptionAttribute("Time rig on location (commonly in days).")]
        public TimeMeasure ETimLoc {
            get {
                return this.eTimLocField;
            }
            set {
                this.eTimLocField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Drilling time.</summary>
        [System.ComponentModel.DescriptionAttribute("Drilling time.")]
        public TimeMeasure ETimDrill {
            get {
                return this.eTimDrillField;
            }
            set {
                this.eTimDrillField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average Rate of Penetration through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Average Rate of Penetration through Interval.")]
        public LengthPerTimeMeasure RopAv {
            get {
                return this.ropAvField;
            }
            set {
                this.ropAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of operator rig supervisor.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of operator rig supervisor.")]
        public string Supervisor {
            get {
                return this.supervisorField;
            }
            set {
                this.supervisorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Nae of Engineer.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Nae of Engineer.")]
        public string Engineer {
            get {
                return this.engineerField;
            }
            set {
                this.engineerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of operator wellsite geologist.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of operator wellsite geologist.")]
        public string Geologist {
            get {
                return this.geologistField;
            }
            set {
                this.geologistField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent rotary drilling for report interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent rotary drilling for report interval.")]
        public TimeMeasure ETimDrillRot {
            get {
                return this.eTimDrillRotField;
            }
            set {
                this.eTimDrillRotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent slide drilling from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent slide drilling from start of bit run.")]
        public TimeMeasure ETimDrillSlid {
            get {
                return this.eTimDrillSlidField;
            }
            set {
                this.eTimDrillSlidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent circulating from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent circulating from start of bit run.")]
        public TimeMeasure ETimCirc {
            get {
                return this.eTimCircField;
            }
            set {
                this.eTimCircField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent reaming from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent reaming from start of bit run.")]
        public TimeMeasure ETimReam {
            get {
                return this.eTimReamField;
            }
            set {
                this.eTimReamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent with no DD work (commonly in hours).</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent with no DD work (commonly in hours).")]
        public TimeMeasure ETimHold {
            get {
                return this.eTimHoldField;
            }
            set {
                this.eTimHoldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent steering bottom hole assembly (commonly in hours).</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent steering bottom hole assembly (commonly in hours).")]
        public TimeMeasure ETimSteering {
            get {
                return this.eTimSteeringField;
            }
            set {
                this.eTimSteeringField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance drilled - rotating.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance drilled - rotating.")]
        public LengthMeasure DistDrillRot {
            get {
                return this.distDrillRotField;
            }
            set {
                this.distDrillRotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance drilled - sliding.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance drilled - sliding.")]
        public LengthMeasure DistDrillSlid {
            get {
                return this.distDrillSlidField;
            }
            set {
                this.distDrillSlidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance reamed.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance reamed.")]
        public LengthMeasure DistReam {
            get {
                return this.distReamField;
            }
            set {
                this.distReamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance covered while holding angle with a steerable drilling assembly.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance covered while holding angle with a steerable drilling assembly.")]
        public LengthMeasure DistHold {
            get {
                return this.distHoldField;
            }
            set {
                this.distHoldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance covered while actively steering with a steerable drilling assembly.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance covered while actively steering with a steerable drilling assembly.")]
        public LengthMeasure DistSteering {
            get {
                return this.distSteeringField;
            }
            set {
                this.distSteeringField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total number of personnel on board.</summary>
        [System.ComponentModel.DescriptionAttribute("Total number of personnel on board.")]
        public int NumPob {
            get {
                return this.numPobField;
            }
            set {
                this.numPobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumPobSpecified {
            get {
                return this.numPobFieldSpecified;
            }
            set {
                this.numPobFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of contractor personnel on board.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of contractor personnel on board.")]
        public int NumContract {
            get {
                return this.numContractField;
            }
            set {
                this.numContractField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumContractSpecified {
            get {
                return this.numContractFieldSpecified;
            }
            set {
                this.numContractFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of Operator personnel on board.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of Operator personnel on board.")]
        public int NumOperator {
            get {
                return this.numOperatorField;
            }
            set {
                this.numOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumOperatorSpecified {
            get {
                return this.numOperatorFieldSpecified;
            }
            set {
                this.numOperatorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of service company personnel on board.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of service company personnel on board.")]
        public int NumService {
            get {
                return this.numServiceField;
            }
            set {
                this.numServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumServiceSpecified {
            get {
                return this.numServiceFieldSpecified;
            }
            set {
                this.numServiceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>AFE (authorization for expenditure) number that this cost item applies to.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("AFE (authorization for expenditure) number that this cost item applies to.")]
        public string NumAFE {
            get {
                return this.numAFEField;
            }
            set {
                this.numAFEField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole condition description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Hole condition description.")]
        public string ConditionHole {
            get {
                return this.conditionHoleField;
            }
            set {
                this.conditionHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth of leak off test point.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth of leak off test point.")]
        public WellVerticalDepthCoord TvdLot {
            get {
                return this.tvdLotField;
            }
            set {
                this.tvdLotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Leak off test equivalent mud weight.</summary>
        [System.ComponentModel.DescriptionAttribute("Leak off test equivalent mud weight.")]
        public MassPerVolumeMeasure PresLotEmw {
            get {
                return this.presLotEmwField;
            }
            set {
                this.presLotEmwField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Kick tolerance pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Kick tolerance pressure.")]
        public PressureMeasure PresKickTol {
            get {
                return this.presKickTolField;
            }
            set {
                this.presKickTolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Kick tolerance volume.</summary>
        [System.ComponentModel.DescriptionAttribute("Kick tolerance volume.")]
        public VolumeMeasure VolKickTol {
            get {
                return this.volKickTolField;
            }
            set {
                this.volKickTolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum allowable shut-in casing pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum allowable shut-in casing pressure.")]
        public PressureMeasure Maasp {
            get {
                return this.maaspField;
            }
            set {
                this.maaspField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the tubular (assembly) used in this report period. This represents a foreign key to tubular.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the tubular (assembly) used in this report period. This represents a" +
            " foreign key to tubular.")]
        public string Tubular {
            get {
                return this.tubularField;
            }
            set {
                this.tubularField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ParentWellbore")]
        public ObjectAlias[] ParentWellbore {
            get {
                return this.parentWellboreField;
            }
            set {
                this.parentWellboreField = value;
            }
        }
        
        /// <remarks/>
        public WellElevationCoord ElevKelly {
            get {
                return this.elevKellyField;
            }
            set {
                this.elevKellyField = value;
            }
        }
        
        /// <remarks/>
        public Cost CostDay {
            get {
                return this.costDayField;
            }
            set {
                this.costDayField = value;
            }
        }
        
        /// <remarks/>
        public Cost CostDayMud {
            get {
                return this.costDayMudField;
            }
            set {
                this.costDayMudField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum WellboreType {
        
        /// <remarks/>
        bypass,
        
        /// <remarks/>
        initial,
        
        /// <remarks/>
        redrill,
        
        /// <remarks/>
        reentry,
        
        /// <remarks/>
        respud,
        
        /// <remarks/>
        sidetrack,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum PresTestType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("leak off test")]
        leakofftest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation integrity test")]
        formationintegritytest,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class WellElevationCoord {
        
        private LengthUom uomField;
        
        private bool uomFieldSpecified;
        
        private string datumField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uomSpecified {
            get {
                return this.uomFieldSpecified;
            }
            set {
                this.uomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string datum {
            get {
                return this.datumField;
            }
            set {
                this.datumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillReportWellboreInfo {
        
        private string dTimSpudField;
        
        private string dTimPreSpudField;
        
        private System.DateTime dateDrillCompleteField;
        
        private bool dateDrillCompleteFieldSpecified;
        
        private string operatorField;
        
        private string drillContractorField;
        
        private ObjectAlias[] rigAliasField;
        
        /// <remarks/>
        /// <summary>Date and time at which the well was spudded.  This is when the well drilling equipment begin to bore into  the earth's surface for the purpose of drilling a well.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time at which the well was spudded.  This is when the well drilling equi" +
            "pment begin to bore into  the earth\'s surface for the purpose of drilling a well" +
            ".")]
        public string DTimSpud {
            get {
                return this.dTimSpudField;
            }
            set {
                this.dTimSpudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time at which the well was predrilled.  This is when the well drilling equipment begin to bore into  the earth's surface for the purpose of drilling a well.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time at which the well was predrilled.  This is when the well drilling e" +
            "quipment begin to bore into  the earth\'s surface for the purpose of drilling a w" +
            "ell.")]
        public string DTimPreSpud {
            get {
                return this.dTimPreSpudField;
            }
            set {
                this.dTimPreSpudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date when the drilling activity is completed.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date when the drilling activity is completed.")]
        public System.DateTime DateDrillComplete {
            get {
                return this.dateDrillCompleteField;
            }
            set {
                this.dateDrillCompleteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateDrillCompleteSpecified {
            get {
                return this.dateDrillCompleteFieldSpecified;
            }
            set {
                this.dateDrillCompleteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the drilling Operator company.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the drilling Operator company.")]
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the drilling Contractor company.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the drilling Contractor company.")]
        public string DrillContractor {
            get {
                return this.drillContractorField;
            }
            set {
                this.drillContractorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RigAlias")]
        public ObjectAlias[] RigAlias {
            get {
                return this.rigAliasField;
            }
            set {
                this.rigAliasField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillReportGasReadingInfo {
        
        private string dTimField;
        
        private GasPeakType readingTypeField;
        
        private bool readingTypeFieldSpecified;
        
        private MdInterval gasReadingMdIntervalField;
        
        private TvdInterval gasReadingTvdIntervalField;
        
        private VolumePerVolumeMeasure gasHighField;
        
        private VolumePerVolumeMeasure gasLowField;
        
        private VolumePerVolumeMeasure methField;
        
        private VolumePerVolumeMeasure ethField;
        
        private VolumePerVolumeMeasure propField;
        
        private VolumePerVolumeMeasure ibutField;
        
        private VolumePerVolumeMeasure nbutField;
        
        private VolumePerVolumeMeasure ipentField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time of the gas reading.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time of the gas reading.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of gas reading.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of gas reading.")]
        public GasPeakType ReadingType {
            get {
                return this.readingTypeField;
            }
            set {
                this.readingTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReadingTypeSpecified {
            get {
                return this.readingTypeFieldSpecified;
            }
            set {
                this.readingTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth interval over which the gas reading was conducted.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth interval over which the gas reading was conducted.")]
        public MdInterval GasReadingMdInterval {
            get {
                return this.gasReadingMdIntervalField;
            }
            set {
                this.gasReadingMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth interval over which the gas reading was conducted.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth interval over which the gas reading was conducted.")]
        public TvdInterval GasReadingTvdInterval {
            get {
                return this.gasReadingTvdIntervalField;
            }
            set {
                this.gasReadingTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The highest gas reading.</summary>
        [System.ComponentModel.DescriptionAttribute("The highest gas reading.")]
        public VolumePerVolumeMeasure GasHigh {
            get {
                return this.gasHighField;
            }
            set {
                this.gasHighField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The lowest gas reading.</summary>
        [System.ComponentModel.DescriptionAttribute("The lowest gas reading.")]
        public VolumePerVolumeMeasure GasLow {
            get {
                return this.gasLowField;
            }
            set {
                this.gasLowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Methane (C1) concentration.</summary>
        [System.ComponentModel.DescriptionAttribute("Methane (C1) concentration.")]
        public VolumePerVolumeMeasure Meth {
            get {
                return this.methField;
            }
            set {
                this.methField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ethane (C2) concentration.</summary>
        [System.ComponentModel.DescriptionAttribute("Ethane (C2) concentration.")]
        public VolumePerVolumeMeasure Eth {
            get {
                return this.ethField;
            }
            set {
                this.ethField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Propane (C3) concentration.</summary>
        [System.ComponentModel.DescriptionAttribute("Propane (C3) concentration.")]
        public VolumePerVolumeMeasure Prop {
            get {
                return this.propField;
            }
            set {
                this.propField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>iso-Butane (iC4) concentration.</summary>
        [System.ComponentModel.DescriptionAttribute("iso-Butane (iC4) concentration.")]
        public VolumePerVolumeMeasure Ibut {
            get {
                return this.ibutField;
            }
            set {
                this.ibutField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>nor-Butane (nC4) concentration.</summary>
        [System.ComponentModel.DescriptionAttribute("nor-Butane (nC4) concentration.")]
        public VolumePerVolumeMeasure Nbut {
            get {
                return this.nbutField;
            }
            set {
                this.nbutField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>iso-Pentane (iC5) concentration.</summary>
        [System.ComponentModel.DescriptionAttribute("iso-Pentane (iC5) concentration.")]
        public VolumePerVolumeMeasure Ipent {
            get {
                return this.ipentField;
            }
            set {
                this.ipentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum GasPeakType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("circulating background gas")]
        circulatingbackgroundgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("connection gas")]
        connectiongas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling background gas")]
        drillingbackgroundgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling gas peak")]
        drillinggaspeak,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flow check gas")]
        flowcheckgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("no readings")]
        noreadings,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shut down gas")]
        shutdowngas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("trip gas")]
        tripgas,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillReportPerfInfo {
        
        private string dTimOpenField;
        
        private string dTimCloseField;
        
        private MdInterval perforationMdIntervalField;
        
        private TvdInterval perforationTvdIntervalField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The date and time at which the well perforation interval is opened.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The date and time at which the well perforation interval is opened.")]
        public string DTimOpen {
            get {
                return this.dTimOpenField;
            }
            set {
                this.dTimOpenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time at which the well perforation interval is closed.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The date and time at which the well perforation interval is closed.")]
        public string DTimClose {
            get {
                return this.dTimCloseField;
            }
            set {
                this.dTimCloseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth interval between the top and the base of the perforations.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth interval between the top and the base of the perforations.")]
        public MdInterval PerforationMdInterval {
            get {
                return this.perforationMdIntervalField;
            }
            set {
                this.perforationMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth interval between the top and the base of the perforations.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth interval between the top and the base of the perforations.")]
        public TvdInterval PerforationTvdInterval {
            get {
                return this.perforationTvdIntervalField;
            }
            set {
                this.perforationTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillReportStratInfo {
        
        private string dTimField;
        
        private MeasuredDepthCoord mdTopField;
        
        private WellVerticalDepthCoord tvdTopField;
        
        private string descriptionField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time at which a preliminary zonation is established.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time at which a preliminary zonation is established.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at the top of the formation.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at the top of the formation.")]
        public MeasuredDepthCoord MdTop {
            get {
                return this.mdTopField;
            }
            set {
                this.mdTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth at the top of the formation.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth at the top of the formation.")]
        public WellVerticalDepthCoord TvdTop {
            get {
                return this.tvdTopField;
            }
            set {
                this.tvdTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A lithological description of the geological formation at the given depth.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A lithological description of the geological formation at the given depth.")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillReportControlIncidentInfo {
        
        private string dTimField;
        
        private MeasuredDepthCoord mdInflowField;
        
        private WellVerticalDepthCoord tvdInflowField;
        
        private string phaseField;
        
        private string activityCodeField;
        
        private string detailActivityField;
        
        private TimeMeasure eTimLostField;
        
        private string dTimRegainedField;
        
        private LengthMeasure diaBitField;
        
        private MeasuredDepthCoord mdBitField;
        
        private MassPerVolumeMeasure wtMudField;
        
        private MassPerVolumeMeasure porePressureField;
        
        private LengthMeasure diaCsgLastField;
        
        private MeasuredDepthCoord mdCsgLastField;
        
        private VolumeMeasure volMudGainedField;
        
        private PressureMeasure presShutInCasingField;
        
        private PressureMeasure presShutInDrillField;
        
        private WellControlIncidentType incidentTypeField;
        
        private bool incidentTypeFieldSpecified;
        
        private WellKillingProcedureType killingTypeField;
        
        private bool killingTypeFieldSpecified;
        
        private string formationField;
        
        private ThermodynamicTemperatureMeasure tempBottomField;
        
        private PressureMeasure presMaxChokeField;
        
        private string descriptionField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private ObjectAlias[] proprietaryCodeField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time of the well control incident.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time of the well control incident.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth to the well inflow entry point.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth to the well inflow entry point.")]
        public MeasuredDepthCoord MdInflow {
            get {
                return this.mdInflowField;
            }
            set {
                this.mdInflowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The true vertical depth to the well inflow entery point.</summary>
        [System.ComponentModel.DescriptionAttribute("The true vertical depth to the well inflow entery point.")]
        public WellVerticalDepthCoord TvdInflow {
            get {
                return this.tvdInflowField;
            }
            set {
                this.tvdInflowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Phase (large activity classification) e.g. Drill Surface Hole.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Phase (large activity classification) e.g. Drill Surface Hole.")]
        public string Phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A code used to define rig activity.</summary>
        [System.ComponentModel.DescriptionAttribute("A code used to define rig activity.")]
        public string ActivityCode {
            get {
                return this.activityCodeField;
            }
            set {
                this.activityCodeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Custom string to further define an activity.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Custom string to further define an activity.")]
        public string DetailActivity {
            get {
                return this.detailActivityField;
            }
            set {
                this.detailActivityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The amount of time lost because of the well control incident. Commonly specified in hours.</summary>
        [System.ComponentModel.DescriptionAttribute("The amount of time lost because of the well control incident. Commonly specified " +
            "in hours.")]
        public TimeMeasure ETimLost {
            get {
                return this.eTimLostField;
            }
            set {
                this.eTimLostField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time at which control of the well is regained.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The date and time at which control of the well is regained.")]
        public string DTimRegained {
            get {
                return this.dTimRegainedField;
            }
            set {
                this.dTimRegainedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The drill bit nominal outside diameter at time of well control incident.</summary>
        [System.ComponentModel.DescriptionAttribute("The drill bit nominal outside diameter at time of well control incident.")]
        public LengthMeasure DiaBit {
            get {
                return this.diaBitField;
            }
            set {
                this.diaBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth of bit at the time of the well control incident.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth of bit at the time of the well control incident.")]
        public MeasuredDepthCoord MdBit {
            get {
                return this.mdBitField;
            }
            set {
                this.mdBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of the drilling fluid.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of the drilling fluid.")]
        public MassPerVolumeMeasure WtMud {
            get {
                return this.wtMudField;
            }
            set {
                this.wtMudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The equivalent mud weight value of the pore pressure reading.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The equivalent mud weight value of the pore pressure reading.")]
        public MassPerVolumeMeasure PorePressure {
            get {
                return this.porePressureField;
            }
            set {
                this.porePressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of the last installed casing.</summary>
        [System.ComponentModel.DescriptionAttribute("Diameter of the last installed casing.")]
        public LengthMeasure DiaCsgLast {
            get {
                return this.diaCsgLastField;
            }
            set {
                this.diaCsgLastField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of last casing.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of last casing.")]
        public MeasuredDepthCoord MdCsgLast {
            get {
                return this.mdCsgLastField;
            }
            set {
                this.mdCsgLastField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The gained volume of drilling fluid due to well kick.</summary>
        [System.ComponentModel.DescriptionAttribute("The gained volume of drilling fluid due to well kick.")]
        public VolumeMeasure VolMudGained {
            get {
                return this.volMudGainedField;
            }
            set {
                this.volMudGainedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The shut in casing pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The shut in casing pressure.")]
        public PressureMeasure PresShutInCasing {
            get {
                return this.presShutInCasingField;
            }
            set {
                this.presShutInCasingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The actual pressure in the drill pipe when the rams are closed around it.</summary>
        [System.ComponentModel.DescriptionAttribute("The actual pressure in the drill pipe when the rams are closed around it.")]
        public PressureMeasure PresShutInDrill {
            get {
                return this.presShutInDrillField;
            }
            set {
                this.presShutInDrillField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of well control incident.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of well control incident.")]
        public WellControlIncidentType IncidentType {
            get {
                return this.incidentTypeField;
            }
            set {
                this.incidentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncidentTypeSpecified {
            get {
                return this.incidentTypeFieldSpecified;
            }
            set {
                this.incidentTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of well control incident.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of well control incident.")]
        public WellKillingProcedureType KillingType {
            get {
                return this.killingTypeField;
            }
            set {
                this.killingTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KillingTypeSpecified {
            get {
                return this.killingTypeFieldSpecified;
            }
            set {
                this.killingTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The lithological description of a geological formation at the incident depth.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("The lithological description of a geological formation at the incident depth.")]
        public string Formation {
            get {
                return this.formationField;
            }
            set {
                this.formationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>the temperature at the bottom of the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("the temperature at the bottom of the wellbore.")]
        public ThermodynamicTemperatureMeasure TempBottom {
            get {
                return this.tempBottomField;
            }
            set {
                this.tempBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum pressure that the choke valve can be exposed to.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum pressure that the choke valve can be exposed to.")]
        public PressureMeasure PresMaxChoke {
            get {
                return this.presMaxChokeField;
            }
            set {
                this.presMaxChokeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A description of the well control incident.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A description of the well control incident.")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ProprietaryCode")]
        public ObjectAlias[] ProprietaryCode {
            get {
                return this.proprietaryCodeField;
            }
            set {
                this.proprietaryCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum WellControlIncidentType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow gas kick")]
        shallowgaskick,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water kick")]
        waterkick,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil kick")]
        oilkick,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas kick")]
        gaskick,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum WellKillingProcedureType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drillers method")]
        drillersmethod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wait and weight")]
        waitandweight,
        
        /// <remarks/>
        bullheading,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lubricate and bleed")]
        lubricateandbleed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("forward circulation")]
        forwardcirculation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reverse circulation")]
        reversecirculation,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillReportEquipFailureInfo {
        
        private string dTimField;
        
        private MeasuredDepthCoord mdField;
        
        private WellVerticalDepthCoord tvdField;
        
        private string equipClassField;
        
        private TimeMeasure eTimMissProductionField;
        
        private string dTimRepairField;
        
        private string descriptionField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time that the equipment failed.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time that the equipment failed.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth to the operation end point due to failure.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth to the operation end point due to failure.")]
        public MeasuredDepthCoord Md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The true vertical depth to the operation end point due to failure.</summary>
        [System.ComponentModel.DescriptionAttribute("The true vertical depth to the operation end point due to failure.")]
        public WellVerticalDepthCoord Tvd {
            get {
                return this.tvdField;
            }
            set {
                this.tvdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The classification of the equipment that failed.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The classification of the equipment that failed.")]
        public string EquipClass {
            get {
                return this.equipClassField;
            }
            set {
                this.equipClassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The missed production time due to equipment failure.</summary>
        [System.ComponentModel.DescriptionAttribute("The missed production time due to equipment failure.")]
        public TimeMeasure ETimMissProduction {
            get {
                return this.eTimMissProductionField;
            }
            set {
                this.eTimMissProductionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time at which the production equipment was  repaired and ready for production.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The date and time at which the production equipment was  repaired and ready for p" +
            "roduction.")]
        public string DTimRepair {
            get {
                return this.dTimRepairField;
            }
            set {
                this.dTimRepairField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A description that gives a information about the equipment failure.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A description that gives a information about the equipment failure.")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillReportLithShowInfo {
        
        private string dTimField;
        
        private MdInterval showMdIntervalField;
        
        private TvdInterval showTvdIntervalField;
        
        private string showField;
        
        private string lithologyField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time that the well test was completed.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time that the well test was completed.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth interval over which the show appears.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth interval over which the show appears.")]
        public MdInterval ShowMdInterval {
            get {
                return this.showMdIntervalField;
            }
            set {
                this.showMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth interval over which the show appears.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth interval over which the show appears.")]
        public TvdInterval ShowTvdInterval {
            get {
                return this.showTvdIntervalField;
            }
            set {
                this.showTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual description of any shows in the interval.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A textual description of any shows in the interval.")]
        public string Show {
            get {
                return this.showField;
            }
            set {
                this.showField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A description that gives a geological/lithological  description/evaluation of the interval.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A description that gives a geological/lithological  description/evaluation of the" +
            " interval.")]
        public string Lithology {
            get {
                return this.lithologyField;
            }
            set {
                this.lithologyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillReportFormTestInfo {
        
        private string dTimField;
        
        private MeasuredDepthCoord mdField;
        
        private WellVerticalDepthCoord tvdField;
        
        private PressureMeasure presPoreField;
        
        private bool goodSealField;
        
        private bool goodSealFieldSpecified;
        
        private MeasuredDepthCoord mdSampleField;
        
        private string dominateComponentField;
        
        private MassPerVolumeMeasure densityHCField;
        
        private VolumeMeasure volumeSampleField;
        
        private string descriptionField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time that the wireline formation test was completed.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time that the wireline formation test was completed.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of the wireline formation test.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of the wireline formation test.")]
        public MeasuredDepthCoord Md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth of the wireline formation test.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth of the wireline formation test.")]
        public WellVerticalDepthCoord Tvd {
            get {
                return this.tvdField;
            }
            set {
                this.tvdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The formation pore pressure. The pressure of fluids within the pores of a reservoir, usually hydrostatic pressure,  or the pressure exerted by a column of water from the formation's depth to sea level.</summary>
        [System.ComponentModel.DescriptionAttribute("The formation pore pressure. The pressure of fluids within the pores of a reservo" +
            "ir, usually hydrostatic pressure,  or the pressure exerted by a column of water " +
            "from the formation\'s depth to sea level.")]
        public PressureMeasure PresPore {
            get {
                return this.presPoreField;
            }
            set {
                this.presPoreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True ("true" or "1") indicates that there was a good seal for the wireline formation test. False ("false" or "0") or not given indicates otherwise.</summary>
        [System.ComponentModel.DescriptionAttribute("True (\"true\" or \"1\") indicates that there was a good seal for the wireline format" +
            "ion test. False (\"false\" or \"0\") or not given indicates otherwise.")]
        public bool GoodSeal {
            get {
                return this.goodSealField;
            }
            set {
                this.goodSealField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoodSealSpecified {
            get {
                return this.goodSealFieldSpecified;
            }
            set {
                this.goodSealFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth where the fluid sample was taken.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth where the fluid sample was taken.")]
        public MeasuredDepthCoord MdSample {
            get {
                return this.mdSampleField;
            }
            set {
                this.mdSampleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The dominate component in the fluid sample.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The dominate component in the fluid sample.")]
        public string DominateComponent {
            get {
                return this.dominateComponentField;
            }
            set {
                this.dominateComponentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of hydrocarbon component of the fluid sample.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of hydrocarbon component of the fluid sample.")]
        public MassPerVolumeMeasure DensityHC {
            get {
                return this.densityHCField;
            }
            set {
                this.densityHCField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume of the fluid sample.</summary>
        [System.ComponentModel.DescriptionAttribute("The volume of the fluid sample.")]
        public VolumeMeasure VolumeSample {
            get {
                return this.volumeSampleField;
            }
            set {
                this.volumeSampleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A description that describes the wireline formation test in more detail.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A description that describes the wireline formation test in more detail.")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillReportWellTestInfo {
        
        private string dTimField;
        
        private WellTestType testTypeField;
        
        private bool testTypeFieldSpecified;
        
        private int testNumberField;
        
        private bool testNumberFieldSpecified;
        
        private MdInterval testMdIntervalField;
        
        private TvdInterval testTvdIntervalField;
        
        private LengthMeasure chokeOrificeSizeField;
        
        private MassPerVolumeMeasure densityOilField;
        
        private MassPerVolumeMeasure densityWaterField;
        
        private MassPerVolumeMeasure densityGasField;
        
        private VolumePerTimeMeasure flowRateOilField;
        
        private VolumePerTimeMeasure flowRateWaterField;
        
        private VolumePerTimeMeasure flowRateGasField;
        
        private PressureMeasure presShutInField;
        
        private PressureMeasure presFlowingField;
        
        private PressureMeasure presBottomField;
        
        private VolumePerVolumeMeasure gasOilRatioField;
        
        private VolumePerVolumeMeasure waterOilRatioField;
        
        private MassPerMassMeasure chlorideField;
        
        private MassPerMassMeasure carbonDioxideField;
        
        private MassPerMassMeasure hydrogenSulfideField;
        
        private VolumeMeasure volOilTotalField;
        
        private VolumeMeasure volGasTotalField;
        
        private VolumeMeasure volWaterTotalField;
        
        private VolumeMeasure volOilStoredField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time that the well test was completed.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time that the well test was completed.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of well test.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of well test.")]
        public WellTestType TestType {
            get {
                return this.testTypeField;
            }
            set {
                this.testTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TestTypeSpecified {
            get {
                return this.testTypeFieldSpecified;
            }
            set {
                this.testTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("The number of the well test.")]
        public int TestNumber {
            get {
                return this.testNumberField;
            }
            set {
                this.testNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TestNumberSpecified {
            get {
                return this.testNumberFieldSpecified;
            }
            set {
                this.testNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test interval expressed as measured depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Test interval expressed as measured depth.")]
        public MdInterval TestMdInterval {
            get {
                return this.testMdIntervalField;
            }
            set {
                this.testMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test interval expressed as true vertical depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Test interval expressed as true vertical depth.")]
        public TvdInterval TestTvdInterval {
            get {
                return this.testTvdIntervalField;
            }
            set {
                this.testTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The diameter of the choke opening.</summary>
        [System.ComponentModel.DescriptionAttribute("The diameter of the choke opening.")]
        public LengthMeasure ChokeOrificeSize {
            get {
                return this.chokeOrificeSizeField;
            }
            set {
                this.chokeOrificeSizeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of the produced oil.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of the produced oil.")]
        public MassPerVolumeMeasure DensityOil {
            get {
                return this.densityOilField;
            }
            set {
                this.densityOilField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of the produced water.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of the produced water.")]
        public MassPerVolumeMeasure DensityWater {
            get {
                return this.densityWaterField;
            }
            set {
                this.densityWaterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of the produced gas.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of the produced gas.")]
        public MassPerVolumeMeasure DensityGas {
            get {
                return this.densityGasField;
            }
            set {
                this.densityGasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum rate at which oil was produced.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum rate at which oil was produced.")]
        public VolumePerTimeMeasure FlowRateOil {
            get {
                return this.flowRateOilField;
            }
            set {
                this.flowRateOilField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum rate at which water was produced.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum rate at which water was produced.")]
        public VolumePerTimeMeasure FlowRateWater {
            get {
                return this.flowRateWaterField;
            }
            set {
                this.flowRateWaterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum rate at which gas was produced.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum rate at which gas was produced.")]
        public VolumePerTimeMeasure FlowRateGas {
            get {
                return this.flowRateGasField;
            }
            set {
                this.flowRateGasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The final shut in pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The final shut in pressure.")]
        public PressureMeasure PresShutIn {
            get {
                return this.presShutInField;
            }
            set {
                this.presShutInField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The final flowing pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The final flowing pressure.")]
        public PressureMeasure PresFlowing {
            get {
                return this.presFlowingField;
            }
            set {
                this.presFlowingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The final bottom hole pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The final bottom hole pressure.")]
        public PressureMeasure PresBottom {
            get {
                return this.presBottomField;
            }
            set {
                this.presBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The ratio of the volume of gas to the volume of oil.</summary>
        [System.ComponentModel.DescriptionAttribute("The ratio of the volume of gas to the volume of oil.")]
        public VolumePerVolumeMeasure GasOilRatio {
            get {
                return this.gasOilRatioField;
            }
            set {
                this.gasOilRatioField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The relative amount of water per amount of oil.</summary>
        [System.ComponentModel.DescriptionAttribute("The relative amount of water per amount of oil.")]
        public VolumePerVolumeMeasure WaterOilRatio {
            get {
                return this.waterOilRatioField;
            }
            set {
                this.waterOilRatioField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The relative amount of chloride in the produced water.</summary>
        [System.ComponentModel.DescriptionAttribute("The relative amount of chloride in the produced water.")]
        public MassPerMassMeasure Chloride {
            get {
                return this.chlorideField;
            }
            set {
                this.chlorideField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The relative amount of CO2 gas.</summary>
        [System.ComponentModel.DescriptionAttribute("The relative amount of CO2 gas.")]
        public MassPerMassMeasure CarbonDioxide {
            get {
                return this.carbonDioxideField;
            }
            set {
                this.carbonDioxideField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The relative amount of H2S gas.</summary>
        [System.ComponentModel.DescriptionAttribute("The relative amount of H2S gas.")]
        public MassPerMassMeasure HydrogenSulfide {
            get {
                return this.hydrogenSulfideField;
            }
            set {
                this.hydrogenSulfideField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The total amount of oil produced. This includes oil that was disposed of (e.g., burned).</summary>
        [System.ComponentModel.DescriptionAttribute("The total amount of oil produced. This includes oil that was disposed of (e.g., b" +
            "urned).")]
        public VolumeMeasure VolOilTotal {
            get {
                return this.volOilTotalField;
            }
            set {
                this.volOilTotalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The total amount of gas produced. This includes gas that was disposed of (e.g., burned).</summary>
        [System.ComponentModel.DescriptionAttribute("The total amount of gas produced. This includes gas that was disposed of (e.g., b" +
            "urned).")]
        public VolumeMeasure VolGasTotal {
            get {
                return this.volGasTotalField;
            }
            set {
                this.volGasTotalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The total amount of water produced. This includes water that was disposed of.</summary>
        [System.ComponentModel.DescriptionAttribute("The total amount of water produced. This includes water that was disposed of.")]
        public VolumeMeasure VolWaterTotal {
            get {
                return this.volWaterTotalField;
            }
            set {
                this.volWaterTotalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The total amount of produced oil that was stored.</summary>
        [System.ComponentModel.DescriptionAttribute("The total amount of produced oil that was stored.")]
        public VolumeMeasure VolOilStored {
            get {
                return this.volOilStoredField;
            }
            set {
                this.volOilStoredField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum WellTestType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill stem test")]
        drillstemtest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("production test")]
        productiontest,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillReportCoreInfo {
        
        private string dTimField;
        
        private string coreNumberField;
        
        private MdInterval coredMdIntervalField;
        
        private TvdInterval coredTvdIntervalField;
        
        private LengthMeasure lenRecoveredField;
        
        private VolumePerVolumeMeasure recoverPcField;
        
        private LengthMeasure lenBarrelField;
        
        private InnerBarrelType innerBarrelTypeField;
        
        private bool innerBarrelTypeFieldSpecified;
        
        private string coreDescriptionField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time that the core was completed.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time that the core was completed.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Core identification number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Core identification number.")]
        public string CoreNumber {
            get {
                return this.coreNumberField;
            }
            set {
                this.coreNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cored interval expressed as measured depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Cored interval expressed as measured depth.")]
        public MdInterval CoredMdInterval {
            get {
                return this.coredMdIntervalField;
            }
            set {
                this.coredMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cored interval expressed as true vertical depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Cored interval expressed as true vertical depth.")]
        public TvdInterval CoredTvdInterval {
            get {
                return this.coredTvdIntervalField;
            }
            set {
                this.coredTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of core recovered.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of core recovered.")]
        public LengthMeasure LenRecovered {
            get {
                return this.lenRecoveredField;
            }
            set {
                this.lenRecoveredField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The relative amount of core recovered.</summary>
        [System.ComponentModel.DescriptionAttribute("The relative amount of core recovered.")]
        public VolumePerVolumeMeasure RecoverPc {
            get {
                return this.recoverPcField;
            }
            set {
                this.recoverPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of core barrel.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of core barrel.")]
        public LengthMeasure LenBarrel {
            get {
                return this.lenBarrelField;
            }
            set {
                this.lenBarrelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Core inner barrel type.</summary>
        [System.ComponentModel.DescriptionAttribute("Core inner barrel type.")]
        public InnerBarrelType InnerBarrelType {
            get {
                return this.innerBarrelTypeField;
            }
            set {
                this.innerBarrelTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InnerBarrelTypeSpecified {
            get {
                return this.innerBarrelTypeFieldSpecified;
            }
            set {
                this.innerBarrelTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>General core description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("General core description.")]
        public string CoreDescription {
            get {
                return this.coreDescriptionField;
            }
            set {
                this.coreDescriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum InnerBarrelType {
        
        /// <remarks/>
        undifferented,
        
        /// <remarks/>
        aluminum,
        
        /// <remarks/>
        gel,
        
        /// <remarks/>
        fiberglass,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BottomHoleStaticTemperature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BottomHoleCirculatingTemperature))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public abstract partial class AbstractBottomHoleTemperature {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class BottomHoleStaticTemperature : AbstractBottomHoleTemperature {
        
        private TimeMeasure eTimStaticField;
        
        /// <remarks/>
        public TimeMeasure eTimStatic {
            get {
                return this.eTimStaticField;
            }
            set {
                this.eTimStaticField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class BottomHoleCirculatingTemperature : AbstractBottomHoleTemperature {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillReportLogInfo {
        
        private string dTimField;
        
        private string runNumberField;
        
        private string serviceCompanyField;
        
        private MdInterval loggedMdIntervalField;
        
        private TvdInterval loggedTvdIntervalField;
        
        private string toolField;
        
        private MeasuredDepthCoord mdTempToolField;
        
        private WellVerticalDepthCoord tvdTempToolField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private AbstractBottomHoleTemperature bottomHoleTemperatureField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The date and time that the log was completed.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The date and time that the log was completed.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Log run number.  For measurement while drilling, this should be the  bottom hole assembly number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Log run number.  For measurement while drilling, this should be the  bottom hole " +
            "assembly number.")]
        public string RunNumber {
            get {
                return this.runNumberField;
            }
            set {
                this.runNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of contractor who provided the service.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of contractor who provided the service.")]
        public string ServiceCompany {
            get {
                return this.serviceCompanyField;
            }
            set {
                this.serviceCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth interval from the top to the base of the interval logged.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth interval from the top to the base of the interval logged.")]
        public MdInterval LoggedMdInterval {
            get {
                return this.loggedMdIntervalField;
            }
            set {
                this.loggedMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth interval from the top to the base of the interval logged.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth interval from the top to the base of the interval logged.")]
        public TvdInterval LoggedTvdInterval {
            get {
                return this.loggedTvdIntervalField;
            }
            set {
                this.loggedTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A description of the logging tool.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A description of the logging tool.")]
        public string Tool {
            get {
                return this.toolField;
            }
            set {
                this.toolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth to the temperature measurement tool.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth to the temperature measurement tool.")]
        public MeasuredDepthCoord MdTempTool {
            get {
                return this.mdTempToolField;
            }
            set {
                this.mdTempToolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth to the temperature measurement tool.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth to the temperature measurement tool.")]
        public WellVerticalDepthCoord TvdTempTool {
            get {
                return this.tvdTempToolField;
            }
            set {
                this.tvdTempToolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public AbstractBottomHoleTemperature BottomHoleTemperature {
            get {
                return this.bottomHoleTemperatureField;
            }
            set {
                this.bottomHoleTemperatureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class DrillActivity {
        
        private string dTimStartField;
        
        private string dTimEndField;
        
        private TimeMeasure durationField;
        
        private MeasuredDepthCoord mdField;
        
        private WellVerticalDepthCoord tvdField;
        
        private string phaseField;
        
        private string activityCodeField;
        
        private string detailActivityField;
        
        private DrillActivityClassType typeActivityClassField;
        
        private bool typeActivityClassFieldSpecified;
        
        private MdInterval activityMdIntervalField;
        
        private TvdInterval activityTvdIntervalField;
        
        private MdInterval bitMdIntervalField;
        
        private string stateField;
        
        private StateDetailActivity stateDetailActivityField;
        
        private bool stateDetailActivityFieldSpecified;
        
        private string operatorField;
        
        private string tubularField;
        
        private bool optimumField;
        
        private bool optimumFieldSpecified;
        
        private bool productiveField;
        
        private bool productiveFieldSpecified;
        
        private ItemState itemStateField;
        
        private bool itemStateFieldSpecified;
        
        private string commentsField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private ObjectAlias[] proprietaryCodeField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time that activities started.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time that activities started.")]
        public string DTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time that activities were completed.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time that activities were completed.")]
        public string DTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The activity duration (commonly in hours).</summary>
        [System.ComponentModel.DescriptionAttribute("The activity duration (commonly in hours).")]
        public TimeMeasure Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth to the drilling operation.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth to the drilling operation.")]
        public MeasuredDepthCoord Md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True Vertical Depth to the drilling operation.</summary>
        [System.ComponentModel.DescriptionAttribute("True Vertical Depth to the drilling operation.")]
        public WellVerticalDepthCoord Tvd {
            get {
                return this.tvdField;
            }
            set {
                this.tvdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Phase (large activity classification) e.g. Drill Surface Hole.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Phase (large activity classification) e.g. Drill Surface Hole.")]
        public string Phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A code used to define rig activity.</summary>
        [System.ComponentModel.DescriptionAttribute("A code used to define rig activity.")]
        public string ActivityCode {
            get {
                return this.activityCodeField;
            }
            set {
                this.activityCodeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Custom string to further define an activity.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Custom string to further define an activity.")]
        public string DetailActivity {
            get {
                return this.detailActivityField;
            }
            set {
                this.detailActivityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Classifier (Planned, Unplanned, Downtime).</summary>
        [System.ComponentModel.DescriptionAttribute("Classifier (Planned, Unplanned, Downtime).")]
        public DrillActivityClassType TypeActivityClass {
            get {
                return this.typeActivityClassField;
            }
            set {
                this.typeActivityClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeActivityClassSpecified {
            get {
                return this.typeActivityClassFieldSpecified;
            }
            set {
                this.typeActivityClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth interval over which the activity was conducted.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth interval over which the activity was conducted.")]
        public MdInterval ActivityMdInterval {
            get {
                return this.activityMdIntervalField;
            }
            set {
                this.activityMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth interval over which the activity was conducted.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth interval over which the activity was conducted.")]
        public TvdInterval ActivityTvdInterval {
            get {
                return this.activityTvdIntervalField;
            }
            set {
                this.activityTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Range of bit measured depths over which the activity occurred.</summary>
        [System.ComponentModel.DescriptionAttribute("Range of bit measured depths over which the activity occurred.")]
        public MdInterval BitMdInterval {
            get {
                return this.bitMdIntervalField;
            }
            set {
                this.bitMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Finish, interrupted, failed, etc.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Finish, interrupted, failed, etc.")]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The outcome of the detailed activity.</summary>
        [System.ComponentModel.DescriptionAttribute("The outcome of the detailed activity.")]
        public StateDetailActivity StateDetailActivity {
            get {
                return this.stateDetailActivityField;
            }
            set {
                this.stateDetailActivityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateDetailActivitySpecified {
            get {
                return this.stateDetailActivityFieldSpecified;
            }
            set {
                this.stateDetailActivityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Operator company name.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Operator company name.")]
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the tubular related to this activity.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the tubular related to this activity.")]
        public string Tubular {
            get {
                return this.tubularField;
            }
            set {
                this.tubularField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is the activity optimum.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is the activity optimum.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool Optimum {
            get {
                return this.optimumField;
            }
            set {
                this.optimumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OptimumSpecified {
            get {
                return this.optimumFieldSpecified;
            }
            set {
                this.optimumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Does activity bring closer to objective.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Does activity bring closer to objective.  Values are \"true\" (or \"1\") and \"false\" " +
            "(or \"0\").")]
        public bool Productive {
            get {
                return this.productiveField;
            }
            set {
                this.productiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductiveSpecified {
            get {
                return this.productiveFieldSpecified;
            }
            set {
                this.productiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The item state for the data object.</summary>
        [System.ComponentModel.DescriptionAttribute("The item state for the data object.")]
        public ItemState ItemState {
            get {
                return this.itemStateField;
            }
            set {
                this.itemStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemStateSpecified {
            get {
                return this.itemStateFieldSpecified;
            }
            set {
                this.itemStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and Remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Comments and Remarks.")]
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ProprietaryCode")]
        public ObjectAlias[] ProprietaryCode {
            get {
                return this.proprietaryCodeField;
            }
            set {
                this.proprietaryCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum DrillActivityClassType {
        
        /// <remarks/>
        planned,
        
        /// <remarks/>
        unplanned,
        
        /// <remarks/>
        downtime,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum StateDetailActivity {
        
        /// <remarks/>
        injury,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("operation failed")]
        operationfailed,
        
        /// <remarks/>
        kick,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("circulation loss")]
        circulationloss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud loss")]
        mudloss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stuck equipment")]
        stuckequipment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("equipment failure")]
        equipmentfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("equipment hang")]
        equipmenthang,
        
        /// <remarks/>
        success,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ItemState {
        
        /// <remarks/>
        actual,
        
        /// <remarks/>
        model,
        
        /// <remarks/>
        plan,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Nozzle {
        
        private int indexField;
        
        private bool indexFieldSpecified;
        
        private LengthMeasure diaNozzleField;
        
        private NozzleType typeNozzleField;
        
        private bool typeNozzleFieldSpecified;
        
        private LengthMeasure lenField;
        
        private string orientationField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Index if this is an indexed object.</summary>
        [System.ComponentModel.DescriptionAttribute("Index if this is an indexed object.")]
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Nozzle diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Nozzle diameter.")]
        public LengthMeasure DiaNozzle {
            get {
                return this.diaNozzleField;
            }
            set {
                this.diaNozzleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Nozzle type.</summary>
        [System.ComponentModel.DescriptionAttribute("Nozzle type.")]
        public NozzleType TypeNozzle {
            get {
                return this.typeNozzleField;
            }
            set {
                this.typeNozzleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeNozzleSpecified {
            get {
                return this.typeNozzleFieldSpecified;
            }
            set {
                this.typeNozzleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of the nozzle.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of the nozzle.")]
        public LengthMeasure Len {
            get {
                return this.lenField;
            }
            set {
                this.lenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Nozzle orientation.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Nozzle orientation.")]
        public string Orientation {
            get {
                return this.orientationField;
            }
            set {
                this.orientationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum NozzleType {
        
        /// <remarks/>
        extended,
        
        /// <remarks/>
        normal,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BendOffset))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BendAngle))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public abstract partial class AbstractRotarySteerableTool {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class BendOffset : AbstractRotarySteerableTool {
        
        private LengthMeasure bendOffset1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BendOffset")]
        public LengthMeasure BendOffset1 {
            get {
                return this.bendOffset1Field;
            }
            set {
                this.bendOffset1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class BendAngle : AbstractRotarySteerableTool {
        
        private PlaneAngleMeasure bendAngle1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BendAngle")]
        public PlaneAngleMeasure BendAngle1 {
            get {
                return this.bendAngle1Field;
            }
            set {
                this.bendAngle1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class RotarySteerableTool {
        
        private DeflectionMethod deflectionMethodField;
        
        private LengthMeasure holeSizeMnField;
        
        private LengthMeasure holeSizeMxField;
        
        private ForceMeasure wobMxField;
        
        private AngularVelocityMeasure operatingSpeedField;
        
        private AngularVelocityMeasure speedMxField;
        
        private VolumePerTimeMeasure flowRateMnField;
        
        private VolumePerTimeMeasure flowRateMxField;
        
        private VolumePerTimeMeasure downLinkFlowRateMnField;
        
        private VolumePerTimeMeasure downLinkFlowRateMxField;
        
        private double pressLossFactField;
        
        private bool pressLossFactFieldSpecified;
        
        private int padCountField;
        
        private bool padCountFieldSpecified;
        
        private LengthMeasure padLenField;
        
        private LengthMeasure padWidthField;
        
        private LengthMeasure padOffsetField;
        
        private LengthMeasure openPadOdField;
        
        private LengthMeasure closePadOdField;
        
        private AbstractRotarySteerableTool abstractRotarySteerableToolField;
        
        private Sensor[] sensorField;
        
        private PlaneAngleMeasure bendAngleField;
        
        private LengthMeasure bendOffsetField;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        /// <summary>Method used to direct the deviation of the trajectory: PointBit or PushBit.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Method used to direct the deviation of the trajectory: PointBit or PushBit.")]
        public DeflectionMethod DeflectionMethod {
            get {
                return this.deflectionMethodField;
            }
            set {
                this.deflectionMethodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum size of hole in which the tool can operate.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum size of hole in which the tool can operate.")]
        public LengthMeasure HoleSizeMn {
            get {
                return this.holeSizeMnField;
            }
            set {
                this.holeSizeMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum size of hole in which the tool can operate.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum size of hole in which the tool can operate.")]
        public LengthMeasure HoleSizeMx {
            get {
                return this.holeSizeMxField;
            }
            set {
                this.holeSizeMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum weight on the bit.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum weight on the bit.")]
        public ForceMeasure WobMx {
            get {
                return this.wobMxField;
            }
            set {
                this.wobMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Suggested operating speed.</summary>
        [System.ComponentModel.DescriptionAttribute("Suggested operating speed.")]
        public AngularVelocityMeasure OperatingSpeed {
            get {
                return this.operatingSpeedField;
            }
            set {
                this.operatingSpeedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum rotation speed.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum rotation speed.")]
        public AngularVelocityMeasure SpeedMx {
            get {
                return this.speedMxField;
            }
            set {
                this.speedMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum flow rate for tool operation.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum flow rate for tool operation.")]
        public VolumePerTimeMeasure FlowRateMn {
            get {
                return this.flowRateMnField;
            }
            set {
                this.flowRateMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum flow rate for tool operation.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum flow rate for tool operation.")]
        public VolumePerTimeMeasure FlowRateMx {
            get {
                return this.flowRateMxField;
            }
            set {
                this.flowRateMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum flow rate for programming tool.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum flow rate for programming tool.")]
        public VolumePerTimeMeasure DownLinkFlowRateMn {
            get {
                return this.downLinkFlowRateMnField;
            }
            set {
                this.downLinkFlowRateMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum flow rate for programming tool.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum flow rate for programming tool.")]
        public VolumePerTimeMeasure DownLinkFlowRateMx {
            get {
                return this.downLinkFlowRateMxField;
            }
            set {
                this.downLinkFlowRateMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure drop across tool.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure drop across tool.")]
        public double PressLossFact {
            get {
                return this.pressLossFactField;
            }
            set {
                this.pressLossFactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PressLossFactSpecified {
            get {
                return this.pressLossFactFieldSpecified;
            }
            set {
                this.pressLossFactFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of contact pads.</summary>
        [System.ComponentModel.DescriptionAttribute("The number of contact pads.")]
        public int PadCount {
            get {
                return this.padCountField;
            }
            set {
                this.padCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PadCountSpecified {
            get {
                return this.padCountFieldSpecified;
            }
            set {
                this.padCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of contact pad.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of contact pad.")]
        public LengthMeasure PadLen {
            get {
                return this.padLenField;
            }
            set {
                this.padLenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Width of contact pad.</summary>
        [System.ComponentModel.DescriptionAttribute("Width of contact pad.")]
        public LengthMeasure PadWidth {
            get {
                return this.padWidthField;
            }
            set {
                this.padWidthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Offset from bottom of pad to bottom connector.</summary>
        [System.ComponentModel.DescriptionAttribute("Offset from bottom of pad to bottom connector.")]
        public LengthMeasure PadOffset {
            get {
                return this.padOffsetField;
            }
            set {
                this.padOffsetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outside diameter of tool when pads are activated.</summary>
        [System.ComponentModel.DescriptionAttribute("Outside diameter of tool when pads are activated.")]
        public LengthMeasure OpenPadOd {
            get {
                return this.openPadOdField;
            }
            set {
                this.openPadOdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outiside diameter of tool when pads are closed.</summary>
        [System.ComponentModel.DescriptionAttribute("Outiside diameter of tool when pads are closed.")]
        public LengthMeasure ClosePadOd {
            get {
                return this.closePadOdField;
            }
            set {
                this.closePadOdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public AbstractRotarySteerableTool AbstractRotarySteerableTool {
            get {
                return this.abstractRotarySteerableToolField;
            }
            set {
                this.abstractRotarySteerableToolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Sensor")]
        public Sensor[] Sensor {
            get {
                return this.sensorField;
            }
            set {
                this.sensorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Used with PointTheBit type RSS tools, describes the  angle of the bit.</summary>
        [System.ComponentModel.DescriptionAttribute("Used with PointTheBit type RSS tools, describes the  angle of the bit.")]
        public PlaneAngleMeasure BendAngle {
            get {
                return this.bendAngleField;
            }
            set {
                this.bendAngleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Offset from bottom connection to bend.</summary>
        [System.ComponentModel.DescriptionAttribute("Offset from bottom connection to bend.")]
        public LengthMeasure BendOffset {
            get {
                return this.bendOffsetField;
            }
            set {
                this.bendOffsetField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum DeflectionMethod {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("point bit")]
        pointbit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("push bit")]
        pushbit,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Sensor {
        
        private MeasurementType typeMeasurementField;
        
        private bool typeMeasurementFieldSpecified;
        
        private LengthMeasure offsetBotField;
        
        private string commentsField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Type from POSC.</summary>
        [System.ComponentModel.DescriptionAttribute("Type from POSC.")]
        public MeasurementType TypeMeasurement {
            get {
                return this.typeMeasurementField;
            }
            set {
                this.typeMeasurementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeMeasurementSpecified {
            get {
                return this.typeMeasurementFieldSpecified;
            }
            set {
                this.typeMeasurementFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Offset from bottom of measurement while drilling tool.</summary>
        [System.ComponentModel.DescriptionAttribute("Offset from bottom of measurement while drilling tool.")]
        public LengthMeasure OffsetBot {
            get {
                return this.offsetBotField;
            }
            set {
                this.offsetBotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum MeasurementType {
        
        /// <remarks/>
        acceleration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acoustic caliper")]
        acousticcaliper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acoustic casing collar locator")]
        acousticcasingcollarlocator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acoustic impedance")]
        acousticimpedance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acoustic porosity")]
        acousticporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acoustic velocity")]
        acousticvelocity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acoustic wave matrix travel time")]
        acousticwavematrixtraveltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acoustic wave travel time")]
        acousticwavetraveltime,
        
        /// <remarks/>
        amplitude,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("amplitude of acoustic wave")]
        amplitudeofacousticwave,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("amplitude of E-M wave")]
        amplitudeofEMwave,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("amplitude ratio")]
        amplituderatio,
        
        /// <remarks/>
        area,
        
        /// <remarks/>
        attenuation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("attenuation of acoustic wave")]
        attenuationofacousticwave,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("attenuation of E-M wave")]
        attenuationofEMwave,
        
        /// <remarks/>
        auxiliary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("average porosity")]
        averageporosity,
        
        /// <remarks/>
        azimuth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("barite mud correction")]
        baritemudcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bed thickness correction")]
        bedthicknesscorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit size")]
        bitsize,
        
        /// <remarks/>
        blocked,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("borehole environment correction")]
        boreholeenvironmentcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("borehole fluid correction")]
        boreholefluidcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("borehole size correction")]
        boreholesizecorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bromide mud correction")]
        bromidemudcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bulk compressibility")]
        bulkcompressibility,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bulk density")]
        bulkdensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bulk volume")]
        bulkvolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bulk volume gas")]
        bulkvolumegas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bulk volume hydrocarbon")]
        bulkvolumehydrocarbon,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bulk volume oil")]
        bulkvolumeoil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bulk volume water")]
        bulkvolumewater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C/O ratio")]
        COratio,
        
        /// <remarks/>
        caliper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cased hole correction")]
        casedholecorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing collar locator")]
        casingcollarlocator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing correction")]
        casingcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing diameter correction")]
        casingdiametercorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing inspection")]
        casinginspection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing thickness correction")]
        casingthicknesscorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing weight correction")]
        casingweightcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cement correction")]
        cementcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cement density correction")]
        cementdensitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cement evaluation")]
        cementevaluation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cement thickness correction")]
        cementthicknesscorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cement type correction")]
        cementtypecorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH density porosity")]
        CHdensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH dolomite density porosity")]
        CHdolomitedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH dolomite neutron porosity")]
        CHdolomiteneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH limestone density porosity")]
        CHlimestonedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH limestone neutron porosity")]
        CHlimestoneneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH neutron porosity")]
        CHneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH sandstone density porosity")]
        CHsandstonedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH sandstone neutron porosity")]
        CHsandstoneneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("compressional wave dolomite porosity")]
        compressionalwavedolomiteporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("compressional wave limestone porosity")]
        compressionalwavelimestoneporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("compressional wave matrix travel time")]
        compressionalwavematrixtraveltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("compressional wave sandstone porosity")]
        compressionalwavesandstoneporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("compressional wave travel time")]
        compressionalwavetraveltime,
        
        /// <remarks/>
        conductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("conductivity from attenuation")]
        conductivityfromattenuation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("conductivity from phase shift")]
        conductivityfromphaseshift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("connate water conductivity")]
        connatewaterconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("connate water resistivity")]
        connatewaterresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("conventional core porosity")]
        conventionalcoreporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("core matrix density")]
        corematrixdensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("core permeability")]
        corepermeability,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("core porosity")]
        coreporosity,
        
        /// <remarks/>
        corrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("count rate")]
        countrate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("count rate ratio")]
        countrateratio,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cross plot porosity")]
        crossplotporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("decay time")]
        decaytime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deep conductivity")]
        deepconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deep induction conductivity")]
        deepinductionconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deep induction resistivity")]
        deepinductionresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deep laterolog conductivity")]
        deeplaterologconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deep laterolog resistivity")]
        deeplaterologresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deep resistivity")]
        deepresistivity,
        
        /// <remarks/>
        density,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("density porosity")]
        densityporosity,
        
        /// <remarks/>
        depth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("depth adjusted")]
        depthadjusted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("depth derived from velocity")]
        depthderivedfromvelocity,
        
        /// <remarks/>
        deviation,
        
        /// <remarks/>
        dielectric,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("diffusion correction")]
        diffusioncorrection,
        
        /// <remarks/>
        dip,
        
        /// <remarks/>
        dipmeter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dipmeter conductivity")]
        dipmeterconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dipmeter resistivity")]
        dipmeterresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dolomite acoustic porosity")]
        dolomiteacousticporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dolomite density porosity")]
        dolomitedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dolomite neutron porosity")]
        dolomiteneutronporosity,
        
        /// <remarks/>
        edited,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("effective porosity")]
        effectiveporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric current")]
        electriccurrent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric potential")]
        electricpotential,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electromagnetic wave matrix travel time")]
        electromagneticwavematrixtraveltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electromagnetic wave travel time")]
        electromagneticwavetraveltime,
        
        /// <remarks/>
        element,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("elemental ratio")]
        elementalratio,
        
        /// <remarks/>
        enhanced,
        
        /// <remarks/>
        filtered,
        
        /// <remarks/>
        flowmeter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fluid density")]
        fluiddensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fluid velocity")]
        fluidvelocity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fluid viscosity")]
        fluidviscosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flushed zone conductivity")]
        flushedzoneconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flushed zone resistivity")]
        flushedzoneresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flushed zone saturation")]
        flushedzonesaturation,
        
        /// <remarks/>
        force,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation density correction")]
        formationdensitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation properties correction")]
        formationpropertiescorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation salinity correction")]
        formationsalinitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation saturation correction")]
        formationsaturationcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation volume factor correction")]
        formationvolumefactorcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation water density correction")]
        formationwaterdensitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation water saturation correction")]
        formationwatersaturationcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("free fluid index")]
        freefluidindex,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("friction effect correction")]
        frictioneffectcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gamma ray")]
        gammaray,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gamma ray minus uranium")]
        gammarayminusuranium,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas saturation")]
        gassaturation,
        
        /// <remarks/>
        gradiomanometer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high frequency conductivity")]
        highfrequencyconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high frequency electromagnetic")]
        highfrequencyelectromagnetic,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high frequency electromagnetic porosity")]
        highfrequencyelectromagneticporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high frequency E-M phase shift")]
        highfrequencyEMphaseshift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high frequency resistivity")]
        highfrequencyresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrocarbon correction")]
        hydrocarboncorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrocarbon density correction")]
        hydrocarbondensitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrocarbon gravity correction")]
        hydrocarbongravitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrocarbon saturation")]
        hydrocarbonsaturation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrocarbon viscosity correction")]
        hydrocarbonviscositycorrection,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("interpretation variable")]
        interpretationvariable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("iron mud correction")]
        ironmudcorrection,
        
        /// <remarks/>
        joined,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("KCl mud correction")]
        KClmudcorrection,
        
        /// <remarks/>
        length,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("limestone acoustic porosity")]
        limestoneacousticporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("limestone density porosity")]
        limestonedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("limestone neutron porosity")]
        limestoneneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lithology correction")]
        lithologycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("log derived permeability")]
        logderivedpermeability,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("log matrix density")]
        logmatrixdensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic casing collar locator")]
        magneticcasingcollarlocator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("matrix density")]
        matrixdensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("matrix travel time")]
        matrixtraveltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("measured depth")]
        measureddepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mechanical caliper")]
        mechanicalcaliper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mechanical casing collar locator")]
        mechanicalcasingcollarlocator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("medium conductivity")]
        mediumconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("medium induction conductivity")]
        mediuminductionconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("medium induction resistivity")]
        mediuminductionresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("medium laterolog conductivity")]
        mediumlaterologconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("medium laterolog resistivity")]
        mediumlaterologresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("medium resistivity")]
        mediumresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro conductivity")]
        microconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro inverse conductivity")]
        microinverseconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro inverse resistivity")]
        microinverseresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro laterolog conductivity")]
        microlaterologconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro laterolog resistivity")]
        microlaterologresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro normal conductivity")]
        micronormalconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro normal resistivity")]
        micronormalresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro resistivity")]
        microresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro spherically focused conductivity")]
        microsphericallyfocusedconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro spherically focused resistivity")]
        microsphericallyfocusedresistivity,
        
        /// <remarks/>
        mineral,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud cake conductivity")]
        mudcakeconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud cake correction")]
        mudcakecorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud cake density correction")]
        mudcakedensitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud cake resistivity")]
        mudcakeresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud cake resistivity correction")]
        mudcakeresistivitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud cake thickness correction")]
        mudcakethicknesscorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud composition correction")]
        mudcompositioncorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud conductivity")]
        mudconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud filtrate conductivity")]
        mudfiltrateconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud filtrate correction")]
        mudfiltratecorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud filtrate density correction")]
        mudfiltratedensitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud filtrate resistivity")]
        mudfiltrateresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud filtrate resistivity correction")]
        mudfiltrateresistivitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud filtrate salinity correction")]
        mudfiltratesalinitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud resistivity")]
        mudresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud salinity correction")]
        mudsalinitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud viscosity correction")]
        mudviscositycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud weight correction")]
        mudweightcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("neutron die away time")]
        neutrondieawaytime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("neutron porosity")]
        neutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nuclear caliper")]
        nuclearcaliper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nuclear magnetic decay time")]
        nuclearmagneticdecaytime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nuclear magnetism log permeability")]
        nuclearmagnetismlogpermeability,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nuclear magnetism porosity")]
        nuclearmagnetismporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH density porosity")]
        OHdensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH dolomite density porosity")]
        OHdolomitedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH dolomite neutron porosity")]
        OHdolomiteneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH limestone density porosity")]
        OHlimestonedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH limestone neutron porosity")]
        OHlimestoneneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH neutron porosity")]
        OHneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH sandstone density porosity")]
        OHsandstonedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH sandstone neutron porosity")]
        OHsandstoneneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil based mud correction")]
        oilbasedmudcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil saturation")]
        oilsaturation,
        
        /// <remarks/>
        perforating,
        
        /// <remarks/>
        permeability,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("phase shift")]
        phaseshift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("photoelectric absorption")]
        photoelectricabsorption,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("photoelectric absorption correction")]
        photoelectricabsorptioncorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("physical measurement correction")]
        physicalmeasurementcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plane angle")]
        planeangle,
        
        /// <remarks/>
        porosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("porosity correction")]
        porositycorrection,
        
        /// <remarks/>
        potassium,
        
        /// <remarks/>
        pressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure correction")]
        pressurecorrection,
        
        /// <remarks/>
        processed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pulsed neutron porosity")]
        pulsedneutronporosity,
        
        /// <remarks/>
        quality,
        
        /// <remarks/>
        ratio,
        
        /// <remarks/>
        raw,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("relative bearing")]
        relativebearing,
        
        /// <remarks/>
        resistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resistivity factor correction")]
        resistivityfactorcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resistivity from attenuation")]
        resistivityfromattenuation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resistivity from phase shift")]
        resistivityfromphaseshift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resistivity phase shift")]
        resistivityphaseshift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resistivity ratio")]
        resistivityratio,
        
        /// <remarks/>
        salinity,
        
        /// <remarks/>
        sampling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sandstone acoustic porosity")]
        sandstoneacousticporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sandstone density porosity")]
        sandstonedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sandstone neutron porosity")]
        sandstoneneutronporosity,
        
        /// <remarks/>
        saturation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shale volume")]
        shalevolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow conductivity")]
        shallowconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow induction conductivity")]
        shallowinductionconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow induction resistivity")]
        shallowinductionresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow laterolog conductivity")]
        shallowlaterologconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow laterolog resistivity")]
        shallowlaterologresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow resistivity")]
        shallowresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shear wave dolomite porosity")]
        shearwavedolomiteporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shear wave limestone porosity")]
        shearwavelimestoneporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shear wave matrix travel time")]
        shearwavematrixtraveltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shear wave sandstone porosity")]
        shearwavesandstoneporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shear wave travel time")]
        shearwavetraveltime,
        
        /// <remarks/>
        shifted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sidewall core porosity")]
        sidewallcoreporosity,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sigma formation")]
        sigmaformation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sigma gas")]
        sigmagas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sigma hydrocarbon")]
        sigmahydrocarbon,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sigma matrix")]
        sigmamatrix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sigma oil")]
        sigmaoil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sigma water")]
        sigmawater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("slippage velocity correction")]
        slippagevelocitycorrection,
        
        /// <remarks/>
        smoothed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("spectral gamma ray")]
        spectralgammaray,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("spherically focused conductivity")]
        sphericallyfocusedconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("spherically focused resistivity")]
        sphericallyfocusedresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("spontaneous potential")]
        spontaneouspotential,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("spreading loss correction")]
        spreadinglosscorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("synthetic well log trace")]
        syntheticwelllogtrace,
        
        /// <remarks/>
        temperature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("temperature correction")]
        temperaturecorrection,
        
        /// <remarks/>
        tension,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Th/K ratio")]
        ThKratio,
        
        /// <remarks/>
        thorium,
        
        /// <remarks/>
        time,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tool diameter correction")]
        tooldiametercorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tool eccentricity correction")]
        tooleccentricitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("total gamma ray")]
        totalgammaray,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("total porosity")]
        totalporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tracer survey")]
        tracersurvey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("travel time")]
        traveltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("true conductivity")]
        trueconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("true resistivity")]
        trueresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("true vertical depth")]
        trueverticaldepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tube wave dolomite porosity")]
        tubewavedolomiteporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tube wave limestone porosity")]
        tubewavelimestoneporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tube wave matrix travel time")]
        tubewavematrixtraveltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tube wave sandstone porosity")]
        tubewavesandstoneporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tube wave travel time")]
        tubewavetraveltime,
        
        /// <remarks/>
        uranium,
        
        /// <remarks/>
        velocity,
        
        /// <remarks/>
        volume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water based fluid correction")]
        waterbasedfluidcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water holdup correction")]
        waterholdupcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water saturated conductivity")]
        watersaturatedconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water saturated resistivity")]
        watersaturatedresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water saturation")]
        watersaturation,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class HoleOpener {
        
        private HoleOpenerType typeHoleOpenerField;
        
        private bool typeHoleOpenerFieldSpecified;
        
        private int numCutterField;
        
        private bool numCutterFieldSpecified;
        
        private string manufacturerField;
        
        private LengthMeasure diaHoleOpenerField;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        /// <summary>Under reamer or fixed blade.</summary>
        [System.ComponentModel.DescriptionAttribute("Under reamer or fixed blade.")]
        public HoleOpenerType TypeHoleOpener {
            get {
                return this.typeHoleOpenerField;
            }
            set {
                this.typeHoleOpenerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeHoleOpenerSpecified {
            get {
                return this.typeHoleOpenerFieldSpecified;
            }
            set {
                this.typeHoleOpenerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of cutters.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of cutters.")]
        public int NumCutter {
            get {
                return this.numCutterField;
            }
            set {
                this.numCutterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumCutterSpecified {
            get {
                return this.numCutterFieldSpecified;
            }
            set {
                this.numCutterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of the reamer.</summary>
        [System.ComponentModel.DescriptionAttribute("Diameter of the reamer.")]
        public LengthMeasure DiaHoleOpener {
            get {
                return this.diaHoleOpenerField;
            }
            set {
                this.diaHoleOpenerField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum HoleOpenerType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("under-reamer")]
        underreamer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fixed blade")]
        fixedblade,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Bend {
        
        private PlaneAngleMeasure angleField;
        
        private LengthMeasure distBendBotField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Angle of the bend.</summary>
        [System.ComponentModel.DescriptionAttribute("Angle of the bend.")]
        public PlaneAngleMeasure Angle {
            get {
                return this.angleField;
            }
            set {
                this.angleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance of bend from bottom of component.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance of bend from bottom of component.")]
        public LengthMeasure DistBendBot {
            get {
                return this.distBendBotField;
            }
            set {
                this.distBendBotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Stabilizer {
        
        private LengthMeasure lenBladeField;
        
        private LengthMeasure lenBladeGaugeField;
        
        private LengthMeasure odBladeMxField;
        
        private LengthMeasure odBladeMnField;
        
        private LengthMeasure distBladeBotField;
        
        private BladeShapeType shapeBladeField;
        
        private bool shapeBladeFieldSpecified;
        
        private double factFricField;
        
        private bool factFricFieldSpecified;
        
        private BladeType typeBladeField;
        
        private bool typeBladeFieldSpecified;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private CustomData extensionAnyField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Length of blade.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of blade.")]
        public LengthMeasure LenBlade {
            get {
                return this.lenBladeField;
            }
            set {
                this.lenBladeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gauge Length of blade. That is, the length of the blade which measures at the odBladeMx.</summary>
        [System.ComponentModel.DescriptionAttribute("Gauge Length of blade. That is, the length of the blade which measures at the odB" +
            "ladeMx.")]
        public LengthMeasure LenBladeGauge {
            get {
                return this.lenBladeGaugeField;
            }
            set {
                this.lenBladeGaugeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum outer diameter of blade.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum outer diameter of blade.")]
        public LengthMeasure OdBladeMx {
            get {
                return this.odBladeMxField;
            }
            set {
                this.odBladeMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum outer diameter of blade.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum outer diameter of blade.")]
        public LengthMeasure OdBladeMn {
            get {
                return this.odBladeMnField;
            }
            set {
                this.odBladeMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance of blade bottom from bottom of component.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance of blade bottom from bottom of component.")]
        public LengthMeasure DistBladeBot {
            get {
                return this.distBladeBotField;
            }
            set {
                this.distBladeBotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Blade shape.</summary>
        [System.ComponentModel.DescriptionAttribute("Blade shape.")]
        public BladeShapeType ShapeBlade {
            get {
                return this.shapeBladeField;
            }
            set {
                this.shapeBladeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShapeBladeSpecified {
            get {
                return this.shapeBladeFieldSpecified;
            }
            set {
                this.shapeBladeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Friction factor.</summary>
        [System.ComponentModel.DescriptionAttribute("Friction factor.")]
        public double FactFric {
            get {
                return this.factFricField;
            }
            set {
                this.factFricField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FactFricSpecified {
            get {
                return this.factFricFieldSpecified;
            }
            set {
                this.factFricFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Blade type.</summary>
        [System.ComponentModel.DescriptionAttribute("Blade type.")]
        public BladeType TypeBlade {
            get {
                return this.typeBladeField;
            }
            set {
                this.typeBladeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeBladeSpecified {
            get {
                return this.typeBladeFieldSpecified;
            }
            set {
                this.typeBladeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum BladeShapeType {
        
        /// <remarks/>
        dynamic,
        
        /// <remarks/>
        melon,
        
        /// <remarks/>
        spiral,
        
        /// <remarks/>
        straight,
        
        /// <remarks/>
        variable,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum BladeType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("clamp-on")]
        clampon,
        
        /// <remarks/>
        integral,
        
        /// <remarks/>
        sleeve,
        
        /// <remarks/>
        welded,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Motor {
        
        private LengthMeasure offsetToolField;
        
        private double presLossFactField;
        
        private bool presLossFactFieldSpecified;
        
        private VolumePerTimeMeasure flowrateMnField;
        
        private VolumePerTimeMeasure flowrateMxField;
        
        private LengthMeasure diaRotorNozzleField;
        
        private LengthMeasure clearanceBearBoxField;
        
        private int lobesRotorField;
        
        private bool lobesRotorFieldSpecified;
        
        private int lobesStatorField;
        
        private bool lobesStatorFieldSpecified;
        
        private BearingType typeBearingField;
        
        private bool typeBearingFieldSpecified;
        
        private ThermodynamicTemperatureMeasure tempOpMxField;
        
        private bool rotorCatcherField;
        
        private bool rotorCatcherFieldSpecified;
        
        private bool dumpValveField;
        
        private bool dumpValveFieldSpecified;
        
        private LengthMeasure diaNozzleField;
        
        private bool rotatableField;
        
        private bool rotatableFieldSpecified;
        
        private PlaneAngleMeasure bendSettingsMnField;
        
        private PlaneAngleMeasure bendSettingsMxField;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        /// <summary>Tool offset from bottom.</summary>
        [System.ComponentModel.DescriptionAttribute("Tool offset from bottom.")]
        public LengthMeasure OffsetTool {
            get {
                return this.offsetToolField;
            }
            set {
                this.offsetToolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure loss factor.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure loss factor.")]
        public double PresLossFact {
            get {
                return this.presLossFactField;
            }
            set {
                this.presLossFactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PresLossFactSpecified {
            get {
                return this.presLossFactFieldSpecified;
            }
            set {
                this.presLossFactFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum flow rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum flow rate.")]
        public VolumePerTimeMeasure FlowrateMn {
            get {
                return this.flowrateMnField;
            }
            set {
                this.flowrateMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum flow rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum flow rate.")]
        public VolumePerTimeMeasure FlowrateMx {
            get {
                return this.flowrateMxField;
            }
            set {
                this.flowrateMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of rotor at nozzle.</summary>
        [System.ComponentModel.DescriptionAttribute("Diameter of rotor at nozzle.")]
        public LengthMeasure DiaRotorNozzle {
            get {
                return this.diaRotorNozzleField;
            }
            set {
                this.diaRotorNozzleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Clearance inside bearing box.</summary>
        [System.ComponentModel.DescriptionAttribute("Clearance inside bearing box.")]
        public LengthMeasure ClearanceBearBox {
            get {
                return this.clearanceBearBoxField;
            }
            set {
                this.clearanceBearBoxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of rotor lobes.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of rotor lobes.")]
        public int LobesRotor {
            get {
                return this.lobesRotorField;
            }
            set {
                this.lobesRotorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LobesRotorSpecified {
            get {
                return this.lobesRotorFieldSpecified;
            }
            set {
                this.lobesRotorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of stator lobes.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of stator lobes.")]
        public int LobesStator {
            get {
                return this.lobesStatorField;
            }
            set {
                this.lobesStatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LobesStatorSpecified {
            get {
                return this.lobesStatorFieldSpecified;
            }
            set {
                this.lobesStatorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of bearing.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of bearing.")]
        public BearingType TypeBearing {
            get {
                return this.typeBearingField;
            }
            set {
                this.typeBearingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeBearingSpecified {
            get {
                return this.typeBearingFieldSpecified;
            }
            set {
                this.typeBearingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum operating temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum operating temperature.")]
        public ThermodynamicTemperatureMeasure TempOpMx {
            get {
                return this.tempOpMxField;
            }
            set {
                this.tempOpMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is rotor catcher present?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is rotor catcher present?   Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool RotorCatcher {
            get {
                return this.rotorCatcherField;
            }
            set {
                this.rotorCatcherField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RotorCatcherSpecified {
            get {
                return this.rotorCatcherFieldSpecified;
            }
            set {
                this.rotorCatcherFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is dump valve present?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is dump valve present?   Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool DumpValve {
            get {
                return this.dumpValveField;
            }
            set {
                this.dumpValveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DumpValveSpecified {
            get {
                return this.dumpValveFieldSpecified;
            }
            set {
                this.dumpValveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Nozzle diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Nozzle diameter.")]
        public LengthMeasure DiaNozzle {
            get {
                return this.diaNozzleField;
            }
            set {
                this.diaNozzleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is motor rotatable?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is motor rotatable?   Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool Rotatable {
            get {
                return this.rotatableField;
            }
            set {
                this.rotatableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RotatableSpecified {
            get {
                return this.rotatableFieldSpecified;
            }
            set {
                this.rotatableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum bend angle setting.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum bend angle setting.")]
        public PlaneAngleMeasure BendSettingsMn {
            get {
                return this.bendSettingsMnField;
            }
            set {
                this.bendSettingsMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum bend angle setting.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum bend angle setting.")]
        public PlaneAngleMeasure BendSettingsMx {
            get {
                return this.bendSettingsMxField;
            }
            set {
                this.bendSettingsMxField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum BearingType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil seal")]
        oilseal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud lube")]
        mudlube,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class BitRecord {
        
        private string numBitField;
        
        private LengthMeasure diaBitField;
        
        private LengthMeasure diaPassThruField;
        
        private LengthMeasure diaPilotField;
        
        private string manufacturerField;
        
        private BitType typeBitField;
        
        private bool typeBitFieldSpecified;
        
        private string codeMfgField;
        
        private string codeIADCField;
        
        private IadcIntegerCode condInitInnerField;
        
        private bool condInitInnerFieldSpecified;
        
        private IadcIntegerCode condInitOuterField;
        
        private bool condInitOuterFieldSpecified;
        
        private BitDullCode condInitDullField;
        
        private bool condInitDullFieldSpecified;
        
        private string condInitLocationField;
        
        private IadcBearingWearCode condInitBearingField;
        
        private bool condInitBearingFieldSpecified;
        
        private string condInitGaugeField;
        
        private string condInitOtherField;
        
        private BitReasonPulled condInitReasonField;
        
        private bool condInitReasonFieldSpecified;
        
        private IadcIntegerCode condFinalInnerField;
        
        private bool condFinalInnerFieldSpecified;
        
        private IadcIntegerCode condFinalOuterField;
        
        private bool condFinalOuterFieldSpecified;
        
        private BitDullCode condFinalDullField;
        
        private bool condFinalDullFieldSpecified;
        
        private string condFinalLocationField;
        
        private IadcBearingWearCode condFinalBearingField;
        
        private bool condFinalBearingFieldSpecified;
        
        private string condFinalGaugeField;
        
        private string condFinalOtherField;
        
        private BitReasonPulled condFinalReasonField;
        
        private bool condFinalReasonFieldSpecified;
        
        private string driveField;
        
        private string bitClassField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private Cost costField;
        
        private CustomData extensionAnyField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Bit number and rerun number e.g. "4.1" for the first rerun of bit 4.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Bit number and rerun number e.g. \"4.1\" for the first rerun of bit 4.")]
        public string NumBit {
            get {
                return this.numBitField;
            }
            set {
                this.numBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of drilled hole.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Diameter of drilled hole.")]
        public LengthMeasure DiaBit {
            get {
                return this.diaBitField;
            }
            set {
                this.diaBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum hole or tubing which bit will pass through (for bi-center bits).</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum hole or tubing which bit will pass through (for bi-center bits).")]
        public LengthMeasure DiaPassThru {
            get {
                return this.diaPassThruField;
            }
            set {
                this.diaPassThruField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of pilot bit (for bi-center bits).</summary>
        [System.ComponentModel.DescriptionAttribute("Diameter of pilot bit (for bi-center bits).")]
        public LengthMeasure DiaPilot {
            get {
                return this.diaPilotField;
            }
            set {
                this.diaPilotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of bit.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of bit.")]
        public BitType TypeBit {
            get {
                return this.typeBitField;
            }
            set {
                this.typeBitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeBitSpecified {
            get {
                return this.typeBitFieldSpecified;
            }
            set {
                this.typeBitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The manufacturers code for the bit.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The manufacturers code for the bit.")]
        public string CodeMfg {
            get {
                return this.codeMfgField;
            }
            set {
                this.codeMfgField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>IADC bit code.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("IADC bit code.")]
        public string CodeIADC {
            get {
                return this.codeIADCField;
            }
            set {
                this.codeIADCField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of inner tooth rows (inner 2/3 of bit) (0-8).</summary>
        [System.ComponentModel.DescriptionAttribute("Condition of inner tooth rows (inner 2/3 of bit) (0-8).")]
        public IadcIntegerCode CondInitInner {
            get {
                return this.condInitInnerField;
            }
            set {
                this.condInitInnerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CondInitInnerSpecified {
            get {
                return this.condInitInnerFieldSpecified;
            }
            set {
                this.condInitInnerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of outer tooth rows (outer 1/3 of bit) (0-8).</summary>
        [System.ComponentModel.DescriptionAttribute("Condition of outer tooth rows (outer 1/3 of bit) (0-8).")]
        public IadcIntegerCode CondInitOuter {
            get {
                return this.condInitOuterField;
            }
            set {
                this.condInitOuterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CondInitOuterSpecified {
            get {
                return this.condInitOuterFieldSpecified;
            }
            set {
                this.condInitOuterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Overall dull condition from IADC bit wear 2 character codes.</summary>
        [System.ComponentModel.DescriptionAttribute("Overall dull condition from IADC bit wear 2 character codes.")]
        public BitDullCode CondInitDull {
            get {
                return this.condInitDullField;
            }
            set {
                this.condInitDullField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CondInitDullSpecified {
            get {
                return this.condInitDullFieldSpecified;
            }
            set {
                this.condInitDullFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Row and cone numbers for items which need location information (e.g. Cracked Cone, Lost Cone etc).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Row and cone numbers for items which need location information (e.g. Cracked Cone" +
            ", Lost Cone etc).")]
        public string CondInitLocation {
            get {
                return this.condInitLocationField;
            }
            set {
                this.condInitLocationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of bit bearings (integer 0-8 or E, F, N or X)).</summary>
        [System.ComponentModel.DescriptionAttribute("Condition of bit bearings (integer 0-8 or E, F, N or X)).")]
        public IadcBearingWearCode CondInitBearing {
            get {
                return this.condInitBearingField;
            }
            set {
                this.condInitBearingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CondInitBearingSpecified {
            get {
                return this.condInitBearingFieldSpecified;
            }
            set {
                this.condInitBearingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of bit gauge in 1/16 of an inch. I = in gauge, else number of 16ths out of gauge.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Condition of bit gauge in 1/16 of an inch. I = in gauge, else number of 16ths out" +
            " of gauge.")]
        public string CondInitGauge {
            get {
                return this.condInitGaugeField;
            }
            set {
                this.condInitGaugeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Other comments on bit condition from IADC list (BitDullCode in standard list).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Other comments on bit condition from IADC list (BitDullCode in standard list).")]
        public string CondInitOther {
            get {
                return this.condInitOtherField;
            }
            set {
                this.condInitOtherField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reason bit was pulled from IADC codes.</summary>
        [System.ComponentModel.DescriptionAttribute("Reason bit was pulled from IADC codes.")]
        public BitReasonPulled CondInitReason {
            get {
                return this.condInitReasonField;
            }
            set {
                this.condInitReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CondInitReasonSpecified {
            get {
                return this.condInitReasonFieldSpecified;
            }
            set {
                this.condInitReasonFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of inner tooth rows (inner 2/3 of bit) (0-8).</summary>
        [System.ComponentModel.DescriptionAttribute("Condition of inner tooth rows (inner 2/3 of bit) (0-8).")]
        public IadcIntegerCode CondFinalInner {
            get {
                return this.condFinalInnerField;
            }
            set {
                this.condFinalInnerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CondFinalInnerSpecified {
            get {
                return this.condFinalInnerFieldSpecified;
            }
            set {
                this.condFinalInnerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of outer tooth rows (outer 1/3 of bit) (0-8).</summary>
        [System.ComponentModel.DescriptionAttribute("Condition of outer tooth rows (outer 1/3 of bit) (0-8).")]
        public IadcIntegerCode CondFinalOuter {
            get {
                return this.condFinalOuterField;
            }
            set {
                this.condFinalOuterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CondFinalOuterSpecified {
            get {
                return this.condFinalOuterFieldSpecified;
            }
            set {
                this.condFinalOuterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Overall dull condition from IADC bit wear 2 character codes.</summary>
        [System.ComponentModel.DescriptionAttribute("Overall dull condition from IADC bit wear 2 character codes.")]
        public BitDullCode CondFinalDull {
            get {
                return this.condFinalDullField;
            }
            set {
                this.condFinalDullField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CondFinalDullSpecified {
            get {
                return this.condFinalDullFieldSpecified;
            }
            set {
                this.condFinalDullFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Row and cone numbers for items which need location information (e.g. Cracked Cone, Lost Cone etc).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Row and cone numbers for items which need location information (e.g. Cracked Cone" +
            ", Lost Cone etc).")]
        public string CondFinalLocation {
            get {
                return this.condFinalLocationField;
            }
            set {
                this.condFinalLocationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of bit bearings (integer 0-8 or E, F, N or X).</summary>
        [System.ComponentModel.DescriptionAttribute("Condition of bit bearings (integer 0-8 or E, F, N or X).")]
        public IadcBearingWearCode CondFinalBearing {
            get {
                return this.condFinalBearingField;
            }
            set {
                this.condFinalBearingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CondFinalBearingSpecified {
            get {
                return this.condFinalBearingFieldSpecified;
            }
            set {
                this.condFinalBearingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of bit gauge in 1/16 of a inch. I = in gauge, else number of 16ths out of gauge.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Condition of bit gauge in 1/16 of a inch. I = in gauge, else number of 16ths out " +
            "of gauge.")]
        public string CondFinalGauge {
            get {
                return this.condFinalGaugeField;
            }
            set {
                this.condFinalGaugeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Other comments on bit condition from IADC list (BitDullCode in Standard LISTS).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Other comments on bit condition from IADC list (BitDullCode in Standard LISTS).")]
        public string CondFinalOther {
            get {
                return this.condFinalOtherField;
            }
            set {
                this.condFinalOtherField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reason bit was pulled from IADC codes.</summary>
        [System.ComponentModel.DescriptionAttribute("Reason bit was pulled from IADC codes.")]
        public BitReasonPulled CondFinalReason {
            get {
                return this.condFinalReasonField;
            }
            set {
                this.condFinalReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CondFinalReasonSpecified {
            get {
                return this.condFinalReasonFieldSpecified;
            }
            set {
                this.condFinalReasonFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bit drive type (Motor, rotary table etc).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Bit drive type (Motor, rotary table etc).")]
        public string Drive {
            get {
                return this.driveField;
            }
            set {
                this.driveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>N = new, U = used.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("N = new, U = used.")]
        public string BitClass {
            get {
                return this.bitClassField;
            }
            set {
                this.bitClassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public Cost Cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum BitType {
        
        /// <remarks/>
        diamond,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("diamond core")]
        diamondcore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("insert roller cone")]
        insertrollercone,
        
        /// <remarks/>
        PDC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PDC core")]
        PDCcore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("roller cone")]
        rollercone,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum IadcIntegerCode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum BitDullCode {
        
        /// <remarks/>
        BC,
        
        /// <remarks/>
        BT,
        
        /// <remarks/>
        BU,
        
        /// <remarks/>
        CC,
        
        /// <remarks/>
        CD,
        
        /// <remarks/>
        CI,
        
        /// <remarks/>
        CR,
        
        /// <remarks/>
        CT,
        
        /// <remarks/>
        ER,
        
        /// <remarks/>
        FC,
        
        /// <remarks/>
        HC,
        
        /// <remarks/>
        JD,
        
        /// <remarks/>
        LC,
        
        /// <remarks/>
        LN,
        
        /// <remarks/>
        LT,
        
        /// <remarks/>
        NO,
        
        /// <remarks/>
        OC,
        
        /// <remarks/>
        PB,
        
        /// <remarks/>
        PN,
        
        /// <remarks/>
        RG,
        
        /// <remarks/>
        RO,
        
        /// <remarks/>
        SD,
        
        /// <remarks/>
        SS,
        
        /// <remarks/>
        TR,
        
        /// <remarks/>
        WO,
        
        /// <remarks/>
        WT,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum IadcBearingWearCode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <remarks/>
        E,
        
        /// <remarks/>
        F,
        
        /// <remarks/>
        N,
        
        /// <remarks/>
        X,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum BitReasonPulled {
        
        /// <remarks/>
        BHA,
        
        /// <remarks/>
        CM,
        
        /// <remarks/>
        CP,
        
        /// <remarks/>
        DMF,
        
        /// <remarks/>
        DP,
        
        /// <remarks/>
        DST,
        
        /// <remarks/>
        DTF,
        
        /// <remarks/>
        FM,
        
        /// <remarks/>
        HP,
        
        /// <remarks/>
        HR,
        
        /// <remarks/>
        LOG,
        
        /// <remarks/>
        PP,
        
        /// <remarks/>
        PR,
        
        /// <remarks/>
        RIG,
        
        /// <remarks/>
        TD,
        
        /// <remarks/>
        TQ,
        
        /// <remarks/>
        TW,
        
        /// <remarks/>
        WC,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class MwdTool {
        
        private VolumePerTimeMeasure flowrateMnField;
        
        private VolumePerTimeMeasure flowrateMxField;
        
        private ThermodynamicTemperatureMeasure tempMxField;
        
        private LengthMeasure idEquvField;
        
        private CustomData extensionAnyField;
        
        private Sensor[] sensorField;
        
        /// <remarks/>
        /// <summary>Minimum flow rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum flow rate.")]
        public VolumePerTimeMeasure FlowrateMn {
            get {
                return this.flowrateMnField;
            }
            set {
                this.flowrateMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum flow rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum flow rate.")]
        public VolumePerTimeMeasure FlowrateMx {
            get {
                return this.flowrateMxField;
            }
            set {
                this.flowrateMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum Temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum Temperature.")]
        public ThermodynamicTemperatureMeasure TempMx {
            get {
                return this.tempMxField;
            }
            set {
                this.tempMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Equivalent inner diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Equivalent inner diameter.")]
        public LengthMeasure IdEquv {
            get {
                return this.idEquvField;
            }
            set {
                this.idEquvField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Sensor")]
        public Sensor[] Sensor {
            get {
                return this.sensorField;
            }
            set {
                this.sensorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class Jar {
        
        private ForceMeasure forUpSetField;
        
        private ForceMeasure forDownSetField;
        
        private ForceMeasure forUpTripField;
        
        private ForceMeasure forDownTripField;
        
        private ForceMeasure forPmpOpenField;
        
        private ForceMeasure forSealFricField;
        
        private JarType typeJarField;
        
        private bool typeJarFieldSpecified;
        
        private JarAction jarActionField;
        
        private bool jarActionFieldSpecified;
        
        private CustomData extensionAnyField;
        
        /// <remarks/>
        /// <summary>Up set force.</summary>
        [System.ComponentModel.DescriptionAttribute("Up set force.")]
        public ForceMeasure ForUpSet {
            get {
                return this.forUpSetField;
            }
            set {
                this.forUpSetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Down set force.</summary>
        [System.ComponentModel.DescriptionAttribute("Down set force.")]
        public ForceMeasure ForDownSet {
            get {
                return this.forDownSetField;
            }
            set {
                this.forDownSetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Up trip force.</summary>
        [System.ComponentModel.DescriptionAttribute("Up trip force.")]
        public ForceMeasure ForUpTrip {
            get {
                return this.forUpTripField;
            }
            set {
                this.forUpTripField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Down trip force.</summary>
        [System.ComponentModel.DescriptionAttribute("Down trip force.")]
        public ForceMeasure ForDownTrip {
            get {
                return this.forDownTripField;
            }
            set {
                this.forDownTripField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump open force.</summary>
        [System.ComponentModel.DescriptionAttribute("Pump open force.")]
        public ForceMeasure ForPmpOpen {
            get {
                return this.forPmpOpenField;
            }
            set {
                this.forPmpOpenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Seal friction force.</summary>
        [System.ComponentModel.DescriptionAttribute("Seal friction force.")]
        public ForceMeasure ForSealFric {
            get {
                return this.forSealFricField;
            }
            set {
                this.forSealFricField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of jar.</summary>
        [System.ComponentModel.DescriptionAttribute("The kind of jar.")]
        public JarType TypeJar {
            get {
                return this.typeJarField;
            }
            set {
                this.typeJarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeJarSpecified {
            get {
                return this.typeJarFieldSpecified;
            }
            set {
                this.typeJarFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The jar action.</summary>
        [System.ComponentModel.DescriptionAttribute("The jar action.")]
        public JarAction JarAction {
            get {
                return this.jarActionField;
            }
            set {
                this.jarActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JarActionSpecified {
            get {
                return this.jarActionFieldSpecified;
            }
            set {
                this.jarActionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum JarType {
        
        /// <remarks/>
        mechanical,
        
        /// <remarks/>
        hydraulic,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydro mechanical")]
        hydromechanical,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum JarAction {
        
        /// <remarks/>
        up,
        
        /// <remarks/>
        down,
        
        /// <remarks/>
        both,
        
        /// <remarks/>
        vibrating,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ForcePerLengthMeasure {
        
        private ForcePerLengthUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ForcePerLengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum ForcePerLengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.01 lbf/ft")]
        Item001lbfft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/30 lbf/m")]
        Item130lbfm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/30 N/m")]
        Item130Nm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dyne/cm")]
        dynecm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf/cm")]
        kgfcm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kN/m")]
        kNm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/ft")]
        lbfft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/in")]
        lbfin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mN/km")]
        mNkm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mN/m")]
        mNm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N/m")]
        Nm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pdl/cm")]
        pdlcm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonf[UK]/ft")]
        tonfUKft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonf[US]/ft")]
        tonfUSft,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class LengthPerLengthMeasure {
        
        private LengthPerLengthUom uomField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LengthPerLengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum LengthPerLengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0.01 ft/ft")]
        Item001ftft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/30 m/m")]
        Item130mm,
        
        /// <remarks/>
        Euc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/ft")]
        ftft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/in")]
        ftin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/m")]
        ftm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/mi")]
        ftmi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km/cm")]
        kmcm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/cm")]
        mcm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/km")]
        mkm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/m")]
        mm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mi/in")]
        miin,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class TubularComponent {
        
        private TubularComponentType typeTubularComponentField;
        
        private int sequenceField;
        
        private string descriptionField;
        
        private LengthMeasure idField;
        
        private LengthMeasure odField;
        
        private LengthMeasure odMxField;
        
        private LengthMeasure lenField;
        
        private LengthMeasure lenJointAvField;
        
        private int numJointStandField;
        
        private bool numJointStandFieldSpecified;
        
        private MassPerLengthMeasure wtPerLenField;
        
        private string gradeField;
        
        private LengthMeasure odDriftField;
        
        private PressureMeasure tensYieldField;
        
        private MomentOfForceMeasure tqYieldField;
        
        private PressureMeasure stressFatigField;
        
        private LengthMeasure lenFishneckField;
        
        private LengthMeasure idFishneckField;
        
        private LengthMeasure odFishneckField;
        
        private VolumeMeasure dispField;
        
        private PressureMeasure presBurstField;
        
        private PressureMeasure presCollapseField;
        
        private string classServiceField;
        
        private LengthPerLengthMeasure wearWallField;
        
        private LengthMeasure thickWallField;
        
        private BoxPinConfig configConField;
        
        private bool configConFieldSpecified;
        
        private ForcePerLengthMeasure bendStiffnessField;
        
        private ForcePerLengthMeasure axialStiffnessField;
        
        private ForcePerLengthMeasure torsionalStiffnessField;
        
        private MaterialType typeMaterialField;
        
        private bool typeMaterialFieldSpecified;
        
        private AnglePerLengthMeasure doglegMxField;
        
        private string vendorField;
        
        private string modelField;
        
        private NameTag[] nameTagField;
        
        private AreaMeasure areaNozzleFlowField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private Connection[] connectionField;
        
        private Jar jarField;
        
        private MwdTool mwdToolField;
        
        private BitRecord bitRecordField;
        
        private Motor motorField;
        
        private Stabilizer[] stabilizerField;
        
        private Bend[] bendField;
        
        private HoleOpener holeOpenerField;
        
        private RotarySteerableTool rotarySteerableToolField;
        
        private CustomData extensionAnyField;
        
        private Nozzle[] nozzleField;
        
        private string uidField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public TubularComponentType TypeTubularComponent {
            get {
                return this.typeTubularComponentField;
            }
            set {
                this.typeTubularComponentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The sequence within which the components entered the hole. That is, a sequence number of 1 entered first, 2 entered next, etc.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The sequence within which the components entered the hole. That is, a sequence nu" +
            "mber of 1 entered first, 2 entered next, etc.")]
        public int Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of item and details.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Description of item and details.")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Internal diameter of object.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Internal diameter of object.")]
        public LengthMeasure Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outside diameter of the body of the item.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Outside diameter of the body of the item.")]
        public LengthMeasure Od {
            get {
                return this.odField;
            }
            set {
                this.odField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum outside diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum outside diameter.")]
        public LengthMeasure OdMx {
            get {
                return this.odMxField;
            }
            set {
                this.odMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of the item.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Length of the item.")]
        public LengthMeasure Len {
            get {
                return this.lenField;
            }
            set {
                this.lenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average length of joint for tubulars.</summary>
        [System.ComponentModel.DescriptionAttribute("Average length of joint for tubulars.")]
        public LengthMeasure LenJointAv {
            get {
                return this.lenJointAvField;
            }
            set {
                this.lenJointAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of joints per stand of tubular.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of joints per stand of tubular.")]
        public int NumJointStand {
            get {
                return this.numJointStandField;
            }
            set {
                this.numJointStandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumJointStandSpecified {
            get {
                return this.numJointStandFieldSpecified;
            }
            set {
                this.numJointStandFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight per unit length.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight per unit length.")]
        public MassPerLengthMeasure WtPerLen {
            get {
                return this.wtPerLenField;
            }
            set {
                this.wtPerLenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Material grade for the tubular section.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Material grade for the tubular section.")]
        public string Grade {
            get {
                return this.gradeField;
            }
            set {
                this.gradeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum pass through diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum pass through diameter.")]
        public LengthMeasure OdDrift {
            get {
                return this.odDriftField;
            }
            set {
                this.odDriftField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Yield stress of steel - worn stress.</summary>
        [System.ComponentModel.DescriptionAttribute("Yield stress of steel - worn stress.")]
        public PressureMeasure TensYield {
            get {
                return this.tensYieldField;
            }
            set {
                this.tensYieldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Torque at which yield occurs.</summary>
        [System.ComponentModel.DescriptionAttribute("Torque at which yield occurs.")]
        public MomentOfForceMeasure TqYield {
            get {
                return this.tqYieldField;
            }
            set {
                this.tqYieldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fatigue endurance limit.</summary>
        [System.ComponentModel.DescriptionAttribute("Fatigue endurance limit.")]
        public PressureMeasure StressFatig {
            get {
                return this.stressFatigField;
            }
            set {
                this.stressFatigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fish neck length.</summary>
        [System.ComponentModel.DescriptionAttribute("Fish neck length.")]
        public LengthMeasure LenFishneck {
            get {
                return this.lenFishneckField;
            }
            set {
                this.lenFishneckField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fish neck inside diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Fish neck inside diameter.")]
        public LengthMeasure IdFishneck {
            get {
                return this.idFishneckField;
            }
            set {
                this.idFishneckField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fish neck outside diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Fish neck outside diameter.")]
        public LengthMeasure OdFishneck {
            get {
                return this.odFishneckField;
            }
            set {
                this.odFishneckField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Closed end displacement.</summary>
        [System.ComponentModel.DescriptionAttribute("Closed end displacement.")]
        public VolumeMeasure Disp {
            get {
                return this.dispField;
            }
            set {
                this.dispField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Burst pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Burst pressure.")]
        public PressureMeasure PresBurst {
            get {
                return this.presBurstField;
            }
            set {
                this.presBurstField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Collapse pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Collapse pressure.")]
        public PressureMeasure PresCollapse {
            get {
                return this.presCollapseField;
            }
            set {
                this.presCollapseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Service class.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Service class.")]
        public string ClassService {
            get {
                return this.classServiceField;
            }
            set {
                this.classServiceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wall thickness wear (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Wall thickness wear (commonly in percent).")]
        public LengthPerLengthMeasure WearWall {
            get {
                return this.wearWallField;
            }
            set {
                this.wearWallField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wall thickness.</summary>
        [System.ComponentModel.DescriptionAttribute("Wall thickness.")]
        public LengthMeasure ThickWall {
            get {
                return this.thickWallField;
            }
            set {
                this.thickWallField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Box/Pin configuration.</summary>
        [System.ComponentModel.DescriptionAttribute("Box/Pin configuration.")]
        public BoxPinConfig ConfigCon {
            get {
                return this.configConField;
            }
            set {
                this.configConField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConfigConSpecified {
            get {
                return this.configConFieldSpecified;
            }
            set {
                this.configConFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bending stiffness of tubular.</summary>
        [System.ComponentModel.DescriptionAttribute("Bending stiffness of tubular.")]
        public ForcePerLengthMeasure BendStiffness {
            get {
                return this.bendStiffnessField;
            }
            set {
                this.bendStiffnessField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Axial stiffness of tubular.</summary>
        [System.ComponentModel.DescriptionAttribute("Axial stiffness of tubular.")]
        public ForcePerLengthMeasure AxialStiffness {
            get {
                return this.axialStiffnessField;
            }
            set {
                this.axialStiffnessField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Torsional stiffness of tubular.</summary>
        [System.ComponentModel.DescriptionAttribute("Torsional stiffness of tubular.")]
        public ForcePerLengthMeasure TorsionalStiffness {
            get {
                return this.torsionalStiffnessField;
            }
            set {
                this.torsionalStiffnessField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of material.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of material.")]
        public MaterialType TypeMaterial {
            get {
                return this.typeMaterialField;
            }
            set {
                this.typeMaterialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeMaterialSpecified {
            get {
                return this.typeMaterialFieldSpecified;
            }
            set {
                this.typeMaterialFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum dogleg severity.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum dogleg severity.")]
        public AnglePerLengthMeasure DoglegMx {
            get {
                return this.doglegMxField;
            }
            set {
                this.doglegMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of vendor.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of vendor.")]
        public string Vendor {
            get {
                return this.vendorField;
            }
            set {
                this.vendorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Component name from manufacturer.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Component name from manufacturer.")]
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the component tool. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("NameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the component tool. A serial number is a type of identi" +
            "fication tag however some tags contain many pieces of information. This structur" +
            "e just identifies the tag and does not describe the contents.")]
        public NameTag[] NameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total area of nozzles.</summary>
        [System.ComponentModel.DescriptionAttribute("Total area of nozzles.")]
        public AreaMeasure AreaNozzleFlow {
            get {
                return this.areaNozzleFlowField;
            }
            set {
                this.areaNozzleFlowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Connection")]
        public Connection[] Connection {
            get {
                return this.connectionField;
            }
            set {
                this.connectionField = value;
            }
        }
        
        /// <remarks/>
        public Jar Jar {
            get {
                return this.jarField;
            }
            set {
                this.jarField = value;
            }
        }
        
        /// <remarks/>
        public MwdTool MwdTool {
            get {
                return this.mwdToolField;
            }
            set {
                this.mwdToolField = value;
            }
        }
        
        /// <remarks/>
        public BitRecord BitRecord {
            get {
                return this.bitRecordField;
            }
            set {
                this.bitRecordField = value;
            }
        }
        
        /// <remarks/>
        public Motor Motor {
            get {
                return this.motorField;
            }
            set {
                this.motorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Stabilizer")]
        public Stabilizer[] Stabilizer {
            get {
                return this.stabilizerField;
            }
            set {
                this.stabilizerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Bend")]
        public Bend[] Bend {
            get {
                return this.bendField;
            }
            set {
                this.bendField = value;
            }
        }
        
        /// <remarks/>
        public HoleOpener HoleOpener {
            get {
                return this.holeOpenerField;
            }
            set {
                this.holeOpenerField = value;
            }
        }
        
        /// <remarks/>
        public RotarySteerableTool RotarySteerableTool {
            get {
                return this.rotarySteerableToolField;
            }
            set {
                this.rotarySteerableToolField = value;
            }
        }
        
        /// <remarks/>
        public CustomData ExtensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Nozzle")]
        public Nozzle[] Nozzle {
            get {
                return this.nozzleField;
            }
            set {
                this.nozzleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum TubularComponentType {
        
        /// <remarks/>
        accelerator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("adjustable kickoff")]
        adjustablekickoff,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit core diamond")]
        bitcorediamond,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit core PDC")]
        bitcorePDC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit diamond fixed cut")]
        bitdiamondfixedcut,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit hole opener")]
        bitholeopener,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit insert roller cone")]
        bitinsertrollercone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit mill tooth roller cone")]
        bitmilltoothrollercone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit PDC fixed cutter")]
        bitPDCfixedcutter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit under reamer")]
        bitunderreamer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bridge plug")]
        bridgeplug,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bull plug")]
        bullplug,
        
        /// <remarks/>
        bullnose,
        
        /// <remarks/>
        casing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing crossover")]
        casingcrossover,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing cutter")]
        casingcutter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing head")]
        casinghead,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing inflatable packer")]
        casinginflatablepacker,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing shoe screw-in")]
        casingshoescrewin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("catch assembly")]
        catchassembly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coiled tubing in hole")]
        coiledtubinginhole,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coiled tubing on coil")]
        coiledtubingoncoil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("core barrel")]
        corebarrel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("core orientation barrel")]
        coreorientationbarrel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("die collar")]
        diecollar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("die collar LH")]
        diecollarLH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("directional guidance system")]
        directionalguidancesystem,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill collar")]
        drillcollar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill collar short")]
        drillcollarshort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill pipe")]
        drillpipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill pipe compressive")]
        drillpipecompressive,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill pipe LH")]
        drillpipeLH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill stem test BHA")]
        drillstemtestBHA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drive pipe")]
        drivepipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dual catch assembly")]
        dualcatchassembly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("extension bowl overshot")]
        extensionbowlovershot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("extension sub-overshot")]
        extensionsubovershot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("float collar")]
        floatcollar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("float shoe")]
        floatshoe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flow head")]
        flowhead,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("guide shoe")]
        guideshoe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hanger casing subsea")]
        hangercasingsubsea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hanger casing surface")]
        hangercasingsurface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hanger liner")]
        hangerliner,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hanger mud line")]
        hangermudline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hanger tubing")]
        hangertubing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("heavy weight drill pipe")]
        heavyweightdrillpipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("heavy weight drill pipe LH")]
        heavyweightdrillpipeLH,
        
        /// <remarks/>
        jar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("junk basket")]
        junkbasket,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("junk basket reverse circulation")]
        junkbasketreversecirculation,
        
        /// <remarks/>
        kelly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("keyseat wiper tool")]
        keyseatwipertool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("landing float collar")]
        landingfloatcollar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lead impression block")]
        leadimpressionblock,
        
        /// <remarks/>
        liner,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("logging while drilling tool")]
        loggingwhiledrillingtool,
        
        /// <remarks/>
        magnet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill casing cutting")]
        millcasingcutting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill dress")]
        milldress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill flat bottom")]
        millflatbottom,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill hollow")]
        millhollow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill packer picker assembly")]
        millpackerpickerassembly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill pilot")]
        millpilot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill polish")]
        millpolish,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill section")]
        millsection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill taper")]
        milltaper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill washover")]
        millwashover,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill watermelon")]
        millwatermelon,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("millout extension")]
        milloutextension,
        
        /// <remarks/>
        motor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("motor instrumented")]
        motorinstrumented,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("motor steerable")]
        motorsteerable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mule shoe")]
        muleshoe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("multilateral hanger running tool")]
        multilateralhangerrunningtool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD hang off sub")]
        MWDhangoffsub,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD pulser")]
        MWDpulser,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("non-magnetic collar")]
        nonmagneticcollar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("non-magnetic stabilizer")]
        nonmagneticstabilizer,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        overshot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("overshot LH")]
        overshotLH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oversize lip guide overshot")]
        oversizelipguideovershot,
        
        /// <remarks/>
        packer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("packer retrieve TT squeeze")]
        packerretrieveTTsqueeze,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("packer RTTS")]
        packerRTTS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("packer storm valve RTTS")]
        packerstormvalveRTTS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pipe cutter")]
        pipecutter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("polished bore receptacle")]
        polishedborereceptacle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ported stinger")]
        portedstinger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("prepacked screens")]
        prepackedscreens,
        
        /// <remarks/>
        reamer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reversing tool")]
        reversingtool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("riser high pressure")]
        riserhighpressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("riser marine")]
        risermarine,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("riser production")]
        riserproduction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rotary steering tool")]
        rotarysteeringtool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("running tool")]
        runningtool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("safety joint")]
        safetyjoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("safety joint LH")]
        safetyjointLH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("scab liner bit guide")]
        scablinerbitguide,
        
        /// <remarks/>
        scraper,
        
        /// <remarks/>
        scratchers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("slotted liner")]
        slottedliner,
        
        /// <remarks/>
        spear,
        
        /// <remarks/>
        stabilizer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer inline")]
        stabilizerinline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer near bit")]
        stabilizernearbit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer near bit roller reamer")]
        stabilizernearbitrollerreamer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer non-rotating")]
        stabilizernonrotating,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer steerable")]
        stabilizersteerable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer string")]
        stabilizerstring,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer string roller reamer")]
        stabilizerstringrollerreamer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer turbo back")]
        stabilizerturboback,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer variable blade")]
        stabilizervariableblade,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stage cement collar")]
        stagecementcollar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-bar catcher")]
        subbarcatcher,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-bent")]
        subbent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-bit")]
        subbit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-bumper")]
        subbumper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-catcher")]
        subcatcher,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-circulation")]
        subcirculation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-cone")]
        subcone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-crossover")]
        subcrossover,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-dart")]
        subdart,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-filter")]
        subfilter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-float")]
        subfloat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-jetting")]
        subjetting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-junk")]
        subjunk,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-orienting")]
        suborienting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-ported")]
        subported,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-pressure relief")]
        subpressurerelief,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-pump out")]
        subpumpout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-restrictor")]
        subrestrictor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-saver")]
        subsaver,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-shock")]
        subshock,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-side entry")]
        subsideentry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-stop")]
        substop,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("surface pipe")]
        surfacepipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("taper tap")]
        tapertap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("taper tap LH")]
        tapertapLH,
        
        /// <remarks/>
        thruster,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tieback polished bore receptacle")]
        tiebackpolishedborereceptacle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tieback stinger")]
        tiebackstinger,
        
        /// <remarks/>
        tubing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tubing-conveyed perforating gun")]
        tubingconveyedperforatinggun,
        
        /// <remarks/>
        turbine,
        
        /// <remarks/>
        unknown,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("washover pipe")]
        washoverpipe,
        
        /// <remarks/>
        whipstock,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("whipstock anchor")]
        whipstockanchor,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum BoxPinConfig {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bottom box")]
        bottombox,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("top box")]
        topbox,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("top pin")]
        toppin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bottom pin top box")]
        bottompintopbox,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bottom pin")]
        bottompin,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum MaterialType {
        
        /// <remarks/>
        aluminum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("beryllium copper")]
        berylliumcopper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chrome alloy")]
        chromealloy,
        
        /// <remarks/>
        composite,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("non-magnetic steel")]
        nonmagneticsteel,
        
        /// <remarks/>
        plastic,
        
        /// <remarks/>
        steel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("steel alloy")]
        steelalloy,
        
        /// <remarks/>
        titanium,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class RefWellWellboreRig {
        
        private string rigReferenceField;
        
        private string wellboreParentField;
        
        private string wellParentField;
        
        /// <remarks/>
        /// <summary>A pointer to the rig with which there is a relationship.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the rig with which there is a relationship.")]
        public string RigReference {
            get {
                return this.rigReferenceField;
            }
            set {
                this.rigReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the wellbore that contains the rigReference. This is not needed unless the referenced rig is outside the  context of a common parent wellbore.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the wellbore that contains the rigReference. This is not needed unle" +
            "ss the referenced rig is outside the  context of a common parent wellbore.")]
        public string WellboreParent {
            get {
                return this.wellboreParentField;
            }
            set {
                this.wellboreParentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the well that contains the wellboreParent. This is not needed unless the referenced wellbore is outside the  context of a common parent well.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the well that contains the wellboreParent. This is not needed unless" +
            " the referenced wellbore is outside the  context of a common parent well.")]
        public string WellParent {
            get {
                return this.wellParentField;
            }
            set {
                this.wellParentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class RefWellWellbore {
        
        private string wellboreReferenceField;
        
        private string wellParentField;
        
        /// <remarks/>
        /// <summary>A pointer the wellbore with which there is a relationship.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer the wellbore with which there is a relationship.")]
        public string WellboreReference {
            get {
                return this.wellboreReferenceField;
            }
            set {
                this.wellboreReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the well that contains the wellboreReference. This is not needed unless the referenced wellbore is outside the  context of a common parent well.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the well that contains the wellboreReference. This is not needed unl" +
            "ess the referenced wellbore is outside the  context of a common parent well.")]
        public string WellParent {
            get {
                return this.wellParentField;
            }
            set {
                this.wellParentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class WellDatum {
        
        private string nameField;
        
        private ElevCodeEnum codeField;
        
        private bool codeFieldSpecified;
        
        private string[] kindField;
        
        private MeasuredDepthCoord measuredDepthField;
        
        private string commentField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private RefWellWellbore wellboreField;
        
        private RefWellWellboreRig rigField;
        
        private WellElevationCoord elevationField;
        
        private AbstractWellLocation horizontalLocationField;
        
        private AbstractVerticalCrs crsField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The human understandable contextual name of the reference datum.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The human understandable contextual name of the reference datum.")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The code value that represents the type of reference datum.  This may represent a point on a device (e.g., kelly bushing) or it may represent  a vertical reference datum (e.g., mean sea level).</summary>
        [System.ComponentModel.DescriptionAttribute("The code value that represents the type of reference datum.  This may represent a" +
            " point on a device (e.g., kelly bushing) or it may represent  a vertical referen" +
            "ce datum (e.g., mean sea level).")]
        public ElevCodeEnum Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSpecified {
            get {
                return this.codeFieldSpecified;
            }
            set {
                this.codeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Since various activities may use different points as  measurement datums, it is useful to characterize the point based on its usage.  A well reference datum may have more than one such characterization.  For example, it may be the datum used by the driller and logger for measuring  their depths. Example usage values would be 'permanent','driller', 'logger' 'WRP' (well reference point) and 'SRP' (site reference point).</summary>
        [System.Xml.Serialization.XmlElementAttribute("Kind")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"Since various activities may use different points as  measurement datums, it is useful to characterize the point based on its usage.  A well reference datum may have more than one such characterization.  For example, it may be the datum used by the driller and logger for measuring  their depths. Example usage values would be 'permanent','driller', 'logger' 'WRP' (well reference point) and 'SRP' (site reference point).")]
        public string[] Kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth coordinate of this reference datum as measured from another datum. The measured depth datum should either be the same as the elevation datum or it should be relatable to the elevation datum through other datums. Positive moving toward the bottomhole from the measured depth datum. This should be given when a local reference is "downhole",  such as a kickoff point or ocean bottom template, and the borehole may not be vertical. If a Depth is given then an Elevation should also be given.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The measured depth coordinate of this reference datum as measured from another datum. The measured depth datum should either be the same as the elevation datum or it should be relatable to the elevation datum through other datums. Positive moving toward the bottomhole from the measured depth datum. This should be given when a local reference is ""downhole"",  such as a kickoff point or ocean bottom template, and the borehole may not be vertical. If a Depth is given then an Elevation should also be given.")]
        public MeasuredDepthCoord MeasuredDepth {
            get {
                return this.measuredDepthField;
            }
            set {
                this.measuredDepthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A contextual description of the well reference datum.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A contextual description of the well reference datum.")]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public RefWellWellbore Wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
        
        /// <remarks/>
        public RefWellWellboreRig Rig {
            get {
                return this.rigField;
            }
            set {
                this.rigField = value;
            }
        }
        
        /// <remarks/>
        public WellElevationCoord Elevation {
            get {
                return this.elevationField;
            }
            set {
                this.elevationField = value;
            }
        }
        
        /// <remarks/>
        public AbstractWellLocation HorizontalLocation {
            get {
                return this.horizontalLocationField;
            }
            set {
                this.horizontalLocationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Points to one of the optional for a geodetic vertical CRS, Allows the datum to be positioned in real-world space.l</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Points to one of the optional for a geodetic vertical CRS, Allows the datum to be" +
            " positioned in real-world space.l")]
        public AbstractVerticalCrs Crs {
            get {
                return this.crsField;
            }
            set {
                this.crsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalGmlCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalEpsgCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalWktCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalLocalAuthorityCrs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalUnknownCrs))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public abstract partial class AbstractVerticalCrs {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class VerticalGmlCrs : AbstractVerticalCrs {
        
        private VerticalCRSType gmlVerticalCrsDefinitionField;
        
        /// <remarks/>
        public VerticalCRSType GmlVerticalCrsDefinition {
            get {
                return this.gmlVerticalCrsDefinitionField;
            }
            set {
                this.gmlVerticalCrsDefinitionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class VerticalEpsgCrs : AbstractVerticalCrs {
        
        private long epsgCodeField;
        
        /// <remarks/>
        public long EpsgCode {
            get {
                return this.epsgCodeField;
            }
            set {
                this.epsgCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class VerticalWktCrs : AbstractVerticalCrs {
        
        private string wellKnownTextField;
        
        /// <remarks/>
        public string WellKnownText {
            get {
                return this.wellKnownTextField;
            }
            set {
                this.wellKnownTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class VerticalLocalAuthorityCrs : AbstractVerticalCrs {
        
        private string localAuthorityCrsNameField;
        
        /// <remarks/>
        public string LocalAuthorityCrsName {
            get {
                return this.localAuthorityCrsNameField;
            }
            set {
                this.localAuthorityCrsNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class VerticalUnknownCrs : AbstractVerticalCrs {
        
        private string unknownField;
        
        /// <remarks/>
        public string Unknown {
            get {
                return this.unknownField;
            }
            set {
                this.unknownField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class ReferencePoint {
        
        private string nameField;
        
        private string typeField;
        
        private MeasuredDepthCoord measuredDepthField;
        
        private string descriptionField;
        
        private ExtensionNameValue[] extensionNameValueField;
        
        private WellElevationCoord elevationField;
        
        private AbstractWellLocation[] locationField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the point.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the point.")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of point. For example,  'well reference point', 'platform reference point', 'sea surface', 'sea bottom'.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The kind of point. For example,  \'well reference point\', \'platform reference poin" +
            "t\', \'sea surface\', \'sea bottom\'.")]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth coordinate of this reference point. Positive moving toward the bottomhole from the measured depth datum. This should be given when the reference is "downhole", such as an ocean  bottom template, or when the reference point is also used as a vertical well datum. The measured depth value can be used to determine if the reference point and a vertical well datum are at the same point.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The measured depth coordinate of this reference point. Positive moving toward the bottomhole from the measured depth datum. This should be given when the reference is ""downhole"", such as an ocean  bottom template, or when the reference point is also used as a vertical well datum. The measured depth value can be used to determine if the reference point and a vertical well datum are at the same point.")]
        public MeasuredDepthCoord MeasuredDepth {
            get {
                return this.measuredDepthField;
            }
            set {
                this.measuredDepthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual description of the point.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A textual description of the point.")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        public ExtensionNameValue[] ExtensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        public WellElevationCoord Elevation {
            get {
                return this.elevationField;
            }
            set {
                this.elevationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Location")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public AbstractWellLocation[] Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class FootageEastWest {
        
        private LengthUom uomField;
        
        private bool uomFieldSpecified;
        
        private EastOrWest refField;
        
        private bool refFieldSpecified;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uomSpecified {
            get {
                return this.uomFieldSpecified;
            }
            set {
                this.uomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public EastOrWest @ref {
            get {
                return this.refField;
            }
            set {
                this.refField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool refSpecified {
            get {
                return this.refFieldSpecified;
            }
            set {
                this.refFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum EastOrWest {
        
        /// <remarks/>
        east,
        
        /// <remarks/>
        west,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class FootageNorthSouth {
        
        private LengthUom uomField;
        
        private bool uomFieldSpecified;
        
        private NorthOrSouth refField;
        
        private bool refFieldSpecified;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uomSpecified {
            get {
                return this.uomFieldSpecified;
            }
            set {
                this.uomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public NorthOrSouth @ref {
            get {
                return this.refField;
            }
            set {
                this.refField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool refSpecified {
            get {
                return this.refFieldSpecified;
            }
            set {
                this.refFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum NorthOrSouth {
        
        /// <remarks/>
        north,
        
        /// <remarks/>
        south,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public partial class PublicLandSurveySystem {
        
        private PrincipalMeridian principalMeridianField;
        
        private bool principalMeridianFieldSpecified;
        
        private int rangeField;
        
        private bool rangeFieldSpecified;
        
        private EastOrWest rangeDirField;
        
        private bool rangeDirFieldSpecified;
        
        private int townshipField;
        
        private bool townshipFieldSpecified;
        
        private NorthOrSouth townshipDirField;
        
        private bool townshipDirFieldSpecified;
        
        private string sectionField;
        
        private string quarterSectionField;
        
        private string quarterTownshipField;
        
        private FootageNorthSouth footageNSField;
        
        private FootageEastWest footageEWField;
        
        /// <remarks/>
        /// <summary>Principal meridian for this location.</summary>
        [System.ComponentModel.DescriptionAttribute("Principal meridian for this location.")]
        public PrincipalMeridian PrincipalMeridian {
            get {
                return this.principalMeridianField;
            }
            set {
                this.principalMeridianField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrincipalMeridianSpecified {
            get {
                return this.principalMeridianFieldSpecified;
            }
            set {
                this.principalMeridianFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Range number.</summary>
        [System.ComponentModel.DescriptionAttribute("Range number.")]
        public int Range {
            get {
                return this.rangeField;
            }
            set {
                this.rangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RangeSpecified {
            get {
                return this.rangeFieldSpecified;
            }
            set {
                this.rangeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Range direction.</summary>
        [System.ComponentModel.DescriptionAttribute("Range direction.")]
        public EastOrWest RangeDir {
            get {
                return this.rangeDirField;
            }
            set {
                this.rangeDirField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RangeDirSpecified {
            get {
                return this.rangeDirFieldSpecified;
            }
            set {
                this.rangeDirFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Township number.</summary>
        [System.ComponentModel.DescriptionAttribute("Township number.")]
        public int Township {
            get {
                return this.townshipField;
            }
            set {
                this.townshipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TownshipSpecified {
            get {
                return this.townshipFieldSpecified;
            }
            set {
                this.townshipFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Township direction.</summary>
        [System.ComponentModel.DescriptionAttribute("Township direction.")]
        public NorthOrSouth TownshipDir {
            get {
                return this.townshipDirField;
            }
            set {
                this.townshipDirField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TownshipDirSpecified {
            get {
                return this.townshipDirFieldSpecified;
            }
            set {
                this.townshipDirFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Section number.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[+]?([1-9]|[1-2][0-9]|3[0-6])\\.?[0-9]?")]
        [System.ComponentModel.DescriptionAttribute("Section number.")]
        public string Section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The location of the well within the section,  with the primary component listed first. Spot location will be made some from combination of the following codes: NE, NW, SW, SE, N2, S2, E2, W2, C (center quarter),  LTxx (where xx represents a two digit lot designation),  TRzz (where zz represents a one or two character trac designation).  Free format will allow for entries such as NESW (southwest quarter of northeast quarter),  E2NESE (southeast quarter of northeast quarter of east half), CNE (northeast quarter of center quarter), etc.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(NE|NW|SW|SE|N2|S2|E2|W2|C|LT[0-9]{2,2}|TR[a-zA-Z0-9]{1,2}){1,3}")]
        [System.ComponentModel.DescriptionAttribute(@"The location of the well within the section,  with the primary component listed first. Spot location will be made some from combination of the following codes: NE, NW, SW, SE, N2, S2, E2, W2, C (center quarter),  LTxx (where xx represents a two digit lot designation),  TRzz (where zz represents a one or two character trac designation).  Free format will allow for entries such as NESW (southwest quarter of northeast quarter),  E2NESE (southeast quarter of northeast quarter of east half), CNE (northeast quarter of center quarter), etc.")]
        public string QuarterSection {
            get {
                return this.quarterSectionField;
            }
            set {
                this.quarterSectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Quarter township.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("NE|NW|SW|SE")]
        [System.ComponentModel.DescriptionAttribute("Quarter township.")]
        public string QuarterTownship {
            get {
                return this.quarterTownshipField;
            }
            set {
                this.quarterTownshipField = value;
            }
        }
        
        /// <remarks/>
        public FootageNorthSouth FootageNS {
            get {
                return this.footageNSField;
            }
            set {
                this.footageNSField = value;
            }
        }
        
        /// <remarks/>
        public FootageEastWest FootageEW {
            get {
                return this.footageEWField;
            }
            set {
                this.footageEWField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum PrincipalMeridian {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1st Principal Meridian")]
        Item1stPrincipalMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2nd Principal Meridian")]
        Item2ndPrincipalMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3rd Principal Meridian")]
        Item3rdPrincipalMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4th Principal Meridian")]
        Item4thPrincipalMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5th Principal Meridian")]
        Item5thPrincipalMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6th Principal Meridian")]
        Item6thPrincipalMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Black Hills Meridian")]
        BlackHillsMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Boise Meridian")]
        BoiseMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Chickasaw Meridian")]
        ChickasawMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Choctaw Meridian")]
        ChoctawMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cimarron Meridian")]
        CimarronMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Copper River Meridian")]
        CopperRiverMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Fairbanks Meridian")]
        FairbanksMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Gila and Salt River Meridian")]
        GilaandSaltRiverMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Humboldt Meridian")]
        HumboldtMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Huntsville Meridian")]
        HuntsvilleMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Indian Meridian")]
        IndianMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Kateel River Meridian")]
        KateelRiverMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Lousiana Meridian")]
        LousianaMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Michigan Meridian")]
        MichiganMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Montana Meridian")]
        MontanaMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mount Diablo Meridian")]
        MountDiabloMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Navajo Meridian")]
        NavajoMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("New Mexico Meridian")]
        NewMexicoMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Saint Helena Meridian")]
        SaintHelenaMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Saint Stephens Meridian")]
        SaintStephensMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Salt Lake Meridian")]
        SaltLakeMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("San Bernardo Meridian")]
        SanBernardoMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Seward Meridian")]
        SewardMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Tallahassee Meridian")]
        TallahasseeMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Uintah Meridian")]
        UintahMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Umiat Meridian")]
        UmiatMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ute Meridian")]
        UteMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Washington Meridian")]
        WashingtonMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Williamette Meridian")]
        WilliametteMeridian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Wind River Meridian")]
        WindRiverMeridian,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class FailingRule {
        
        private string ruleIdField;
        
        private string ruleNameField;
        
        private string severityField;
        
        private ExtensionNameValue[] failingRuleExtensionsField;
        
        /// <remarks/>
        public string RuleId {
            get {
                return this.ruleIdField;
            }
            set {
                this.ruleIdField = value;
            }
        }
        
        /// <remarks/>
        public string RuleName {
            get {
                return this.ruleNameField;
            }
            set {
                this.ruleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FailingRuleExtensions")]
        public ExtensionNameValue[] FailingRuleExtensions {
            get {
                return this.failingRuleExtensionsField;
            }
            set {
                this.failingRuleExtensionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class IndexRange {
        
        private string indexMaximumField;
        
        private string indexMinimumField;
        
        /// <remarks/>
        public string IndexMaximum {
            get {
                return this.indexMaximumField;
            }
            set {
                this.indexMaximumField = value;
            }
        }
        
        /// <remarks/>
        public string IndexMinimum {
            get {
                return this.indexMinimumField;
            }
            set {
                this.indexMinimumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum ExistenceKind {
        
        /// <remarks/>
        actual,
        
        /// <remarks/>
        planned,
        
        /// <remarks/>
        simulated,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("WellboreCompletion", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_WellboreCompletion : AbstractObject {
        
        private string nameWellCompletionField;
        
        private string wellboreCompletionNoField;
        
        private string wellboreCompletionAliasField;
        
        private EventInfo[] eventHistoryField;
        
        private string wellboreCompletionDateField;
        
        private string suffixAPIField;
        
        private MdInterval completionMdIntervalField;
        
        private TvdInterval completionTvdIntervalField;
        
        private string currentStatusField;
        
        private string statusDateField;
        
        private CompletionStatusHistory[] statusHistoryField;
        
        private ContactIntervalSet contactIntervalSetField;
        
        private DataObjectReference referenceWellboreField;
        
        private string uidWellCompletionField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well completion that contains the completion.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well completion that contains the completion.")]
        public string NameWellCompletion {
            get {
                return this.nameWellCompletionField;
            }
            set {
                this.nameWellCompletionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>CompletionNo, etc API14</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("CompletionNo, etc API14")]
        public string WellboreCompletionNo {
            get {
                return this.wellboreCompletionNoField;
            }
            set {
                this.wellboreCompletionNoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Preferred alias name</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Preferred alias name")]
        public string WellboreCompletionAlias {
            get {
                return this.wellboreCompletionAliasField;
            }
            set {
                this.wellboreCompletionAliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EventHistory")]
        public EventInfo[] EventHistory {
            get {
                return this.eventHistoryField;
            }
            set {
                this.eventHistoryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Completion Date</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Completion Date")]
        public string WellboreCompletionDate {
            get {
                return this.wellboreCompletionDateField;
            }
            set {
                this.wellboreCompletionDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>API suffix.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("API suffix.")]
        public string SuffixAPI {
            get {
                return this.suffixAPIField;
            }
            set {
                this.suffixAPIField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Overall measured depth interval for this wellbore completion.</summary>
        [System.ComponentModel.DescriptionAttribute("Overall measured depth interval for this wellbore completion.")]
        public MdInterval CompletionMdInterval {
            get {
                return this.completionMdIntervalField;
            }
            set {
                this.completionMdIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Overall true vertical depth interval for this wellbore completion.</summary>
        [System.ComponentModel.DescriptionAttribute("Overall true vertical depth interval for this wellbore completion.")]
        public TvdInterval CompletionTvdInterval {
            get {
                return this.completionTvdIntervalField;
            }
            set {
                this.completionTvdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentStatus {
            get {
                return this.currentStatusField;
            }
            set {
                this.currentStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        public string StatusDate {
            get {
                return this.statusDateField;
            }
            set {
                this.statusDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StatusHistory")]
        public CompletionStatusHistory[] StatusHistory {
            get {
                return this.statusHistoryField;
            }
            set {
                this.statusHistoryField = value;
            }
        }
        
        /// <remarks/>
        public ContactIntervalSet ContactIntervalSet {
            get {
                return this.contactIntervalSetField;
            }
            set {
                this.contactIntervalSetField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference ReferenceWellbore {
            get {
                return this.referenceWellboreField;
            }
            set {
                this.referenceWellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uidWellCompletion {
            get {
                return this.uidWellCompletionField;
            }
            set {
                this.uidWellCompletionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("WellCompletion", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_WellCompletion : AbstractObject {
        
        private string fieldIDField;
        
        private string fieldCodeField;
        
        private string fieldTypeField;
        
        private string effectiveDateField;
        
        private string expiredDateField;
        
        private string e_P_RightsIDField;
        
        private string currentStatusField;
        
        private string statusDateField;
        
        private CompletionStatusHistory[] statusHistoryField;
        
        private DataObjectReference referenceWellField;
        
        /// <remarks/>
        /// <summary>Field ID.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Field ID.")]
        public string FieldID {
            get {
                return this.fieldIDField;
            }
            set {
                this.fieldIDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Field code.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Field code.")]
        public string FieldCode {
            get {
                return this.fieldCodeField;
            }
            set {
                this.fieldCodeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Field type.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Field type.")]
        public string FieldType {
            get {
                return this.fieldTypeField;
            }
            set {
                this.fieldTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Field date.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Field date.")]
        public string EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Expiration date</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Expiration date")]
        public string ExpiredDate {
            get {
                return this.expiredDateField;
            }
            set {
                this.expiredDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Documents exploration and production rights</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Documents exploration and production rights")]
        public string E_P_RightsID {
            get {
                return this.e_P_RightsIDField;
            }
            set {
                this.e_P_RightsIDField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentStatus {
            get {
                return this.currentStatusField;
            }
            set {
                this.currentStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        public string StatusDate {
            get {
                return this.statusDateField;
            }
            set {
                this.statusDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StatusHistory")]
        public CompletionStatusHistory[] StatusHistory {
            get {
                return this.statusHistoryField;
            }
            set {
                this.statusHistoryField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference ReferenceWell {
            get {
                return this.referenceWellField;
            }
            set {
                this.referenceWellField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("ToolErrorTermSet", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_ToolErrorTermSet : AbstractObject {
        
        private IscwsaAuthorizationData authorizationField;
        
        private IscwsaNomenclature nomenclatureField;
        
        private IscwsaErrorTerm[] errorTermField;
        
        /// <remarks/>
        public IscwsaAuthorizationData Authorization {
            get {
                return this.authorizationField;
            }
            set {
                this.authorizationField = value;
            }
        }
        
        /// <remarks/>
        public IscwsaNomenclature Nomenclature {
            get {
                return this.nomenclatureField;
            }
            set {
                this.nomenclatureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ErrorTerm")]
        public IscwsaErrorTerm[] ErrorTerm {
            get {
                return this.errorTermField;
            }
            set {
                this.errorTermField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("ToolErrorModel", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_ToolErrorModel : AbstractObject {
        
        private string typeSurveyToolField;
        
        private string useErrorTermSetField;
        
        private IscwsaAuthorizationData authorizationField;
        
        private IscwsaSurveyToolOperatingCondition[] operatingConditionField;
        
        private IscwsaSurveyToolOperatingInterval[] operatingIntervalField;
        
        private IscwsaModelParameters modelParametersField;
        
        private IscwsaErrorTermValue[] errorTermValueField;
        
        /// <remarks/>
        public string TypeSurveyTool {
            get {
                return this.typeSurveyToolField;
            }
            set {
                this.typeSurveyToolField = value;
            }
        }
        
        /// <remarks/>
        public string UseErrorTermSet {
            get {
                return this.useErrorTermSetField;
            }
            set {
                this.useErrorTermSetField = value;
            }
        }
        
        /// <remarks/>
        public IscwsaAuthorizationData Authorization {
            get {
                return this.authorizationField;
            }
            set {
                this.authorizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OperatingCondition")]
        public IscwsaSurveyToolOperatingCondition[] OperatingCondition {
            get {
                return this.operatingConditionField;
            }
            set {
                this.operatingConditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OperatingInterval")]
        public IscwsaSurveyToolOperatingInterval[] OperatingInterval {
            get {
                return this.operatingIntervalField;
            }
            set {
                this.operatingIntervalField = value;
            }
        }
        
        /// <remarks/>
        public IscwsaModelParameters ModelParameters {
            get {
                return this.modelParametersField;
            }
            set {
                this.modelParametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ErrorTermValue")]
        public IscwsaErrorTermValue[] ErrorTermValue {
            get {
                return this.errorTermValueField;
            }
            set {
                this.errorTermValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("StimJob", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_StimJob : AbstractObject {
        
        private PressureMeasure avgJobPresField;
        
        private ThermodynamicTemperatureMeasure bottomholeStaticTemperatureField;
        
        private PIDXCommodityCode commodityCodeField;
        
        private bool commodityCodeFieldSpecified;
        
        private string commonDataField;
        
        private string customerNameField;
        
        private string dTimArrivalField;
        
        private string dTimEndField;
        
        private string dTimStartField;
        
        private PressureMeasure flowBackPresField;
        
        private VolumePerTimeMeasure flowBackRateField;
        
        private VolumeMeasure flowBackVolumeField;
        
        private VolumePerVolumeMeasure fluidEfficiencyField;
        
        private PowerMeasure hhpOrderedField;
        
        private PowerMeasure hhpUsedField;
        
        private string kindField;
        
        private StimMaterialLibrary materialsField;
        
        private VolumePerTimeMeasure maxFluidRateField;
        
        private PressureMeasure maxJobPresField;
        
        private string serviceCompanyField;
        
        private long stageCountField;
        
        private bool stageCountFieldSpecified;
        
        private string supervisorField;
        
        private VolumeMeasure totalJobVolumeField;
        
        private MassMeasure totalProppantInFormationField;
        
        private MassMeasure totalProppantUsedField;
        
        private TimeMeasure totalPumpTimeField;
        
        private ThermodynamicTemperatureMeasure treatingBottomholeTemperatureField;
        
        private DataObjectReference wellField;
        
        private StimLogLibrary logField;
        
        private DataObjectReference[] stageField;
        
        private TO_BE_DELETED_WellIdentification wellIDField;
        
        private StimMaterialQuantity[] materialUsedField;
        
        private StimPerforationsClustersLibrary stimPerforationsClustersLibraryField;
        
        private StimLogLibrary stimLogLibraryField;
        
        /// <remarks/>
        /// <summary>Average pressure encountered during treatment of all stages.</summary>
        [System.ComponentModel.DescriptionAttribute("Average pressure encountered during treatment of all stages.")]
        public PressureMeasure AvgJobPres {
            get {
                return this.avgJobPresField;
            }
            set {
                this.avgJobPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bottomhole static temperature for the job.</summary>
        [System.ComponentModel.DescriptionAttribute("Bottomhole static temperature for the job.")]
        public ThermodynamicTemperatureMeasure BottomholeStaticTemperature {
            get {
                return this.bottomholeStaticTemperatureField;
            }
            set {
                this.bottomholeStaticTemperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>UNSPSC(Segment 71) Commodity Code from Oil and gas extraction and production enhancement services family.</summary>
        [System.ComponentModel.DescriptionAttribute("UNSPSC(Segment 71) Commodity Code from Oil and gas extraction and production enha" +
            "ncement services family.")]
        public PIDXCommodityCode CommodityCode {
            get {
                return this.commodityCodeField;
            }
            set {
                this.commodityCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommodityCodeSpecified {
            get {
                return this.commodityCodeFieldSpecified;
            }
            set {
                this.commodityCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data objects.")]
        public string CommonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Customer or company name.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Customer or company name.")]
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time at which the stimulation contractor arrives on location.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time at which the stimulation contractor arrives on location.")]
        public string DTimArrival {
            get {
                return this.dTimArrivalField;
            }
            set {
                this.dTimArrivalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ending date and time of stimulation job.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Ending date and time of stimulation job.")]
        public string DTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Start date and time of the stimulation job.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Start date and time of the stimulation job.")]
        public string DTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure recorded on fluid returning to surface.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure recorded on fluid returning to surface.")]
        public PressureMeasure FlowBackPres {
            get {
                return this.flowBackPresField;
            }
            set {
                this.flowBackPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rate recorded on fluid returning to surface.</summary>
        [System.ComponentModel.DescriptionAttribute("Rate recorded on fluid returning to surface.")]
        public VolumePerTimeMeasure FlowBackRate {
            get {
                return this.flowBackRateField;
            }
            set {
                this.flowBackRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume recorded on fluid returning to surface.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume recorded on fluid returning to surface.")]
        public VolumeMeasure FlowBackVolume {
            get {
                return this.flowBackVolumeField;
            }
            set {
                this.flowBackVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Percentage of fluid volume in the fracture at the end of pumping.</summary>
        [System.ComponentModel.DescriptionAttribute("Percentage of fluid volume in the fracture at the end of pumping.")]
        public VolumePerVolumeMeasure FluidEfficiency {
            get {
                return this.fluidEfficiencyField;
            }
            set {
                this.fluidEfficiencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hydraulic horsepower ordered for the stimulation job.</summary>
        [System.ComponentModel.DescriptionAttribute("Hydraulic horsepower ordered for the stimulation job.")]
        public PowerMeasure HhpOrdered {
            get {
                return this.hhpOrderedField;
            }
            set {
                this.hhpOrderedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hydraulic horsepower actually used for the stimulation job.</summary>
        [System.ComponentModel.DescriptionAttribute("Hydraulic horsepower actually used for the stimulation job.")]
        public PowerMeasure HhpUsed {
            get {
                return this.hhpUsedField;
            }
            set {
                this.hhpUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of well stimulation job.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Type of well stimulation job.")]
        public string Kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        public StimMaterialLibrary Materials {
            get {
                return this.materialsField;
            }
            set {
                this.materialsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum job fluid pumping rate encountered during treatment of all stage.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum job fluid pumping rate encountered during treatment of all stage.")]
        public VolumePerTimeMeasure MaxFluidRate {
            get {
                return this.maxFluidRateField;
            }
            set {
                this.maxFluidRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum pressure encountered during the job.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum pressure encountered during the job.")]
        public PressureMeasure MaxJobPres {
            get {
                return this.maxJobPresField;
            }
            set {
                this.maxJobPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of the well stimulation contractor.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Name of the well stimulation contractor.")]
        public string ServiceCompany {
            get {
                return this.serviceCompanyField;
            }
            set {
                this.serviceCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of stages treated during the stimulation service.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of stages treated during the stimulation service.")]
        public long StageCount {
            get {
                return this.stageCountField;
            }
            set {
                this.stageCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StageCountSpecified {
            get {
                return this.stageCountFieldSpecified;
            }
            set {
                this.stageCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of service company supervisor.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of service company supervisor.")]
        public string Supervisor {
            get {
                return this.supervisorField;
            }
            set {
                this.supervisorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total volume pumped for all stages.</summary>
        [System.ComponentModel.DescriptionAttribute("Total volume pumped for all stages.")]
        public VolumeMeasure TotalJobVolume {
            get {
                return this.totalJobVolumeField;
            }
            set {
                this.totalJobVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mass of proppant placed in the formation.</summary>
        [System.ComponentModel.DescriptionAttribute("The mass of proppant placed in the formation.")]
        public MassMeasure TotalProppantInFormation {
            get {
                return this.totalProppantInFormationField;
            }
            set {
                this.totalProppantInFormationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>{Get this from WITSML 1.4.1.1, which Clinton removed.}</summary>
        [System.ComponentModel.DescriptionAttribute("{Get this from WITSML 1.4.1.1, which Clinton removed.}")]
        public MassMeasure TotalProppantUsed {
            get {
                return this.totalProppantUsedField;
            }
            set {
                this.totalProppantUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The total pumping time.</summary>
        [System.ComponentModel.DescriptionAttribute("The total pumping time.")]
        public TimeMeasure TotalPumpTime {
            get {
                return this.totalPumpTimeField;
            }
            set {
                this.totalPumpTimeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Expected or calculated bottomhole treating temperature for the job.</summary>
        [System.ComponentModel.DescriptionAttribute("Expected or calculated bottomhole treating temperature for the job.")]
        public ThermodynamicTemperatureMeasure TreatingBottomholeTemperature {
            get {
                return this.treatingBottomholeTemperatureField;
            }
            set {
                this.treatingBottomholeTemperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information regarding well the job was performed on.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Information regarding well the job was performed on.")]
        public DataObjectReference Well {
            get {
                return this.wellField;
            }
            set {
                this.wellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Low Frequency Log Data. To be Referenced from Stages</summary>
        [System.ComponentModel.DescriptionAttribute("Low Frequency Log Data. To be Referenced from Stages")]
        public StimLogLibrary Log {
            get {
                return this.logField;
            }
            set {
                this.logField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A stage treated during the stimulation job.</summary>
        [System.Xml.Serialization.XmlElementAttribute("Stage")]
        [System.ComponentModel.DescriptionAttribute("A stage treated during the stimulation job.")]
        public DataObjectReference[] Stage {
            get {
                return this.stageField;
            }
            set {
                this.stageField = value;
            }
        }
        
        /// <remarks/>
        public TO_BE_DELETED_WellIdentification WellID {
            get {
                return this.wellIDField;
            }
            set {
                this.wellIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MaterialUsed")]
        public StimMaterialQuantity[] MaterialUsed {
            get {
                return this.materialUsedField;
            }
            set {
                this.materialUsedField = value;
            }
        }
        
        /// <remarks/>
        public StimPerforationsClustersLibrary StimPerforationsClustersLibrary {
            get {
                return this.stimPerforationsClustersLibraryField;
            }
            set {
                this.stimPerforationsClustersLibraryField = value;
            }
        }
        
        /// <remarks/>
        public StimLogLibrary StimLogLibrary {
            get {
                return this.stimLogLibraryField;
            }
            set {
                this.stimLogLibraryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum PIDXCommodityCode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131001")]
        Item71131001,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131002")]
        Item71131002,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131003")]
        Item71131003,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131004")]
        Item71131004,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131005")]
        Item71131005,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131006")]
        Item71131006,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131007")]
        Item71131007,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131008")]
        Item71131008,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131009")]
        Item71131009,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131010")]
        Item71131010,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131011")]
        Item71131011,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131012")]
        Item71131012,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131013")]
        Item71131013,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131014")]
        Item71131014,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131015")]
        Item71131015,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131016")]
        Item71131016,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131018")]
        Item71131018,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("71131019")]
        Item71131019,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("StimJobStage", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_StimJobStage : AbstractObject {
        
        private VolumeMeasure avgBaseFluidReturnVolumePerMinuteField;
        
        private LengthMeasure fractureHeightField;
        
        private VolumePerVolumeMeasure percentPadField;
        
        private ThermodynamicTemperatureMeasure avgBHStaticTemperatureField;
        
        private ThermodynamicTemperatureMeasure avgBHTreatingTemperatureField;
        
        private VolumeMeasure avgBottomholePumpedVolumePerMinuteField;
        
        private LengthPerTimeMeasure avgConductivityField;
        
        private LengthMeasure avgFractureWidthField;
        
        private PowerMeasure avgHydraulicPowerField;
        
        private PressureMeasure avgPresAnnulusField;
        
        private PressureMeasure avgPresCasingField;
        
        private PressureMeasure avgPresSurfaceField;
        
        private PressureMeasure avgPresTubingField;
        
        private MassPerVolumeMeasure avgProppantConcBottomholeField;
        
        private MassPerVolumeMeasure avgProppantConcSurfaceField;
        
        private VolumeMeasure avgSlurryReturnPerMinuteField;
        
        private PressureMeasure breakDownPresField;
        
        private TimeMeasure closureDurationField;
        
        private PressureMeasure closurePresField;
        
        private string dTimEndField;
        
        private string dTimStartField;
        
        private ExtensionNameValue[] extensionNameValue1Field;
        
        private LengthMeasure formationBreakLengthPerDayField;
        
        private string formationNameField;
        
        private MassMeasure formationProppantMassField;
        
        private ForcePerVolumeMeasure fractureGradientFinalField;
        
        private ForcePerVolumeMeasure fractureGradientInitialField;
        
        private LengthMeasure fractureLengthField;
        
        private PressureMeasure frictionPressureField;
        
        private PowerMeasure hhpOrderedCO2Field;
        
        private PowerMeasure hhpOrderedFluidField;
        
        private PowerMeasure hhpUsedCO2Field;
        
        private PowerMeasure hhpUsedFluidField;
        
        private PowerMeasure initialShutinPresField;
        
        private VolumeMeasure maxFluidVolumePerMinuteAnnulusField;
        
        private VolumeMeasure maxFluidVolumePerMinuteCasingField;
        
        private VolumeMeasure maxFluidVolumePerMinuteTubingField;
        
        private PowerMeasure maxHydraulicPowerField;
        
        private PressureMeasure maxPresAnnulusField;
        
        private PressureMeasure maxPresCasingField;
        
        private PressureMeasure maxPresSurfaceField;
        
        private PressureMeasure maxPresTubingField;
        
        private MassPerVolumeMeasure maxProppantConcBottomholeField;
        
        private MassPerVolumeMeasure maxProppantConcSurfaceField;
        
        private MeasuredDepthCoord mdFormationBottomField;
        
        private MeasuredDepthCoord mdFormationTopField;
        
        private MeasuredDepthCoord mdOpenHoleBottomField;
        
        private MeasuredDepthCoord mdOpenHoleTopField;
        
        private string nameField;
        
        private PressureMeasure netPresField;
        
        private long numberField;
        
        private bool numberFieldSpecified;
        
        private LengthMeasure openHoleDiameterField;
        
        private string openHoleNameField;
        
        private VolumePerVolumeMeasure percentProppantPumpedField;
        
        private long perfBallCountField;
        
        private bool perfBallCountFieldSpecified;
        
        private LengthMeasure perfBallSizeField;
        
        private MassPerVolumeMeasure perfProppantConcField;
        
        private LengthMeasure proppantHeightField;
        
        private bool screenedOutField;
        
        private bool screenedOutFieldSpecified;
        
        private PressureMeasure screenOutPresField;
        
        private MassMeasure totalProppantInFormationField;
        
        private TimeMeasure totalPumpTimeField;
        
        private VolumeMeasure totalVolumeField;
        
        private WellVerticalDepthCoord tvdFormationBottomField;
        
        private WellVerticalDepthCoord tvdFormationTopField;
        
        private WellVerticalDepthCoord tvdOpenHoleBottomField;
        
        private WellVerticalDepthCoord tvdOpenHoleTopField;
        
        private VolumeMeasure volumeBodyField;
        
        private VolumeMeasure volumeFlushField;
        
        private VolumeMeasure volumePadField;
        
        private string waterSourceField;
        
        private MassMeasure wellboreProppantMassField;
        
        private string technologyTypeField;
        
        private string logRefField;
        
        private StimPdatSession[] pdatSessionField;
        
        private StimShutInPressure[] shutInPresField;
        
        private StimEvent[] jobEventField;
        
        private StimJobStep[] jobStepField;
        
        private StimMaterialQuantity[] maxMaterialUsagePerMinuteField;
        
        private StimMaterialQuantity[] materialUsedField;
        
        private StimFlowPath flowPathField;
        
        private DataObjectReference logField;
        
        private StimReservoirInterval[] reservoirIntervalField;
        
        private StimJobDiversion stimJobDiversionField;
        
        private RefLibrary perforationsClustersField;
        
        /// <remarks/>
        /// <summary>Average base fluid pumping rate of all steps for stage treatment.</summary>
        [System.ComponentModel.DescriptionAttribute("Average base fluid pumping rate of all steps for stage treatment.")]
        public VolumeMeasure AvgBaseFluidReturnVolumePerMinute {
            get {
                return this.avgBaseFluidReturnVolumePerMinuteField;
            }
            set {
                this.avgBaseFluidReturnVolumePerMinuteField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The height of the fracture.</summary>
        [System.ComponentModel.DescriptionAttribute("The height of the fracture.")]
        public LengthMeasure FractureHeight {
            get {
                return this.fractureHeightField;
            }
            set {
                this.fractureHeightField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The percentage of volume pumped used for the pad.</summary>
        [System.ComponentModel.DescriptionAttribute("The percentage of volume pumped used for the pad.")]
        public VolumePerVolumeMeasure PercentPad {
            get {
                return this.percentPadField;
            }
            set {
                this.percentPadField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average static temperature of the wellbore injection point(s) or formation at equilibrium (steady state) with no fluid or tool movement, allowing for equilibrium conditions at the wellbore injection point; (BHST: bottom hole static temperature).</summary>
        [System.ComponentModel.DescriptionAttribute("The average static temperature of the wellbore injection point(s) or formation at" +
            " equilibrium (steady state) with no fluid or tool movement, allowing for equilib" +
            "rium conditions at the wellbore injection point; (BHST: bottom hole static tempe" +
            "rature).")]
        public ThermodynamicTemperatureMeasure AvgBHStaticTemperature {
            get {
                return this.avgBHStaticTemperatureField;
            }
            set {
                this.avgBHStaticTemperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average measured or calculated temperature of the wellbore during the treating with well fluid injection or circulation of the wellbore at the point of interest. Point of interest is generally the injection point or region of interest for the test or treatment.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The average measured or calculated temperature of the wellbore during the treating with well fluid injection or circulation of the wellbore at the point of interest. Point of interest is generally the injection point or region of interest for the test or treatment.")]
        public ThermodynamicTemperatureMeasure AvgBHTreatingTemperature {
            get {
                return this.avgBHTreatingTemperatureField;
            }
            set {
                this.avgBHTreatingTemperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average bottomhole treatment flow rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Average bottomhole treatment flow rate.")]
        public VolumeMeasure AvgBottomholePumpedVolumePerMinute {
            get {
                return this.avgBottomholePumpedVolumePerMinuteField;
            }
            set {
                this.avgBottomholePumpedVolumePerMinuteField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average conductivity of fracture created during the treatment supported by proppant during the stimulation services Hydraulic conductivity, symbolically represented as K, is a property of vascular plants, soil or rock, that describes the ease with which water can move through pore spaces or fractures. It depends on the intrinsic permeability of the material and on the degree of saturation. Saturated hydraulic conductivity, Ksat, describes water movement through saturated media.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Average conductivity of fracture created during the treatment supported by proppant during the stimulation services Hydraulic conductivity, symbolically represented as K, is a property of vascular plants, soil or rock, that describes the ease with which water can move through pore spaces or fractures. It depends on the intrinsic permeability of the material and on the degree of saturation. Saturated hydraulic conductivity, Ksat, describes water movement through saturated media.")]
        public LengthPerTimeMeasure AvgConductivity {
            get {
                return this.avgConductivityField;
            }
            set {
                this.avgConductivityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average fracture width created during the treatment of the stage..</summary>
        [System.ComponentModel.DescriptionAttribute("Average fracture width created during the treatment of the stage..")]
        public LengthMeasure AvgFractureWidth {
            get {
                return this.avgFractureWidthField;
            }
            set {
                this.avgFractureWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public PowerMeasure AvgHydraulicPower {
            get {
                return this.avgHydraulicPowerField;
            }
            set {
                this.avgHydraulicPowerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average annulus pressure for any step for the stage treatment.</summary>
        [System.ComponentModel.DescriptionAttribute("The average annulus pressure for any step for the stage treatment.")]
        public PressureMeasure AvgPresAnnulus {
            get {
                return this.avgPresAnnulusField;
            }
            set {
                this.avgPresAnnulusField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average casing pressure of any step for the stage treatment.</summary>
        [System.ComponentModel.DescriptionAttribute("The average casing pressure of any step for the stage treatment.")]
        public PressureMeasure AvgPresCasing {
            get {
                return this.avgPresCasingField;
            }
            set {
                this.avgPresCasingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average pressure for treating the stage across all steps.</summary>
        [System.ComponentModel.DescriptionAttribute("The average pressure for treating the stage across all steps.")]
        public PressureMeasure AvgPresSurface {
            get {
                return this.avgPresSurfaceField;
            }
            set {
                this.avgPresSurfaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average tubing pressure of any step for the stage treatment.</summary>
        [System.ComponentModel.DescriptionAttribute("The average tubing pressure of any step for the stage treatment.")]
        public PressureMeasure AvgPresTubing {
            get {
                return this.avgPresTubingField;
            }
            set {
                this.avgPresTubingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average proppant concentration at the bottom of the hole.</summary>
        [System.ComponentModel.DescriptionAttribute("The average proppant concentration at the bottom of the hole.")]
        public MassPerVolumeMeasure AvgProppantConcBottomhole {
            get {
                return this.avgProppantConcBottomholeField;
            }
            set {
                this.avgProppantConcBottomholeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average proppant concentration on the surface.</summary>
        [System.ComponentModel.DescriptionAttribute("The average proppant concentration on the surface.")]
        public MassPerVolumeMeasure AvgProppantConcSurface {
            get {
                return this.avgProppantConcSurfaceField;
            }
            set {
                this.avgProppantConcSurfaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average slurry return rate of all step for the stage treatment.</summary>
        [System.ComponentModel.DescriptionAttribute("Average slurry return rate of all step for the stage treatment.")]
        public VolumeMeasure AvgSlurryReturnPerMinute {
            get {
                return this.avgSlurryReturnPerMinuteField;
            }
            set {
                this.avgSlurryReturnPerMinuteField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pressure at which the formation fractures and accepts injected fluid.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure at which the formation fractures and accepts injected fluid.")]
        public PressureMeasure BreakDownPres {
            get {
                return this.breakDownPresField;
            }
            set {
                this.breakDownPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Delta time recorded for the closure of the fracture to occur during the stage treatment.</summary>
        [System.ComponentModel.DescriptionAttribute("Delta time recorded for the closure of the fracture to occur during the stage tre" +
            "atment.")]
        public TimeMeasure ClosureDuration {
            get {
                return this.closureDurationField;
            }
            set {
                this.closureDurationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An analysis parameter used in hydraulic fracture design to indicate the pressure at which the fracture effectively closes without proppant in place.</summary>
        [System.ComponentModel.DescriptionAttribute("An analysis parameter used in hydraulic fracture design to indicate the pressure " +
            "at which the fracture effectively closes without proppant in place.")]
        public PressureMeasure ClosurePres {
            get {
                return this.closurePresField;
            }
            set {
                this.closurePresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ending date and time for the stage treatment.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Ending date and time for the stage treatment.")]
        public string DTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Starting date and time for the stage treatment.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Starting date and time for the stage treatment.")]
        public string DTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue1 {
            get {
                return this.extensionNameValue1Field;
            }
            set {
                this.extensionNameValue1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The length of formation broken per day.</summary>
        [System.ComponentModel.DescriptionAttribute("The length of formation broken per day.")]
        public LengthMeasure FormationBreakLengthPerDay {
            get {
                return this.formationBreakLengthPerDayField;
            }
            set {
                this.formationBreakLengthPerDayField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the formation being stimulated.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("The name of the formation being stimulated.")]
        public string FormationName {
            get {
                return this.formationNameField;
            }
            set {
                this.formationNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The weight of proppant placed in the formation.</summary>
        [System.ComponentModel.DescriptionAttribute("The weight of proppant placed in the formation.")]
        public MassMeasure FormationProppantMass {
            get {
                return this.formationProppantMassField;
            }
            set {
                this.formationProppantMassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The formation fracture gradient for the stage after treatment.</summary>
        [System.ComponentModel.DescriptionAttribute("The formation fracture gradient for the stage after treatment.")]
        public ForcePerVolumeMeasure FractureGradientFinal {
            get {
                return this.fractureGradientFinalField;
            }
            set {
                this.fractureGradientFinalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The formation fracture gradient for stage before treatment.</summary>
        [System.ComponentModel.DescriptionAttribute("The formation fracture gradient for stage before treatment.")]
        public ForcePerVolumeMeasure FractureGradientInitial {
            get {
                return this.fractureGradientInitialField;
            }
            set {
                this.fractureGradientInitialField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The length of the fracture created after treating the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("The length of the fracture created after treating the stage.")]
        public LengthMeasure FractureLength {
            get {
                return this.fractureLengthField;
            }
            set {
                this.fractureLengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Friction Pressure loss.</summary>
        [System.ComponentModel.DescriptionAttribute("Friction Pressure loss.")]
        public PressureMeasure FrictionPressure {
            get {
                return this.frictionPressureField;
            }
            set {
                this.frictionPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Carbon dioxide hydraulic horsepower ordered for the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("Carbon dioxide hydraulic horsepower ordered for the stage.")]
        public PowerMeasure HhpOrderedCO2 {
            get {
                return this.hhpOrderedCO2Field;
            }
            set {
                this.hhpOrderedCO2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid hydraulic horsepower ordered for the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluid hydraulic horsepower ordered for the stage.")]
        public PowerMeasure HhpOrderedFluid {
            get {
                return this.hhpOrderedFluidField;
            }
            set {
                this.hhpOrderedFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Carbon dioxide hydraulic horsepower actually used for the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("Carbon dioxide hydraulic horsepower actually used for the stage.")]
        public PowerMeasure HhpUsedCO2 {
            get {
                return this.hhpUsedCO2Field;
            }
            set {
                this.hhpUsedCO2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid hydraulic horsepower actually used for the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluid hydraulic horsepower actually used for the stage.")]
        public PowerMeasure HhpUsedFluid {
            get {
                return this.hhpUsedFluidField;
            }
            set {
                this.hhpUsedFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The initial shut-in pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The initial shut-in pressure.")]
        public PowerMeasure InitialShutinPres {
            get {
                return this.initialShutinPresField;
            }
            set {
                this.initialShutinPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum annulus fluid pumping rate of any step while treating the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum annulus fluid pumping rate of any step while treating the stage.")]
        public VolumeMeasure MaxFluidVolumePerMinuteAnnulus {
            get {
                return this.maxFluidVolumePerMinuteAnnulusField;
            }
            set {
                this.maxFluidVolumePerMinuteAnnulusField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum casing fluid pumping rate of any step while treating the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum casing fluid pumping rate of any step while treating the stage.")]
        public VolumeMeasure MaxFluidVolumePerMinuteCasing {
            get {
                return this.maxFluidVolumePerMinuteCasingField;
            }
            set {
                this.maxFluidVolumePerMinuteCasingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum tubing fluid pumping rate of any step while treating the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum tubing fluid pumping rate of any step while treating the stage.")]
        public VolumeMeasure MaxFluidVolumePerMinuteTubing {
            get {
                return this.maxFluidVolumePerMinuteTubingField;
            }
            set {
                this.maxFluidVolumePerMinuteTubingField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public PowerMeasure MaxHydraulicPower {
            get {
                return this.maxHydraulicPowerField;
            }
            set {
                this.maxHydraulicPowerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The highest annulus pressure of any step while treating the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("The highest annulus pressure of any step while treating the stage.")]
        public PressureMeasure MaxPresAnnulus {
            get {
                return this.maxPresAnnulusField;
            }
            set {
                this.maxPresAnnulusField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The highest casing pressure of any step while treating the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("The highest casing pressure of any step while treating the stage.")]
        public PressureMeasure MaxPresCasing {
            get {
                return this.maxPresCasingField;
            }
            set {
                this.maxPresCasingField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public PressureMeasure MaxPresSurface {
            get {
                return this.maxPresSurfaceField;
            }
            set {
                this.maxPresSurfaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The highest tubing pressure of any step while treating the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("The highest tubing pressure of any step while treating the stage.")]
        public PressureMeasure MaxPresTubing {
            get {
                return this.maxPresTubingField;
            }
            set {
                this.maxPresTubingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum proppant concentration at the bottom of the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum proppant concentration at the bottom of the wellbore.")]
        public MassPerVolumeMeasure MaxProppantConcBottomhole {
            get {
                return this.maxProppantConcBottomholeField;
            }
            set {
                this.maxProppantConcBottomholeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum proppant concentration on the surface.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum proppant concentration on the surface.")]
        public MassPerVolumeMeasure MaxProppantConcSurface {
            get {
                return this.maxProppantConcSurfaceField;
            }
            set {
                this.maxProppantConcSurfaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of the bottom of the formation.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of the bottom of the formation.")]
        public MeasuredDepthCoord MdFormationBottom {
            get {
                return this.mdFormationBottomField;
            }
            set {
                this.mdFormationBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of the top of the formation.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of the top of the formation.")]
        public MeasuredDepthCoord MdFormationTop {
            get {
                return this.mdFormationTopField;
            }
            set {
                this.mdFormationTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of the bottom open hole.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of the bottom open hole.")]
        public MeasuredDepthCoord MdOpenHoleBottom {
            get {
                return this.mdOpenHoleBottomField;
            }
            set {
                this.mdOpenHoleBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of the top open hole.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of the top open hole.")]
        public MeasuredDepthCoord MdOpenHoleTop {
            get {
                return this.mdOpenHoleTopField;
            }
            set {
                this.mdOpenHoleTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The human recognizable name of the stage.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("The human recognizable name of the stage.")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The difference between the pressure which holds a fracture closed (minimal principal stress) and that pressure which is necessary to open the fracture.</summary>
        [System.ComponentModel.DescriptionAttribute("The difference between the pressure which holds a fracture closed (minimal princi" +
            "pal stress) and that pressure which is necessary to open the fracture.")]
        public PressureMeasure NetPres {
            get {
                return this.netPresField;
            }
            set {
                this.netPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number associated with the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("The number associated with the stage.")]
        public long Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberSpecified {
            get {
                return this.numberFieldSpecified;
            }
            set {
                this.numberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The diameter of the open hole.</summary>
        [System.ComponentModel.DescriptionAttribute("The diameter of the open hole.")]
        public LengthMeasure OpenHoleDiameter {
            get {
                return this.openHoleDiameterField;
            }
            set {
                this.openHoleDiameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A name for the open hole. To be used for open hole completions.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("A name for the open hole. To be used for open hole completions.")]
        public string OpenHoleName {
            get {
                return this.openHoleNameField;
            }
            set {
                this.openHoleNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total proppant mass used as a percent of the design mass.</summary>
        [System.ComponentModel.DescriptionAttribute("Total proppant mass used as a percent of the design mass.")]
        public VolumePerVolumeMeasure PercentProppantPumped {
            get {
                return this.percentProppantPumpedField;
            }
            set {
                this.percentProppantPumpedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total number of perforation balls used while treating the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("Total number of perforation balls used while treating the stage.")]
        public long PerfBallCount {
            get {
                return this.perfBallCountField;
            }
            set {
                this.perfBallCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PerfBallCountSpecified {
            get {
                return this.perfBallCountFieldSpecified;
            }
            set {
                this.perfBallCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The size of the perforation balls used while treating the stage</summary>
        [System.ComponentModel.DescriptionAttribute("The size of the perforation balls used while treating the stage")]
        public LengthMeasure PerfBallSize {
            get {
                return this.perfBallSizeField;
            }
            set {
                this.perfBallSizeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The proppant concentration at the perforations.</summary>
        [System.ComponentModel.DescriptionAttribute("The proppant concentration at the perforations.")]
        public MassPerVolumeMeasure PerfProppantConc {
            get {
                return this.perfProppantConcField;
            }
            set {
                this.perfProppantConcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The proppant height.</summary>
        [System.ComponentModel.DescriptionAttribute("The proppant height.")]
        public LengthMeasure ProppantHeight {
            get {
                return this.proppantHeightField;
            }
            set {
                this.proppantHeightField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Boolean as to whether or not screen out occurred. True ("true" or "1") indicates that screen out occurred. False ("false" or "0") or not given indicates otherwise.</summary>
        [System.ComponentModel.DescriptionAttribute("Boolean as to whether or not screen out occurred. True (\"true\" or \"1\") indicates " +
            "that screen out occurred. False (\"false\" or \"0\") or not given indicates otherwis" +
            "e.")]
        public bool ScreenedOut {
            get {
                return this.screenedOutField;
            }
            set {
                this.screenedOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScreenedOutSpecified {
            get {
                return this.screenedOutFieldSpecified;
            }
            set {
                this.screenedOutFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The screen out pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The screen out pressure.")]
        public PressureMeasure ScreenOutPres {
            get {
                return this.screenOutPresField;
            }
            set {
                this.screenOutPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The total amount of proppant in formation relative to the current stage.</summary>
        [System.ComponentModel.DescriptionAttribute("The total amount of proppant in formation relative to the current stage.")]
        public MassMeasure TotalProppantInFormation {
            get {
                return this.totalProppantInFormationField;
            }
            set {
                this.totalProppantInFormationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The total pumping time for the treatment of the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("The total pumping time for the treatment of the stage.")]
        public TimeMeasure TotalPumpTime {
            get {
                return this.totalPumpTimeField;
            }
            set {
                this.totalPumpTimeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The total volume pumped for all steps while treating the stage.</summary>
        [System.ComponentModel.DescriptionAttribute("The total volume pumped for all steps while treating the stage.")]
        public VolumeMeasure TotalVolume {
            get {
                return this.totalVolumeField;
            }
            set {
                this.totalVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth of the bottom of the formation.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth of the bottom of the formation.")]
        public WellVerticalDepthCoord TvdFormationBottom {
            get {
                return this.tvdFormationBottomField;
            }
            set {
                this.tvdFormationBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth of the top of the formation.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth of the top of the formation.")]
        public WellVerticalDepthCoord TvdFormationTop {
            get {
                return this.tvdFormationTopField;
            }
            set {
                this.tvdFormationTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth of the bottom open hole.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth of the bottom open hole.")]
        public WellVerticalDepthCoord TvdOpenHoleBottom {
            get {
                return this.tvdOpenHoleBottomField;
            }
            set {
                this.tvdOpenHoleBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth of the top open hole.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth of the top open hole.")]
        public WellVerticalDepthCoord TvdOpenHoleTop {
            get {
                return this.tvdOpenHoleTopField;
            }
            set {
                this.tvdOpenHoleTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume pumped for the body portion of the stage treatment.</summary>
        [System.ComponentModel.DescriptionAttribute("The volume pumped for the body portion of the stage treatment.")]
        public VolumeMeasure VolumeBody {
            get {
                return this.volumeBodyField;
            }
            set {
                this.volumeBodyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume pumped during flush portion of stage treatment.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume pumped during flush portion of stage treatment.")]
        public VolumeMeasure VolumeFlush {
            get {
                return this.volumeFlushField;
            }
            set {
                this.volumeFlushField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume pumped for pad portion of stage treatment.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume pumped for pad portion of stage treatment.")]
        public VolumeMeasure VolumePad {
            get {
                return this.volumePadField;
            }
            set {
                this.volumePadField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water source for fluid pumped during stage.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Water source for fluid pumped during stage.")]
        public string WaterSource {
            get {
                return this.waterSourceField;
            }
            set {
                this.waterSourceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The weight of proppant left in the wellbore after pumping has stopped.</summary>
        [System.ComponentModel.DescriptionAttribute("The weight of proppant left in the wellbore after pumping has stopped.")]
        public MassMeasure WellboreProppantMass {
            get {
                return this.wellboreProppantMassField;
            }
            set {
                this.wellboreProppantMassField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string TechnologyType {
            get {
                return this.technologyTypeField;
            }
            set {
                this.technologyTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>References to Log stored on StimJob level. Referenced by uuid of Log</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}")]
        [System.ComponentModel.DescriptionAttribute("References to Log stored on StimJob level. Referenced by uuid of Log")]
        public string LogRef {
            get {
                return this.logRefField;
            }
            set {
                this.logRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PdatSession")]
        public StimPdatSession[] PdatSession {
            get {
                return this.pdatSessionField;
            }
            set {
                this.pdatSessionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ShutInPres")]
        public StimShutInPressure[] ShutInPres {
            get {
                return this.shutInPresField;
            }
            set {
                this.shutInPresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("JobEvent")]
        public StimEvent[] JobEvent {
            get {
                return this.jobEventField;
            }
            set {
                this.jobEventField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("JobStep")]
        public StimJobStep[] JobStep {
            get {
                return this.jobStepField;
            }
            set {
                this.jobStepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MaxMaterialUsagePerMinute")]
        public StimMaterialQuantity[] MaxMaterialUsagePerMinute {
            get {
                return this.maxMaterialUsagePerMinuteField;
            }
            set {
                this.maxMaterialUsagePerMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MaterialUsed")]
        public StimMaterialQuantity[] MaterialUsed {
            get {
                return this.materialUsedField;
            }
            set {
                this.materialUsedField = value;
            }
        }
        
        /// <remarks/>
        public StimFlowPath FlowPath {
            get {
                return this.flowPathField;
            }
            set {
                this.flowPathField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference Log {
            get {
                return this.logField;
            }
            set {
                this.logField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ReservoirInterval")]
        public StimReservoirInterval[] ReservoirInterval {
            get {
                return this.reservoirIntervalField;
            }
            set {
                this.reservoirIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public StimJobDiversion StimJobDiversion {
            get {
                return this.stimJobDiversionField;
            }
            set {
                this.stimJobDiversionField = value;
            }
        }
        
        /// <remarks/>
        public RefLibrary PerforationsClusters {
            get {
                return this.perforationsClustersField;
            }
            set {
                this.perforationsClustersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("StimPerforationsCluster", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_StimPerforationsCluster : AbstractObject {
        
        private string typeField;
        
        private MeasuredDepthCoord mdPerforationsTopField;
        
        private MeasuredDepthCoord mdPerforationsBottomField;
        
        private WellVerticalDepthCoord tvdPerforationsTopField;
        
        private WellVerticalDepthCoord tvdPerforationsBottomField;
        
        private long perforationCountField;
        
        private bool perforationCountFieldSpecified;
        
        private LengthMeasure sizeField;
        
        private ReciprocalLengthMeasure densityPerforationField;
        
        private PlaneAngleMeasure phasingPerforationField;
        
        private string frictionFactorField;
        
        private PressureMeasure frictionPresField;
        
        private string dischargeCoefficientField;
        
        private ExtensionNameValue[] extensionNameValue1Field;
        
        /// <remarks/>
        /// <summary>The type of perforation and/or how the perforation was created.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The type of perforation and/or how the perforation was created.")]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of the top perforation.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of the top perforation.")]
        public MeasuredDepthCoord MdPerforationsTop {
            get {
                return this.mdPerforationsTopField;
            }
            set {
                this.mdPerforationsTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of the bottom perforation.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of the bottom perforation.")]
        public MeasuredDepthCoord MdPerforationsBottom {
            get {
                return this.mdPerforationsBottomField;
            }
            set {
                this.mdPerforationsBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth of the top perforation.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth of the top perforation.")]
        public WellVerticalDepthCoord TvdPerforationsTop {
            get {
                return this.tvdPerforationsTopField;
            }
            set {
                this.tvdPerforationsTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth of the bottom perforation.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth of the bottom perforation.")]
        public WellVerticalDepthCoord TvdPerforationsBottom {
            get {
                return this.tvdPerforationsBottomField;
            }
            set {
                this.tvdPerforationsBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of perforations in this interval.</summary>
        [System.ComponentModel.DescriptionAttribute("The number of perforations in this interval.")]
        public long PerforationCount {
            get {
                return this.perforationCountField;
            }
            set {
                this.perforationCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PerforationCountSpecified {
            get {
                return this.perforationCountFieldSpecified;
            }
            set {
                this.perforationCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The size of the perforations.</summary>
        [System.ComponentModel.DescriptionAttribute("The size of the perforations.")]
        public LengthMeasure Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of perforation holes per length across the treatment interval.  Used to describe but not limited to the configuration of perforating guns or the placement  of perforations (holes, slots, openings ...) in the wellbore, and is often  abbreviated to spf (shots per foot).</summary>
        [System.ComponentModel.DescriptionAttribute(@"The number of perforation holes per length across the treatment interval.  Used to describe but not limited to the configuration of perforating guns or the placement  of perforations (holes, slots, openings ...) in the wellbore, and is often  abbreviated to spf (shots per foot).")]
        public ReciprocalLengthMeasure DensityPerforation {
            get {
                return this.densityPerforationField;
            }
            set {
                this.densityPerforationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The radial distribution of successive perforations around the wellbore axis.  Radial distribution is commonly available in 0, 180 120, 90 and 60 degree phasing.</summary>
        [System.ComponentModel.DescriptionAttribute("The radial distribution of successive perforations around the wellbore axis.  Rad" +
            "ial distribution is commonly available in 0, 180 120, 90 and 60 degree phasing.")]
        public PlaneAngleMeasure PhasingPerforation {
            get {
                return this.phasingPerforationField;
            }
            set {
                this.phasingPerforationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The friction factor of each perforation set.</summary>
        [System.ComponentModel.DescriptionAttribute("The friction factor of each perforation set.")]
        public string FrictionFactor {
            get {
                return this.frictionFactorField;
            }
            set {
                this.frictionFactorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The friction pressure for the perforation set.</summary>
        [System.ComponentModel.DescriptionAttribute("The friction pressure for the perforation set.")]
        public PressureMeasure FrictionPres {
            get {
                return this.frictionPresField;
            }
            set {
                this.frictionPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A coefficient used in the equation for calculation of pressure drop across a perforation set.</summary>
        [System.ComponentModel.DescriptionAttribute("A coefficient used in the equation for calculation of pressure drop across a perf" +
            "oration set.")]
        public string DischargeCoefficient {
            get {
                return this.dischargeCoefficientField;
            }
            set {
                this.dischargeCoefficientField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue1 {
            get {
                return this.extensionNameValue1Field;
            }
            set {
                this.extensionNameValue1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("Risk", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_Risk : AbstractObject {
        
        private RiskType typeField;
        
        private RiskCategory categoryField;
        
        private RiskSubCategory subCategoryField;
        
        private bool subCategoryFieldSpecified;
        
        private string extendCategoryField;
        
        private RiskAffectedPersonnel[] affectedPersonnelField;
        
        private string dTimStartField;
        
        private string dTimEndField;
        
        private MeasuredDepthCoord mdHoleStartField;
        
        private MeasuredDepthCoord mdHoleEndField;
        
        private WellVerticalDepthCoord tvdHoleStartField;
        
        private WellVerticalDepthCoord tvdHoleEndField;
        
        private MeasuredDepthCoord mdBitStartField;
        
        private MeasuredDepthCoord mdBitEndField;
        
        private LengthMeasure diaHoleField;
        
        private short severityLevelField;
        
        private bool severityLevelFieldSpecified;
        
        private short probabilityLevelField;
        
        private bool probabilityLevelFieldSpecified;
        
        private string summaryField;
        
        private string detailsField;
        
        private string identificationField;
        
        private string contingencyField;
        
        private string[] mitigationField;
        
        private DataObjectReference objectReferenceField;
        
        private DataObjectReference referenceWellboreField;
        
        /// <remarks/>
        /// <summary>The type of risk.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of risk.")]
        public RiskType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The category of risk.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The category of risk.")]
        public RiskCategory Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The sub category of risk.</summary>
        [System.ComponentModel.DescriptionAttribute("The sub category of risk.")]
        public RiskSubCategory SubCategory {
            get {
                return this.subCategoryField;
            }
            set {
                this.subCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubCategorySpecified {
            get {
                return this.subCategoryFieldSpecified;
            }
            set {
                this.subCategoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Custom string to further categorize the risk.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Custom string to further categorize the risk.")]
        public string ExtendCategory {
            get {
                return this.extendCategoryField;
            }
            set {
                this.extendCategoryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The personnel afected by the risk.</summary>
        [System.Xml.Serialization.XmlElementAttribute("AffectedPersonnel")]
        [System.ComponentModel.DescriptionAttribute("The personnel afected by the risk.")]
        public RiskAffectedPersonnel[] AffectedPersonnel {
            get {
                return this.affectedPersonnelField;
            }
            set {
                this.affectedPersonnelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time that activities started.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time that activities started.")]
        public string DTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time that activities were completed.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time that activities were completed.")]
        public string DTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured Depth at start of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured Depth at start of activity.")]
        public MeasuredDepthCoord MdHoleStart {
            get {
                return this.mdHoleStartField;
            }
            set {
                this.mdHoleStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured Depth at end of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured Depth at end of activity.")]
        public MeasuredDepthCoord MdHoleEnd {
            get {
                return this.mdHoleEndField;
            }
            set {
                this.mdHoleEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True Vertical Depth at start of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("True Vertical Depth at start of activity.")]
        public WellVerticalDepthCoord TvdHoleStart {
            get {
                return this.tvdHoleStartField;
            }
            set {
                this.tvdHoleStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True Vertical Depth at end of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("True Vertical Depth at end of activity.")]
        public WellVerticalDepthCoord TvdHoleEnd {
            get {
                return this.tvdHoleEndField;
            }
            set {
                this.tvdHoleEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of bit at start of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of bit at start of activity.")]
        public MeasuredDepthCoord MdBitStart {
            get {
                return this.mdBitStartField;
            }
            set {
                this.mdBitStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of bit at end of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of bit at end of activity.")]
        public MeasuredDepthCoord MdBitEnd {
            get {
                return this.mdBitEndField;
            }
            set {
                this.mdBitEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole diameter.")]
        public LengthMeasure DiaHole {
            get {
                return this.diaHoleField;
            }
            set {
                this.diaHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Severity Level of the Risk.  Values of 1 through 5 with 1 being the lowest.</summary>
        [System.ComponentModel.DescriptionAttribute("Severity Level of the Risk.  Values of 1 through 5 with 1 being the lowest.")]
        public short SeverityLevel {
            get {
                return this.severityLevelField;
            }
            set {
                this.severityLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeverityLevelSpecified {
            get {
                return this.severityLevelFieldSpecified;
            }
            set {
                this.severityLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Probability Level of the Risk. Values of 1 through 5 with 1 being the lowest.</summary>
        [System.ComponentModel.DescriptionAttribute("Probability Level of the Risk. Values of 1 through 5 with 1 being the lowest.")]
        public short ProbabilityLevel {
            get {
                return this.probabilityLevelField;
            }
            set {
                this.probabilityLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbabilityLevelSpecified {
            get {
                return this.probabilityLevelFieldSpecified;
            }
            set {
                this.probabilityLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>summary description of risk.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("summary description of risk.")]
        public string Summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Complete description of Risk.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Complete description of Risk.")]
        public string Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Details for identifing the Risk.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Details for identifing the Risk.")]
        public string Identification {
            get {
                return this.identificationField;
            }
            set {
                this.identificationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Plan of action if the Risk materializes.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Plan of action if the Risk materializes.")]
        public string Contingency {
            get {
                return this.contingencyField;
            }
            set {
                this.contingencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Plan of action to ensure the risk does not materialize.</summary>
        [System.Xml.Serialization.XmlElementAttribute("Mitigation")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Plan of action to ensure the risk does not materialize.")]
        public string[] Mitigation {
            get {
                return this.mitigationField;
            }
            set {
                this.mitigationField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference ObjectReference {
            get {
                return this.objectReferenceField;
            }
            set {
                this.objectReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference ReferenceWellbore {
            get {
                return this.referenceWellboreField;
            }
            set {
                this.referenceWellboreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum RiskType {
        
        /// <remarks/>
        risk,
        
        /// <remarks/>
        @event,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("near miss")]
        nearmiss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("best practice")]
        bestpractice,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lessons learned")]
        lessonslearned,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum RiskCategory {
        
        /// <remarks/>
        hydraulics,
        
        /// <remarks/>
        mechanical,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("time related")]
        timerelated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wellbore stability")]
        wellborestability,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("directional drilling")]
        directionaldrilling,
        
        /// <remarks/>
        bit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("equipment failure")]
        equipmentfailure,
        
        /// <remarks/>
        completion,
        
        /// <remarks/>
        casing,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        HSE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum RiskSubCategory {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas kick")]
        gaskick,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow water influx")]
        shallowwaterinflux,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("other influx or kicks")]
        otherinfluxorkicks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("loss circulation")]
        losscirculation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("poor hole cleaning")]
        poorholecleaning,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("good hole cleaning at high ROP")]
        goodholecleaningathighROP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high mud weight")]
        highmudweight,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("special additives needed")]
        specialadditivesneeded,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gumbo problems")]
        gumboproblems,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high ECD - rheology related")]
        highECDrheologyrelated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive circulation")]
        excessivecirculation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("performing a kill")]
        performingakill,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud weight change")]
        mudweightchange,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive pipe cement scaling")]
        excessivepipecementscaling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pit gain or loss")]
        pitgainorloss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud stability problems")]
        mudstabilityproblems,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow gas flow")]
        shallowgasflow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("twist off")]
        twistoff,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stuck pipe")]
        stuckpipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wireline stuck in hole")]
        wirelinestuckinhole,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stick and slip")]
        stickandslip,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("vibration - axial")]
        vibrationaxial,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("vibration - torsional")]
        vibrationtorsional,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("vibration - transverse")]
        vibrationtransverse,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("vibration unknown or rough drilling")]
        vibrationunknownorroughdrilling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("uneven wear of BHA")]
        unevenwearofBHA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("uneven wear of drillstring")]
        unevenwearofdrillstring,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive torque")]
        excessivetorque,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive drag")]
        excessivedrag,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reaming greater than 2 hours")]
        reaminggreaterthan2hours,
        
        /// <remarks/>
        washouts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tight hole or overPull")]
        tightholeoroverPull,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("failed inspections or fatigue wear")]
        failedinspectionsorfatiguewear,
        
        /// <remarks/>
        mechanical,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling greater than 1000 feet/day")]
        drillinggreaterthan1000feetday,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling greater than 2000 feet/day")]
        drillinggreaterthan2000feetday,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling less than 20 feet/day")]
        drillinglessthan20feetday,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("trips greater than 24 hours")]
        tripsgreaterthan24hours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive time for BHA makeup")]
        excessivetimeforBHAmakeup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("waiting on decisions")]
        waitingondecisions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("waiting on weather")]
        waitingonweather,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("waiting on tools")]
        waitingontools,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sloughing or packoffs")]
        sloughingorpackoffs,
        
        /// <remarks/>
        ballooning,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fracture problems")]
        fractureproblems,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("unstable zones")]
        unstablezones,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation integrity test")]
        formationintegritytest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("leak-off test")]
        leakofftest,
        
        /// <remarks/>
        tectonics,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pore pressure")]
        porepressure,
        
        /// <remarks/>
        breakouts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bed parallel")]
        bedparallel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wellbore stability")]
        wellborestability,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive doglegs")]
        excessivedoglegs,
        
        /// <remarks/>
        sidetrack,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("BHA change for directional")]
        BHAchangefordirectional,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wrong total flow area")]
        wrongtotalflowarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well collision - actual")]
        wellcollisionactual,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well collision - technical")]
        wellcollisiontechnical,
        
        /// <remarks/>
        geosteering,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("abnormal tendency changes")]
        abnormaltendencychanges,
        
        /// <remarks/>
        resurveying,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-field referencing (IFR) actions")]
        infieldreferencingIFRactions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit or BHA performance")]
        bitorBHAperformance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling optimization")]
        drillingoptimization,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit balling")]
        bitballing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lost cones or broken cutters")]
        lostconesorbrokencutters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive bit wear or gauge")]
        excessivebitwearorgauge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("low rate of bit penetration")]
        lowrateofbitpenetration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high rate of bit penetration")]
        highrateofbitpenetration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("downhole tool")]
        downholetool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("surface system")]
        surfacesystem,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("motor or rotary steerable system failure")]
        motororrotarysteerablesystemfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("topdrive failure")]
        topdrivefailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hoisting equipment failure")]
        hoistingequipmentfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("circulating equipment failure")]
        circulatingequipmentfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electrical system failure")]
        electricalsystemfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("blow out preventer events")]
        blowoutpreventerevents,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("surface instrumentation problems")]
        surfaceinstrumentationproblems,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig communications")]
        rigcommunications,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completion equipment failure")]
        completionequipmentfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("miscellaneous rig equipment")]
        miscellaneousrigequipment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tool or equipment failure")]
        toolorequipmentfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("squeeze jobs")]
        squeezejobs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing surge losses")]
        casingsurgelosses,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stuck casing or completion")]
        stuckcasingorcompletion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shoe failures")]
        shoefailures,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("early cement setup")]
        earlycementsetup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing collapse")]
        casingcollapse,
        
        /// <remarks/>
        milling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive casing wear or cuttings")]
        excessivecasingwearorcuttings,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive formation damage or skin")]
        excessiveformationdamageorskin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing rotation or reciprocation rqd")]
        casingrotationorreciprocationrqd,
        
        /// <remarks/>
        broaching,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completion or casing")]
        completionorcasing,
        
        /// <remarks/>
        stratigraphy,
        
        /// <remarks/>
        fishing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("junk in hole")]
        junkinhole,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("delay due to political unrest")]
        delayduetopoliticalunrest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig move")]
        rigmove,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas hydrates")]
        gashydrates,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pending analysis")]
        pendinganalysis,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("riser disconnect")]
        riserdisconnect,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        personnel,
        
        /// <remarks/>
        environmental,
        
        /// <remarks/>
        automotive,
        
        /// <remarks/>
        asset,
        
        /// <remarks/>
        information,
        
        /// <remarks/>
        time,
        
        /// <remarks/>
        HSE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum RiskAffectedPersonnel {
        
        /// <remarks/>
        cementer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("company man")]
        companyman,
        
        /// <remarks/>
        contractor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("directional driller")]
        directionaldriller,
        
        /// <remarks/>
        driller,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling engineer")]
        drillingengineer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling superintendent")]
        drillingsuperintendent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling team")]
        drillingteam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("facility engineer")]
        facilityengineer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("field service manager")]
        fieldservicemanager,
        
        /// <remarks/>
        foreman,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general service supervisor")]
        generalservicesupervisor,
        
        /// <remarks/>
        geologist,
        
        /// <remarks/>
        member,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud engineer")]
        mudengineer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud logger")]
        mudlogger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD or LWD engineer")]
        MWDorLWDengineer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("perform engineer")]
        performengineer,
        
        /// <remarks/>
        petrophysicist,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("production engineer")]
        productionengineer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("remotely operated vehicle engineer")]
        remotelyoperatedvehicleengineer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("safety manger")]
        safetymanger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sales engineer")]
        salesengineer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("service supervisor")]
        servicesupervisor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("technical support")]
        technicalsupport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tool pusher")]
        toolpusher,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wireline engineer")]
        wirelineengineer,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("Rig", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_Rig : AbstractObject {
        
        private string ownerField;
        
        private RigType typeRigField;
        
        private bool typeRigFieldSpecified;
        
        private string manufacturerField;
        
        private string yearEntServiceField;
        
        private string classRigField;
        
        private string approvalsField;
        
        private string registrationField;
        
        private string telNumberField;
        
        private string faxNumberField;
        
        private string emailAddressField;
        
        private string nameContactField;
        
        private LengthMeasure ratingDrillDepthField;
        
        private LengthMeasure ratingWaterDepthField;
        
        private bool isOffshoreField;
        
        private bool isOffshoreFieldSpecified;
        
        private LengthMeasure airGapField;
        
        private string dTimStartOpField;
        
        private string dTimEndOpField;
        
        private int numDerricksField;
        
        private bool numDerricksFieldSpecified;
        
        private DerrickType typeDerrickField;
        
        private bool typeDerrickFieldSpecified;
        
        private ForceMeasure ratingDerrickField;
        
        private LengthMeasure htDerrickField;
        
        private ForceMeasure ratingHkldField;
        
        private LengthPerTimeMeasure capWindDerrickField;
        
        private ForceMeasure wtBlockField;
        
        private ForceMeasure ratingBlockField;
        
        private int numBlockLinesField;
        
        private bool numBlockLinesFieldSpecified;
        
        private string typeHookField;
        
        private ForceMeasure ratingHookField;
        
        private LengthMeasure sizeDrillLineField;
        
        private DrawWorksType typeDrawWorksField;
        
        private bool typeDrawWorksFieldSpecified;
        
        private PowerMeasure powerDrawWorksField;
        
        private ForceMeasure ratingDrawWorksField;
        
        private string motorDrawWorksField;
        
        private string descBrakeField;
        
        private string typeSwivelField;
        
        private ForceMeasure ratingSwivelField;
        
        private DriveType rotSystemField;
        
        private bool rotSystemFieldSpecified;
        
        private string descRotSystemField;
        
        private MomentOfForceMeasure ratingTqRotSysField;
        
        private LengthMeasure rotSizeOpeningField;
        
        private ForceMeasure ratingRotSystemField;
        
        private string scrSystemField;
        
        private string pipeHandlingSystemField;
        
        private VolumeMeasure capBulkMudField;
        
        private VolumeMeasure capLiquidMudField;
        
        private VolumeMeasure capDrillWaterField;
        
        private VolumeMeasure capPotableWaterField;
        
        private VolumeMeasure capFuelField;
        
        private VolumeMeasure capBulkCementField;
        
        private string mainEngineField;
        
        private string generatorField;
        
        private string cementUnitField;
        
        private int numBunksField;
        
        private bool numBunksFieldSpecified;
        
        private int bunksPerRoomField;
        
        private bool bunksPerRoomFieldSpecified;
        
        private int numCranesField;
        
        private bool numCranesFieldSpecified;
        
        private int numAnchField;
        
        private bool numAnchFieldSpecified;
        
        private string moorTypeField;
        
        private int numGuideTensField;
        
        private bool numGuideTensFieldSpecified;
        
        private int numRiserTensField;
        
        private bool numRiserTensFieldSpecified;
        
        private ForceMeasure varDeckLdMxField;
        
        private ForceMeasure vdlStormField;
        
        private int numThrustersField;
        
        private bool numThrustersFieldSpecified;
        
        private bool azimuthingField;
        
        private bool azimuthingFieldSpecified;
        
        private ForceMeasure motionCompensationMnField;
        
        private ForceMeasure motionCompensationMxField;
        
        private LengthMeasure strokeMotionCompensationField;
        
        private PlaneAngleMeasure riserAngleLimitField;
        
        private LengthMeasure heaveMxField;
        
        private string gantryField;
        
        private string flaresField;
        
        private Shaker[] shakerField;
        
        private Bop bopField;
        
        private Pit[] pitField;
        
        private MudPump[] pumpField;
        
        private Centrifuge[] centrifugeField;
        
        private Hydrocyclone[] hydrocycloneField;
        
        private Degasser[] degasserField;
        
        private SurfaceEquipment surfaceEquipmentField;
        
        /// <remarks/>
        /// <summary>Contractor/owner.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Contractor/owner.")]
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig type.</summary>
        [System.ComponentModel.DescriptionAttribute("Rig type.")]
        public RigType TypeRig {
            get {
                return this.typeRigField;
            }
            set {
                this.typeRigField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeRigSpecified {
            get {
                return this.typeRigFieldSpecified;
            }
            set {
                this.typeRigFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Year entered service (CCYY).</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="gYear")]
        [System.ComponentModel.DescriptionAttribute("Year entered service (CCYY).")]
        public string YearEntService {
            get {
                return this.yearEntServiceField;
            }
            set {
                this.yearEntServiceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig classification.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Rig classification.")]
        public string ClassRig {
            get {
                return this.classRigField;
            }
            set {
                this.classRigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig approvals/certification.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Rig approvals/certification.")]
        public string Approvals {
            get {
                return this.approvalsField;
            }
            set {
                this.approvalsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig registration location.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Rig registration location.")]
        public string Registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig telephone number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Rig telephone number.")]
        public string TelNumber {
            get {
                return this.telNumberField;
            }
            set {
                this.telNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig fax number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Rig fax number.")]
        public string FaxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig Email address.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Rig Email address.")]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of contact person.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of contact person.")]
        public string NameContact {
            get {
                return this.nameContactField;
            }
            set {
                this.nameContactField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum hole depth rating for the rig.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum hole depth rating for the rig.")]
        public LengthMeasure RatingDrillDepth {
            get {
                return this.ratingDrillDepthField;
            }
            set {
                this.ratingDrillDepthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Working water depth capability of rig.</summary>
        [System.ComponentModel.DescriptionAttribute("Working water depth capability of rig.")]
        public LengthMeasure RatingWaterDepth {
            get {
                return this.ratingWaterDepthField;
            }
            set {
                this.ratingWaterDepthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Flag to indicate that rig is an offshore rig (Drill Ship, Semi, Jack-up, Platform, TADU).   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate that rig is an offshore rig (Drill Ship, Semi, Jack-up, Platform" +
            ", TADU).   Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool IsOffshore {
            get {
                return this.isOffshoreField;
            }
            set {
                this.isOffshoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsOffshoreSpecified {
            get {
                return this.isOffshoreFieldSpecified;
            }
            set {
                this.isOffshoreFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Air gap from Rig Floor to ground or mean sea level depending on location.</summary>
        [System.ComponentModel.DescriptionAttribute("Air gap from Rig Floor to ground or mean sea level depending on location.")]
        public LengthMeasure AirGap {
            get {
                return this.airGapField;
            }
            set {
                this.airGapField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time rig operations started, or date and time object created.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time rig operations started, or date and time object created.")]
        public string DTimStartOp {
            get {
                return this.dTimStartOpField;
            }
            set {
                this.dTimStartOpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time rig operations ended (May be NULL for active rig).</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time rig operations ended (May be NULL for active rig).")]
        public string DTimEndOp {
            get {
                return this.dTimEndOpField;
            }
            set {
                this.dTimEndOpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of derricks on the rig.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of derricks on the rig.")]
        public int NumDerricks {
            get {
                return this.numDerricksField;
            }
            set {
                this.numDerricksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumDerricksSpecified {
            get {
                return this.numDerricksFieldSpecified;
            }
            set {
                this.numDerricksFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Derrick type.</summary>
        [System.ComponentModel.DescriptionAttribute("Derrick type.")]
        public DerrickType TypeDerrick {
            get {
                return this.typeDerrickField;
            }
            set {
                this.typeDerrickField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeDerrickSpecified {
            get {
                return this.typeDerrickFieldSpecified;
            }
            set {
                this.typeDerrickFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum support load applied to derrick structure.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum support load applied to derrick structure.")]
        public ForceMeasure RatingDerrick {
            get {
                return this.ratingDerrickField;
            }
            set {
                this.ratingDerrickField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Height of derrick.</summary>
        [System.ComponentModel.DescriptionAttribute("Height of derrick.")]
        public LengthMeasure HtDerrick {
            get {
                return this.htDerrickField;
            }
            set {
                this.htDerrickField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum hookload rating.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum hookload rating.")]
        public ForceMeasure RatingHkld {
            get {
                return this.ratingHkldField;
            }
            set {
                this.ratingHkldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Derrick wind capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Derrick wind capacity.")]
        public LengthPerTimeMeasure CapWindDerrick {
            get {
                return this.capWindDerrickField;
            }
            set {
                this.capWindDerrickField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Block weight.</summary>
        [System.ComponentModel.DescriptionAttribute("Block weight.")]
        public ForceMeasure WtBlock {
            get {
                return this.wtBlockField;
            }
            set {
                this.wtBlockField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight rating of the travelling block.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight rating of the travelling block.")]
        public ForceMeasure RatingBlock {
            get {
                return this.ratingBlockField;
            }
            set {
                this.ratingBlockField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of block lines.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of block lines.")]
        public int NumBlockLines {
            get {
                return this.numBlockLinesField;
            }
            set {
                this.numBlockLinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumBlockLinesSpecified {
            get {
                return this.numBlockLinesFieldSpecified;
            }
            set {
                this.numBlockLinesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of hook.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Type of hook.")]
        public string TypeHook {
            get {
                return this.typeHookField;
            }
            set {
                this.typeHookField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight rating of the hook.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight rating of the hook.")]
        public ForceMeasure RatingHook {
            get {
                return this.ratingHookField;
            }
            set {
                this.ratingHookField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Drill line diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Drill line diameter.")]
        public LengthMeasure SizeDrillLine {
            get {
                return this.sizeDrillLineField;
            }
            set {
                this.sizeDrillLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Draw-works type.</summary>
        [System.ComponentModel.DescriptionAttribute("Draw-works type.")]
        public DrawWorksType TypeDrawWorks {
            get {
                return this.typeDrawWorksField;
            }
            set {
                this.typeDrawWorksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeDrawWorksSpecified {
            get {
                return this.typeDrawWorksFieldSpecified;
            }
            set {
                this.typeDrawWorksFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Draw works horse power.</summary>
        [System.ComponentModel.DescriptionAttribute("Draw works horse power.")]
        public PowerMeasure PowerDrawWorks {
            get {
                return this.powerDrawWorksField;
            }
            set {
                this.powerDrawWorksField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight rating of the drawworks.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight rating of the drawworks.")]
        public ForceMeasure RatingDrawWorks {
            get {
                return this.ratingDrawWorksField;
            }
            set {
                this.ratingDrawWorksField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of the drawworks motor.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of the drawworks motor.")]
        public string MotorDrawWorks {
            get {
                return this.motorDrawWorksField;
            }
            set {
                this.motorDrawWorksField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig brake description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Rig brake description.")]
        public string DescBrake {
            get {
                return this.descBrakeField;
            }
            set {
                this.descBrakeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of Swivel.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Type of Swivel.")]
        public string TypeSwivel {
            get {
                return this.typeSwivelField;
            }
            set {
                this.typeSwivelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum swivel rating.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum swivel rating.")]
        public ForceMeasure RatingSwivel {
            get {
                return this.ratingSwivelField;
            }
            set {
                this.ratingSwivelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Work string drive type.</summary>
        [System.ComponentModel.DescriptionAttribute("Work string drive type.")]
        public DriveType RotSystem {
            get {
                return this.rotSystemField;
            }
            set {
                this.rotSystemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RotSystemSpecified {
            get {
                return this.rotSystemFieldSpecified;
            }
            set {
                this.rotSystemFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of rotating system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of rotating system.")]
        public string DescRotSystem {
            get {
                return this.descRotSystemField;
            }
            set {
                this.descRotSystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Work string rotational torque rating.</summary>
        [System.ComponentModel.DescriptionAttribute("Work string rotational torque rating.")]
        public MomentOfForceMeasure RatingTqRotSys {
            get {
                return this.ratingTqRotSysField;
            }
            set {
                this.ratingTqRotSysField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rotary size opening.</summary>
        [System.ComponentModel.DescriptionAttribute("Rotary size opening.")]
        public LengthMeasure RotSizeOpening {
            get {
                return this.rotSizeOpeningField;
            }
            set {
                this.rotSizeOpeningField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Work string rotational torque rating.</summary>
        [System.ComponentModel.DescriptionAttribute("Work string rotational torque rating.")]
        public ForceMeasure RatingRotSystem {
            get {
                return this.ratingRotSystemField;
            }
            set {
                this.ratingRotSystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of slow circulation rates system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of slow circulation rates system.")]
        public string ScrSystem {
            get {
                return this.scrSystemField;
            }
            set {
                this.scrSystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of pipe handling system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of pipe handling system.")]
        public string PipeHandlingSystem {
            get {
                return this.pipeHandlingSystemField;
            }
            set {
                this.pipeHandlingSystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bulk/dry mud storage capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Bulk/dry mud storage capacity.")]
        public VolumeMeasure CapBulkMud {
            get {
                return this.capBulkMudField;
            }
            set {
                this.capBulkMudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Liquid mud storage capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Liquid mud storage capacity.")]
        public VolumeMeasure CapLiquidMud {
            get {
                return this.capLiquidMudField;
            }
            set {
                this.capLiquidMudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Drill water capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Drill water capacity.")]
        public VolumeMeasure CapDrillWater {
            get {
                return this.capDrillWaterField;
            }
            set {
                this.capDrillWaterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Potable water capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Potable water capacity.")]
        public VolumeMeasure CapPotableWater {
            get {
                return this.capPotableWaterField;
            }
            set {
                this.capPotableWaterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fuel capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Fuel capacity.")]
        public VolumeMeasure CapFuel {
            get {
                return this.capFuelField;
            }
            set {
                this.capFuelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Capacity of builk cement.</summary>
        [System.ComponentModel.DescriptionAttribute("Capacity of builk cement.")]
        public VolumeMeasure CapBulkCement {
            get {
                return this.capBulkCementField;
            }
            set {
                this.capBulkCementField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Power system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Power system.")]
        public string MainEngine {
            get {
                return this.mainEngineField;
            }
            set {
                this.mainEngineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of the electrical power generating system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of the electrical power generating system.")]
        public string Generator {
            get {
                return this.generatorField;
            }
            set {
                this.generatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of cement unit on the rig.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of cement unit on the rig.")]
        public string CementUnit {
            get {
                return this.cementUnitField;
            }
            set {
                this.cementUnitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of beds available on the rig.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of beds available on the rig.")]
        public int NumBunks {
            get {
                return this.numBunksField;
            }
            set {
                this.numBunksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumBunksSpecified {
            get {
                return this.numBunksFieldSpecified;
            }
            set {
                this.numBunksFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of bunks per room.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of bunks per room.")]
        public int BunksPerRoom {
            get {
                return this.bunksPerRoomField;
            }
            set {
                this.bunksPerRoomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BunksPerRoomSpecified {
            get {
                return this.bunksPerRoomFieldSpecified;
            }
            set {
                this.bunksPerRoomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of cranes on the rig.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of cranes on the rig.")]
        public int NumCranes {
            get {
                return this.numCranesField;
            }
            set {
                this.numCranesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumCranesSpecified {
            get {
                return this.numCranesFieldSpecified;
            }
            set {
                this.numCranesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of anchors.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of anchors.")]
        public int NumAnch {
            get {
                return this.numAnchField;
            }
            set {
                this.numAnchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumAnchSpecified {
            get {
                return this.numAnchFieldSpecified;
            }
            set {
                this.numAnchFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mooring type.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Mooring type.")]
        public string MoorType {
            get {
                return this.moorTypeField;
            }
            set {
                this.moorTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of guideline tensioners.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of guideline tensioners.")]
        public int NumGuideTens {
            get {
                return this.numGuideTensField;
            }
            set {
                this.numGuideTensField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumGuideTensSpecified {
            get {
                return this.numGuideTensFieldSpecified;
            }
            set {
                this.numGuideTensFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of riser tensioners.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of riser tensioners.")]
        public int NumRiserTens {
            get {
                return this.numRiserTensField;
            }
            set {
                this.numRiserTensField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumRiserTensSpecified {
            get {
                return this.numRiserTensFieldSpecified;
            }
            set {
                this.numRiserTensFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Variable deck load maximum (offshore rigs only).</summary>
        [System.ComponentModel.DescriptionAttribute("Variable deck load maximum (offshore rigs only).")]
        public ForceMeasure VarDeckLdMx {
            get {
                return this.varDeckLdMxField;
            }
            set {
                this.varDeckLdMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Variable deck load storm rating (offshore rigs only).</summary>
        [System.ComponentModel.DescriptionAttribute("Variable deck load storm rating (offshore rigs only).")]
        public ForceMeasure VdlStorm {
            get {
                return this.vdlStormField;
            }
            set {
                this.vdlStormField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of thrusters.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of thrusters.")]
        public int NumThrusters {
            get {
                return this.numThrustersField;
            }
            set {
                this.numThrustersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumThrustersSpecified {
            get {
                return this.numThrustersFieldSpecified;
            }
            set {
                this.numThrustersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Are the thrusters azimuth.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Are the thrusters azimuth.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool Azimuthing {
            get {
                return this.azimuthingField;
            }
            set {
                this.azimuthingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AzimuthingSpecified {
            get {
                return this.azimuthingFieldSpecified;
            }
            set {
                this.azimuthingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum motion compensation.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum motion compensation.")]
        public ForceMeasure MotionCompensationMn {
            get {
                return this.motionCompensationMnField;
            }
            set {
                this.motionCompensationMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum motion compensation.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum motion compensation.")]
        public ForceMeasure MotionCompensationMx {
            get {
                return this.motionCompensationMxField;
            }
            set {
                this.motionCompensationMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of motion compensation provided by equipment.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of motion compensation provided by equipment.")]
        public LengthMeasure StrokeMotionCompensation {
            get {
                return this.strokeMotionCompensationField;
            }
            set {
                this.strokeMotionCompensationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Riser angle limit.</summary>
        [System.ComponentModel.DescriptionAttribute("Riser angle limit.")]
        public PlaneAngleMeasure RiserAngleLimit {
            get {
                return this.riserAngleLimitField;
            }
            set {
                this.riserAngleLimitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum allowable heave.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum allowable heave.")]
        public LengthMeasure HeaveMx {
            get {
                return this.heaveMxField;
            }
            set {
                this.heaveMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of gantry.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of gantry.")]
        public string Gantry {
            get {
                return this.gantryField;
            }
            set {
                this.gantryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of flare.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of flare.")]
        public string Flares {
            get {
                return this.flaresField;
            }
            set {
                this.flaresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Shaker")]
        public Shaker[] Shaker {
            get {
                return this.shakerField;
            }
            set {
                this.shakerField = value;
            }
        }
        
        /// <remarks/>
        public Bop Bop {
            get {
                return this.bopField;
            }
            set {
                this.bopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Pit")]
        public Pit[] Pit {
            get {
                return this.pitField;
            }
            set {
                this.pitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Pump")]
        public MudPump[] Pump {
            get {
                return this.pumpField;
            }
            set {
                this.pumpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Centrifuge")]
        public Centrifuge[] Centrifuge {
            get {
                return this.centrifugeField;
            }
            set {
                this.centrifugeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Hydrocyclone")]
        public Hydrocyclone[] Hydrocyclone {
            get {
                return this.hydrocycloneField;
            }
            set {
                this.hydrocycloneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Degasser")]
        public Degasser[] Degasser {
            get {
                return this.degasserField;
            }
            set {
                this.degasserField = value;
            }
        }
        
        /// <remarks/>
        public SurfaceEquipment SurfaceEquipment {
            get {
                return this.surfaceEquipmentField;
            }
            set {
                this.surfaceEquipmentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum RigType {
        
        /// <remarks/>
        barge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coiled tubing")]
        coiledtubing,
        
        /// <remarks/>
        floater,
        
        /// <remarks/>
        jackup,
        
        /// <remarks/>
        land,
        
        /// <remarks/>
        platform,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("semi-submersible")]
        semisubmersible,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum DerrickType {
        
        /// <remarks/>
        @double,
        
        /// <remarks/>
        quadruple,
        
        /// <remarks/>
        slant,
        
        /// <remarks/>
        triple,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum DrawWorksType {
        
        /// <remarks/>
        mechanical,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("standard electric")]
        standardelectric,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("diesel electric")]
        dieselelectric,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ram rig")]
        ramrig,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum DriveType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coiled tubing")]
        coiledtubing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rotary kelly drive")]
        rotarykellydrive,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("top drive")]
        topdrive,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("FormationMarkerSet", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_FormationMarkerSet : AbstractObject {
        
        private string markerSetIntervalField;
        
        private DataObjectReference wellboreField;
        
        private obj_FormationMarker[] formationMarkerField;
        
        /// <remarks/>
        public string MarkerSetInterval {
            get {
                return this.markerSetIntervalField;
            }
            set {
                this.markerSetIntervalField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference Wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FormationMarker")]
        public obj_FormationMarker[] FormationMarker {
            get {
                return this.formationMarkerField;
            }
            set {
                this.formationMarkerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("FormationMarker", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_FormationMarker : AbstractObject {
        
        private string chronostratigraphicTopField;
        
        private LithostratigraphicUnit lithostratigraphicTopField;
        
        private MeasuredDepthCoord markerMdField;
        
        private WellVerticalDepthCoord markerTvdField;
        
        private DataObjectReference tvdReferenceTrajectoryField;
        
        private PlaneAngleMeasure dipAngleField;
        
        private PlaneAngleMeasure dipDirectionField;
        
        private DataObjectReference wellboreField;
        
        private string uidField;
        
        /// <remarks/>
        public string ChronostratigraphicTop {
            get {
                return this.chronostratigraphicTopField;
            }
            set {
                this.chronostratigraphicTopField = value;
            }
        }
        
        /// <remarks/>
        public LithostratigraphicUnit LithostratigraphicTop {
            get {
                return this.lithostratigraphicTopField;
            }
            set {
                this.lithostratigraphicTopField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MarkerMd {
            get {
                return this.markerMdField;
            }
            set {
                this.markerMdField = value;
            }
        }
        
        /// <remarks/>
        public WellVerticalDepthCoord MarkerTvd {
            get {
                return this.markerTvdField;
            }
            set {
                this.markerTvdField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference TvdReferenceTrajectory {
            get {
                return this.tvdReferenceTrajectoryField;
            }
            set {
                this.tvdReferenceTrajectoryField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure DipAngle {
            get {
                return this.dipAngleField;
            }
            set {
                this.dipAngleField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure DipDirection {
            get {
                return this.dipDirectionField;
            }
            set {
                this.dipDirectionField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference Wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("DepthRegImage", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_DepthRegImage : AbstractObject {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private string fileNameField;
        
        private FileNameType fileNameTypeField;
        
        private bool fileNameTypeFieldSpecified;
        
        private MimeType mimetypeField;
        
        private bool mimetypeFieldSpecified;
        
        private DigitalStorageMeasure fileSizeField;
        
        private MessageDigestType checksumField;
        
        private bool checksumFieldSpecified;
        
        private long imagePixelWidthField;
        
        private bool imagePixelWidthFieldSpecified;
        
        private long imagePixelHeightField;
        
        private bool imagePixelHeightFieldSpecified;
        
        private string versionField;
        
        private string aliasField;
        
        private CustomData customData1Field;
        
        private DepthRegRectangle imageBoundaryField;
        
        private DepthRegLogRect[] headerSectionField;
        
        private DepthRegLogSection[] logSectionField;
        
        private DepthRegLogRect[] alternateSectionField;
        
        private string uidField;
        
        /// <remarks/>
        public string NameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        public string NameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public FileNameType FileNameType {
            get {
                return this.fileNameTypeField;
            }
            set {
                this.fileNameTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileNameTypeSpecified {
            get {
                return this.fileNameTypeFieldSpecified;
            }
            set {
                this.fileNameTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public MimeType Mimetype {
            get {
                return this.mimetypeField;
            }
            set {
                this.mimetypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MimetypeSpecified {
            get {
                return this.mimetypeFieldSpecified;
            }
            set {
                this.mimetypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public DigitalStorageMeasure FileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        public MessageDigestType Checksum {
            get {
                return this.checksumField;
            }
            set {
                this.checksumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChecksumSpecified {
            get {
                return this.checksumFieldSpecified;
            }
            set {
                this.checksumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long ImagePixelWidth {
            get {
                return this.imagePixelWidthField;
            }
            set {
                this.imagePixelWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImagePixelWidthSpecified {
            get {
                return this.imagePixelWidthFieldSpecified;
            }
            set {
                this.imagePixelWidthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long ImagePixelHeight {
            get {
                return this.imagePixelHeightField;
            }
            set {
                this.imagePixelHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImagePixelHeightSpecified {
            get {
                return this.imagePixelHeightFieldSpecified;
            }
            set {
                this.imagePixelHeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CustomData")]
        public CustomData CustomData1 {
            get {
                return this.customData1Field;
            }
            set {
                this.customData1Field = value;
            }
        }
        
        /// <remarks/>
        public DepthRegRectangle ImageBoundary {
            get {
                return this.imageBoundaryField;
            }
            set {
                this.imageBoundaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HeaderSection")]
        public DepthRegLogRect[] HeaderSection {
            get {
                return this.headerSectionField;
            }
            set {
                this.headerSectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LogSection")]
        public DepthRegLogSection[] LogSection {
            get {
                return this.logSectionField;
            }
            set {
                this.logSectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AlternateSection")]
        public DepthRegLogRect[] AlternateSection {
            get {
                return this.alternateSectionField;
            }
            set {
                this.alternateSectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum FileNameType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file name")]
        filename,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("path name")]
        pathname,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("universal resource locator")]
        universalresourcelocator,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum MimeType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("image/tiff")]
        imagetiff,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("image/gif")]
        imagegif,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("image/png")]
        imagepng,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("image/xml+svg")]
        imagexmlsvg,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum MessageDigestType {
        
        /// <remarks/>
        MD5,
        
        /// <remarks/>
        SHA1,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("WellCMLedger", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_WellCMLedger : AbstractObject {
        
        private string parentEventIDField;
        
        private string dTimStartField;
        
        private string dTimEndField;
        
        private TimeMeasure durationField;
        
        private MdInterval mdIntervalField;
        
        private int eventOrderField;
        
        private bool eventOrderFieldSpecified;
        
        private string[] rigIDField;
        
        private string activityCodeField;
        
        private EventType typeField;
        
        private bool isPlanField;
        
        private bool isPlanFieldSpecified;
        
        private string workOrderIDField;
        
        private string businessAssociateField;
        
        private string responsiblePersonField;
        
        private string contactField;
        
        private bool nonproductiveField;
        
        private bool nonproductiveFieldSpecified;
        
        private bool troubleField;
        
        private bool troubleFieldSpecified;
        
        private bool preventiveMaintenanceField;
        
        private bool preventiveMaintenanceFieldSpecified;
        
        private bool unplannedField;
        
        private bool unplannedFieldSpecified;
        
        private string phaseField;
        
        private string commentField;
        
        private ExtensionNameValue[] extensionNameValue1Field;
        
        private string descriptionField;
        
        private DataObjectReference referenceWellboreField;
        
        private EventExtension[] eventExtensionField;
        
        private DayCost[] costField;
        
        private DownholeComponentRef downholeComponentRefField;
        
        private Participant participantField;
        
        /// <remarks/>
        public string ParentEventID {
            get {
                return this.parentEventIDField;
            }
            set {
                this.parentEventIDField = value;
            }
        }
        
        /// <remarks/>
        public string DTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        public string DTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public MdInterval MdInterval {
            get {
                return this.mdIntervalField;
            }
            set {
                this.mdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public int EventOrder {
            get {
                return this.eventOrderField;
            }
            set {
                this.eventOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EventOrderSpecified {
            get {
                return this.eventOrderFieldSpecified;
            }
            set {
                this.eventOrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RigID")]
        public string[] RigID {
            get {
                return this.rigIDField;
            }
            set {
                this.rigIDField = value;
            }
        }
        
        /// <remarks/>
        public string ActivityCode {
            get {
                return this.activityCodeField;
            }
            set {
                this.activityCodeField = value;
            }
        }
        
        /// <remarks/>
        public EventType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPlan {
            get {
                return this.isPlanField;
            }
            set {
                this.isPlanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsPlanSpecified {
            get {
                return this.isPlanFieldSpecified;
            }
            set {
                this.isPlanFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string WorkOrderID {
            get {
                return this.workOrderIDField;
            }
            set {
                this.workOrderIDField = value;
            }
        }
        
        /// <remarks/>
        public string BusinessAssociate {
            get {
                return this.businessAssociateField;
            }
            set {
                this.businessAssociateField = value;
            }
        }
        
        /// <remarks/>
        public string ResponsiblePerson {
            get {
                return this.responsiblePersonField;
            }
            set {
                this.responsiblePersonField = value;
            }
        }
        
        /// <remarks/>
        public string Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public bool Nonproductive {
            get {
                return this.nonproductiveField;
            }
            set {
                this.nonproductiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonproductiveSpecified {
            get {
                return this.nonproductiveFieldSpecified;
            }
            set {
                this.nonproductiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Trouble {
            get {
                return this.troubleField;
            }
            set {
                this.troubleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TroubleSpecified {
            get {
                return this.troubleFieldSpecified;
            }
            set {
                this.troubleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool PreventiveMaintenance {
            get {
                return this.preventiveMaintenanceField;
            }
            set {
                this.preventiveMaintenanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreventiveMaintenanceSpecified {
            get {
                return this.preventiveMaintenanceFieldSpecified;
            }
            set {
                this.preventiveMaintenanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Unplanned {
            get {
                return this.unplannedField;
            }
            set {
                this.unplannedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnplannedSpecified {
            get {
                return this.unplannedFieldSpecified;
            }
            set {
                this.unplannedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtensionNameValue")]
        public ExtensionNameValue[] ExtensionNameValue1 {
            get {
                return this.extensionNameValue1Field;
            }
            set {
                this.extensionNameValue1Field = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference ReferenceWellbore {
            get {
                return this.referenceWellboreField;
            }
            set {
                this.referenceWellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EventExtension")]
        public EventExtension[] EventExtension {
            get {
                return this.eventExtensionField;
            }
            set {
                this.eventExtensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Cost")]
        public DayCost[] Cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
        
        /// <remarks/>
        public DownholeComponentRef DownholeComponentRef {
            get {
                return this.downholeComponentRefField;
            }
            set {
                this.downholeComponentRefField = value;
            }
        }
        
        /// <remarks/>
        public Participant Participant {
            get {
                return this.participantField;
            }
            set {
                this.participantField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("OpsReport", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_OpsReport : AbstractObject {
        
        private string conditionHoleField;
        
        private Cost costDayField;
        
        private Cost costDayMudField;
        
        private LengthMeasure diaCsgLastField;
        
        private LengthMeasure diaHoleField;
        
        private LengthMeasure distDrillField;
        
        private LengthMeasure distDrillRotField;
        
        private LengthMeasure distDrillSlidField;
        
        private LengthMeasure distHoldField;
        
        private LengthMeasure distReamField;
        
        private LengthMeasure distSteeringField;
        
        private string dTimField;
        
        private string engineerField;
        
        private TimeMeasure eTimCircField;
        
        private TimeMeasure eTimDrillField;
        
        private TimeMeasure eTimDrillRotField;
        
        private TimeMeasure eTimDrillSlidField;
        
        private TimeMeasure eTimHoldField;
        
        private TimeMeasure eTimLocField;
        
        private TimeMeasure eTimReamField;
        
        private TimeMeasure eTimSpudField;
        
        private TimeMeasure eTimStartField;
        
        private TimeMeasure eTimSteeringField;
        
        private string forecast24HrField;
        
        private string geologistField;
        
        private string lithologyField;
        
        private PressureMeasure maaspField;
        
        private MeasuredDepthCoord mdCsgLastField;
        
        private MeasuredDepthCoord mdPlannedField;
        
        private MeasuredDepthCoord mdReportField;
        
        private string nameFormationField;
        
        private string numAFEField;
        
        private int numContractField;
        
        private bool numContractFieldSpecified;
        
        private int numOperatorField;
        
        private bool numOperatorFieldSpecified;
        
        private int numPobField;
        
        private bool numPobFieldSpecified;
        
        private int numServiceField;
        
        private bool numServiceFieldSpecified;
        
        private PressureMeasure presKickTolField;
        
        private MassPerVolumeMeasure presLotEmwField;
        
        private string rigField;
        
        private LengthPerTimeMeasure ropAvField;
        
        private LengthPerTimeMeasure ropCurrentField;
        
        private string statusCurrentField;
        
        private string sum24HrField;
        
        private string supervisorField;
        
        private string tubularField;
        
        private WellVerticalDepthCoord tvdCsgLastField;
        
        private WellVerticalDepthCoord tvdLotField;
        
        private WellVerticalDepthCoord tvdReportField;
        
        private VolumeMeasure volKickTolField;
        
        private RigResponse rigResponseField;
        
        private ShakerOp[] shakerOpField;
        
        private Hse hseField;
        
        private SupportCraft[] supportCraftField;
        
        private Weather[] weatherField;
        
        private Inventory[] mudInventoryField;
        
        private DataObjectReference referenceWellboreField;
        
        private MudVolume mudVolumeField;
        
        private Personnel[] personnelField;
        
        private DrillActivity[] activityField;
        
        private DrillingParams[] drillingParamsField;
        
        private DataObjectReference wbGeometryField;
        
        private DayCost[] dayCostField;
        
        private TrajectoryStation[] trajectoryStationField;
        
        private Fluid[] fluidField;
        
        private Scr[] scrField;
        
        private Inventory[] bulkInventoryField;
        
        private PitVolume[] pitVolumeField;
        
        private PumpOp[] pumpOpField;
        
        /// <remarks/>
        public string ConditionHole {
            get {
                return this.conditionHoleField;
            }
            set {
                this.conditionHoleField = value;
            }
        }
        
        /// <remarks/>
        public Cost CostDay {
            get {
                return this.costDayField;
            }
            set {
                this.costDayField = value;
            }
        }
        
        /// <remarks/>
        public Cost CostDayMud {
            get {
                return this.costDayMudField;
            }
            set {
                this.costDayMudField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure DiaCsgLast {
            get {
                return this.diaCsgLastField;
            }
            set {
                this.diaCsgLastField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure DiaHole {
            get {
                return this.diaHoleField;
            }
            set {
                this.diaHoleField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure DistDrill {
            get {
                return this.distDrillField;
            }
            set {
                this.distDrillField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure DistDrillRot {
            get {
                return this.distDrillRotField;
            }
            set {
                this.distDrillRotField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure DistDrillSlid {
            get {
                return this.distDrillSlidField;
            }
            set {
                this.distDrillSlidField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure DistHold {
            get {
                return this.distHoldField;
            }
            set {
                this.distHoldField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure DistReam {
            get {
                return this.distReamField;
            }
            set {
                this.distReamField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure DistSteering {
            get {
                return this.distSteeringField;
            }
            set {
                this.distSteeringField = value;
            }
        }
        
        /// <remarks/>
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        public string Engineer {
            get {
                return this.engineerField;
            }
            set {
                this.engineerField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimCirc {
            get {
                return this.eTimCircField;
            }
            set {
                this.eTimCircField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimDrill {
            get {
                return this.eTimDrillField;
            }
            set {
                this.eTimDrillField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimDrillRot {
            get {
                return this.eTimDrillRotField;
            }
            set {
                this.eTimDrillRotField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimDrillSlid {
            get {
                return this.eTimDrillSlidField;
            }
            set {
                this.eTimDrillSlidField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimHold {
            get {
                return this.eTimHoldField;
            }
            set {
                this.eTimHoldField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimLoc {
            get {
                return this.eTimLocField;
            }
            set {
                this.eTimLocField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimReam {
            get {
                return this.eTimReamField;
            }
            set {
                this.eTimReamField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimSpud {
            get {
                return this.eTimSpudField;
            }
            set {
                this.eTimSpudField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimStart {
            get {
                return this.eTimStartField;
            }
            set {
                this.eTimStartField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimSteering {
            get {
                return this.eTimSteeringField;
            }
            set {
                this.eTimSteeringField = value;
            }
        }
        
        /// <remarks/>
        public string Forecast24Hr {
            get {
                return this.forecast24HrField;
            }
            set {
                this.forecast24HrField = value;
            }
        }
        
        /// <remarks/>
        public string Geologist {
            get {
                return this.geologistField;
            }
            set {
                this.geologistField = value;
            }
        }
        
        /// <remarks/>
        public string Lithology {
            get {
                return this.lithologyField;
            }
            set {
                this.lithologyField = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure Maasp {
            get {
                return this.maaspField;
            }
            set {
                this.maaspField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdCsgLast {
            get {
                return this.mdCsgLastField;
            }
            set {
                this.mdCsgLastField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdPlanned {
            get {
                return this.mdPlannedField;
            }
            set {
                this.mdPlannedField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdReport {
            get {
                return this.mdReportField;
            }
            set {
                this.mdReportField = value;
            }
        }
        
        /// <remarks/>
        public string NameFormation {
            get {
                return this.nameFormationField;
            }
            set {
                this.nameFormationField = value;
            }
        }
        
        /// <remarks/>
        public string NumAFE {
            get {
                return this.numAFEField;
            }
            set {
                this.numAFEField = value;
            }
        }
        
        /// <remarks/>
        public int NumContract {
            get {
                return this.numContractField;
            }
            set {
                this.numContractField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumContractSpecified {
            get {
                return this.numContractFieldSpecified;
            }
            set {
                this.numContractFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumOperator {
            get {
                return this.numOperatorField;
            }
            set {
                this.numOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumOperatorSpecified {
            get {
                return this.numOperatorFieldSpecified;
            }
            set {
                this.numOperatorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumPob {
            get {
                return this.numPobField;
            }
            set {
                this.numPobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumPobSpecified {
            get {
                return this.numPobFieldSpecified;
            }
            set {
                this.numPobFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumService {
            get {
                return this.numServiceField;
            }
            set {
                this.numServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumServiceSpecified {
            get {
                return this.numServiceFieldSpecified;
            }
            set {
                this.numServiceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure PresKickTol {
            get {
                return this.presKickTolField;
            }
            set {
                this.presKickTolField = value;
            }
        }
        
        /// <remarks/>
        public MassPerVolumeMeasure PresLotEmw {
            get {
                return this.presLotEmwField;
            }
            set {
                this.presLotEmwField = value;
            }
        }
        
        /// <remarks/>
        public string Rig {
            get {
                return this.rigField;
            }
            set {
                this.rigField = value;
            }
        }
        
        /// <remarks/>
        public LengthPerTimeMeasure RopAv {
            get {
                return this.ropAvField;
            }
            set {
                this.ropAvField = value;
            }
        }
        
        /// <remarks/>
        public LengthPerTimeMeasure RopCurrent {
            get {
                return this.ropCurrentField;
            }
            set {
                this.ropCurrentField = value;
            }
        }
        
        /// <remarks/>
        public string StatusCurrent {
            get {
                return this.statusCurrentField;
            }
            set {
                this.statusCurrentField = value;
            }
        }
        
        /// <remarks/>
        public string Sum24Hr {
            get {
                return this.sum24HrField;
            }
            set {
                this.sum24HrField = value;
            }
        }
        
        /// <remarks/>
        public string Supervisor {
            get {
                return this.supervisorField;
            }
            set {
                this.supervisorField = value;
            }
        }
        
        /// <remarks/>
        public string Tubular {
            get {
                return this.tubularField;
            }
            set {
                this.tubularField = value;
            }
        }
        
        /// <remarks/>
        public WellVerticalDepthCoord TvdCsgLast {
            get {
                return this.tvdCsgLastField;
            }
            set {
                this.tvdCsgLastField = value;
            }
        }
        
        /// <remarks/>
        public WellVerticalDepthCoord TvdLot {
            get {
                return this.tvdLotField;
            }
            set {
                this.tvdLotField = value;
            }
        }
        
        /// <remarks/>
        public WellVerticalDepthCoord TvdReport {
            get {
                return this.tvdReportField;
            }
            set {
                this.tvdReportField = value;
            }
        }
        
        /// <remarks/>
        public VolumeMeasure VolKickTol {
            get {
                return this.volKickTolField;
            }
            set {
                this.volKickTolField = value;
            }
        }
        
        /// <remarks/>
        public RigResponse RigResponse {
            get {
                return this.rigResponseField;
            }
            set {
                this.rigResponseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ShakerOp")]
        public ShakerOp[] ShakerOp {
            get {
                return this.shakerOpField;
            }
            set {
                this.shakerOpField = value;
            }
        }
        
        /// <remarks/>
        public Hse Hse {
            get {
                return this.hseField;
            }
            set {
                this.hseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SupportCraft")]
        public SupportCraft[] SupportCraft {
            get {
                return this.supportCraftField;
            }
            set {
                this.supportCraftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Weather")]
        public Weather[] Weather {
            get {
                return this.weatherField;
            }
            set {
                this.weatherField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MudInventory")]
        public Inventory[] MudInventory {
            get {
                return this.mudInventoryField;
            }
            set {
                this.mudInventoryField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference ReferenceWellbore {
            get {
                return this.referenceWellboreField;
            }
            set {
                this.referenceWellboreField = value;
            }
        }
        
        /// <remarks/>
        public MudVolume MudVolume {
            get {
                return this.mudVolumeField;
            }
            set {
                this.mudVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Personnel")]
        public Personnel[] Personnel {
            get {
                return this.personnelField;
            }
            set {
                this.personnelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Activity")]
        public DrillActivity[] Activity {
            get {
                return this.activityField;
            }
            set {
                this.activityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DrillingParams")]
        public DrillingParams[] DrillingParams {
            get {
                return this.drillingParamsField;
            }
            set {
                this.drillingParamsField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference WbGeometry {
            get {
                return this.wbGeometryField;
            }
            set {
                this.wbGeometryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DayCost")]
        public DayCost[] DayCost {
            get {
                return this.dayCostField;
            }
            set {
                this.dayCostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TrajectoryStation")]
        public TrajectoryStation[] TrajectoryStation {
            get {
                return this.trajectoryStationField;
            }
            set {
                this.trajectoryStationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Fluid")]
        public Fluid[] Fluid {
            get {
                return this.fluidField;
            }
            set {
                this.fluidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Scr")]
        public Scr[] Scr {
            get {
                return this.scrField;
            }
            set {
                this.scrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BulkInventory")]
        public Inventory[] BulkInventory {
            get {
                return this.bulkInventoryField;
            }
            set {
                this.bulkInventoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PitVolume")]
        public PitVolume[] PitVolume {
            get {
                return this.pitVolumeField;
            }
            set {
                this.pitVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PumpOp")]
        public PumpOp[] PumpOp {
            get {
                return this.pumpOpField;
            }
            set {
                this.pumpOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("Trajectory", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_Trajectory : AbstractObject {
        
        private bool objectGrowingField;
        
        private bool objectGrowingFieldSpecified;
        
        private string dTimTrajStartField;
        
        private string dTimTrajEndField;
        
        private MeasuredDepthCoord mdMnField;
        
        private MeasuredDepthCoord mdMxField;
        
        private string serviceCompanyField;
        
        private PlaneAngleMeasure magDeclUsedField;
        
        private PlaneAngleMeasure gridConUsedField;
        
        private PlaneAngleMeasure aziVertSectField;
        
        private LengthMeasure dispNsVertSectOrigField;
        
        private LengthMeasure dispEwVertSectOrigField;
        
        private bool definitiveField;
        
        private bool definitiveFieldSpecified;
        
        private bool memoryField;
        
        private bool memoryFieldSpecified;
        
        private bool finalTrajField;
        
        private bool finalTrajFieldSpecified;
        
        private AziRef aziRefField;
        
        private bool aziRefFieldSpecified;
        
        private TrajectoryStation[] trajectoryStationField;
        
        private DataObjectReference referenceWellboreField;
        
        private DataObjectReference parentTrajectoryField;
        
        /// <remarks/>
        public bool ObjectGrowing {
            get {
                return this.objectGrowingField;
            }
            set {
                this.objectGrowingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ObjectGrowingSpecified {
            get {
                return this.objectGrowingFieldSpecified;
            }
            set {
                this.objectGrowingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string DTimTrajStart {
            get {
                return this.dTimTrajStartField;
            }
            set {
                this.dTimTrajStartField = value;
            }
        }
        
        /// <remarks/>
        public string DTimTrajEnd {
            get {
                return this.dTimTrajEndField;
            }
            set {
                this.dTimTrajEndField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdMn {
            get {
                return this.mdMnField;
            }
            set {
                this.mdMnField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdMx {
            get {
                return this.mdMxField;
            }
            set {
                this.mdMxField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceCompany {
            get {
                return this.serviceCompanyField;
            }
            set {
                this.serviceCompanyField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure MagDeclUsed {
            get {
                return this.magDeclUsedField;
            }
            set {
                this.magDeclUsedField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure GridConUsed {
            get {
                return this.gridConUsedField;
            }
            set {
                this.gridConUsedField = value;
            }
        }
        
        /// <remarks/>
        public PlaneAngleMeasure AziVertSect {
            get {
                return this.aziVertSectField;
            }
            set {
                this.aziVertSectField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure DispNsVertSectOrig {
            get {
                return this.dispNsVertSectOrigField;
            }
            set {
                this.dispNsVertSectOrigField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure DispEwVertSectOrig {
            get {
                return this.dispEwVertSectOrigField;
            }
            set {
                this.dispEwVertSectOrigField = value;
            }
        }
        
        /// <remarks/>
        public bool Definitive {
            get {
                return this.definitiveField;
            }
            set {
                this.definitiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefinitiveSpecified {
            get {
                return this.definitiveFieldSpecified;
            }
            set {
                this.definitiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Memory {
            get {
                return this.memoryField;
            }
            set {
                this.memoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MemorySpecified {
            get {
                return this.memoryFieldSpecified;
            }
            set {
                this.memoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool FinalTraj {
            get {
                return this.finalTrajField;
            }
            set {
                this.finalTrajField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FinalTrajSpecified {
            get {
                return this.finalTrajFieldSpecified;
            }
            set {
                this.finalTrajFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public AziRef AziRef {
            get {
                return this.aziRefField;
            }
            set {
                this.aziRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AziRefSpecified {
            get {
                return this.aziRefFieldSpecified;
            }
            set {
                this.aziRefFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TrajectoryStation")]
        public TrajectoryStation[] TrajectoryStation {
            get {
                return this.trajectoryStationField;
            }
            set {
                this.trajectoryStationField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference ReferenceWellbore {
            get {
                return this.referenceWellboreField;
            }
            set {
                this.referenceWellboreField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference ParentTrajectory {
            get {
                return this.parentTrajectoryField;
            }
            set {
                this.parentTrajectoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum AziRef {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic north")]
        magneticnorth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("grid north")]
        gridnorth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("true north")]
        truenorth,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("DownholeComponent", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_DownholeComponent : AbstractObject {
        
        private string startDateField;
        
        private string endDateField;
        
        private DownholeString[] downholeStringSetField;
        
        private PerforationSet[] perforationSetsField;
        
        private Equipment[] equipmentSetField;
        
        private DataObjectReference referenceWellField;
        
        private DownholeString wellHeadField;
        
        private BoreholeString[] boreholeStringSetField;
        
        /// <remarks/>
        /// <summary>The date range specification: start date</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The date range specification: start date")]
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date range specification: end date</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The date range specification: end date")]
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public DownholeString[] DownholeStringSet {
            get {
                return this.downholeStringSetField;
            }
            set {
                this.downholeStringSetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PerforationSet[] PerforationSets {
            get {
                return this.perforationSetsField;
            }
            set {
                this.perforationSetsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Equipment[] EquipmentSet {
            get {
                return this.equipmentSetField;
            }
            set {
                this.equipmentSetField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference ReferenceWell {
            get {
                return this.referenceWellField;
            }
            set {
                this.referenceWellField = value;
            }
        }
        
        /// <remarks/>
        public DownholeString WellHead {
            get {
                return this.wellHeadField;
            }
            set {
                this.wellHeadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public BoreholeString[] BoreholeStringSet {
            get {
                return this.boreholeStringSetField;
            }
            set {
                this.boreholeStringSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("WellboreGeology", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_WellboreGeology : AbstractObject {
        
        private MdInterval mdIntervalField;
        
        private DataObjectReference showIntervalSetField;
        
        private DataObjectReference interpretedGeologyIntervalSetField;
        
        private DataObjectReference wellboreField;
        
        private DataObjectReference cuttingsIntervalSetField;
        
        /// <remarks/>
        public MdInterval MdInterval {
            get {
                return this.mdIntervalField;
            }
            set {
                this.mdIntervalField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference ShowIntervalSet {
            get {
                return this.showIntervalSetField;
            }
            set {
                this.showIntervalSetField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference InterpretedGeologyIntervalSet {
            get {
                return this.interpretedGeologyIntervalSetField;
            }
            set {
                this.interpretedGeologyIntervalSetField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference Wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference CuttingsIntervalSet {
            get {
                return this.cuttingsIntervalSetField;
            }
            set {
                this.cuttingsIntervalSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("ShowEvaluation", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_ShowEvaluation : AbstractObject {
        
        private MdInterval mdIntervalField;
        
        private Citation citation1Field;
        
        private ShowEvaluationInterval[] evaluatedIntervalShowField;
        
        private DataObjectReference wellboreField;
        
        /// <remarks/>
        public MdInterval MdInterval {
            get {
                return this.mdIntervalField;
            }
            set {
                this.mdIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Citation")]
        public Citation Citation1 {
            get {
                return this.citation1Field;
            }
            set {
                this.citation1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EvaluatedIntervalShow")]
        public ShowEvaluationInterval[] EvaluatedIntervalShow {
            get {
                return this.evaluatedIntervalShowField;
            }
            set {
                this.evaluatedIntervalShowField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference Wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("InterpretedGeology", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_InterpretedGeology : AbstractObject {
        
        private MdInterval mdIntervalField;
        
        private Citation citation1Field;
        
        private InterpretedGeologyInterval[] geologicIntervalInterpretedField;
        
        private DataObjectReference wellboreField;
        
        /// <remarks/>
        public MdInterval MdInterval {
            get {
                return this.mdIntervalField;
            }
            set {
                this.mdIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Citation")]
        public Citation Citation1 {
            get {
                return this.citation1Field;
            }
            set {
                this.citation1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GeologicIntervalInterpreted")]
        public InterpretedGeologyInterval[] GeologicIntervalInterpreted {
            get {
                return this.geologicIntervalInterpretedField;
            }
            set {
                this.geologicIntervalInterpretedField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference Wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("CuttingsGeology", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_CuttingsGeology : AbstractObject {
        
        private MdInterval mdIntervalField;
        
        private Citation citation1Field;
        
        private CuttingsGeologyInterval[] cuttingsIntervalField;
        
        private DataObjectReference wellboreField;
        
        /// <remarks/>
        public MdInterval MdInterval {
            get {
                return this.mdIntervalField;
            }
            set {
                this.mdIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Citation")]
        public Citation Citation1 {
            get {
                return this.citation1Field;
            }
            set {
                this.citation1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CuttingsInterval")]
        public CuttingsGeologyInterval[] CuttingsInterval {
            get {
                return this.cuttingsIntervalField;
            }
            set {
                this.cuttingsIntervalField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference Wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("Log", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_Log : AbstractObject {
        
        private DataObjectReference wellboreField;
        
        private obj_ChannelSet[] channelSetField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference Wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ChannelSet")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public obj_ChannelSet[] ChannelSet {
            get {
                return this.channelSetField;
            }
            set {
                this.channelSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("ChannelSet", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_ChannelSet : AbstractObject {
        
        private ChannelIndex[] indexField;
        
        private obj_Channel[] channelField;
        
        private ChannelData dataField;
        
        private AbstractLogDataContext dataContextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Index")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public ChannelIndex[] Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Channel")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public obj_Channel[] Channel {
            get {
                return this.channelField;
            }
            set {
                this.channelField = value;
            }
        }
        
        /// <remarks/>
        public ChannelData Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public AbstractLogDataContext DataContext {
            get {
                return this.dataContextField;
            }
            set {
                this.dataContextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("Channel", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_Channel : AbstractObject {
        
        private string mnemonicField;
        
        private EtpDataType dataTypeField;
        
        private string uoMField;
        
        private ChannelStatus statusField;
        
        private string sourceField;
        
        private DataObjectReference wellboreField;
        
        private LogChannelAxis[] axisDefinitionField;
        
        private ChannelState channelStateField;
        
        private bool channelStateFieldSpecified;
        
        private string timeDepthField;
        
        private string curveClassField;
        
        private string runNumberField;
        
        private string passNumberField;
        
        private AbstractIndexValue startIndexField;
        
        private string endIndexField;
        
        private string loggingCompanyNameField;
        
        private string loggingCompanyCodeField;
        
        private string toolNameField;
        
        private string toolClassField;
        
        private ChannelDerivation derivationField;
        
        private bool derivationFieldSpecified;
        
        private LoggingMethod loggingMethodField;
        
        private bool loggingMethodFieldSpecified;
        
        private LengthMeasureExt nominalHoleSizeField;
        
        private PointMetadata[] pointMetadataField;
        
        private DataObjectReference[] derivedFromField;
        
        private ChannelIndex[] indexField;
        
        private AbstractObject parentField;
        
        /// <remarks/>
        /// <summary>The mnemonic name for this channel. Mnemonics are not unique within a store.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The mnemonic name for this channel. Mnemonics are not unique within a store.")]
        public string Mnemonic {
            get {
                return this.mnemonicField;
            }
            set {
                this.mnemonicField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public EtpDataType DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string UoM {
            get {
                return this.uoMField;
            }
            set {
                this.uoMField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public ChannelStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Source of the data in the channel. This would contain the contractor name.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Source of the data in the channel. This would contain the contractor name.")]
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference Wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AxisDefinition")]
        public LogChannelAxis[] AxisDefinition {
            get {
                return this.axisDefinitionField;
            }
            set {
                this.axisDefinitionField = value;
            }
        }
        
        /// <remarks/>
        public ChannelState ChannelState {
            get {
                return this.channelStateField;
            }
            set {
                this.channelStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelStateSpecified {
            get {
                return this.channelStateFieldSpecified;
            }
            set {
                this.channelStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is this a time or depth log?</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Is this a time or depth log?")]
        public string TimeDepth {
            get {
                return this.timeDepthField;
            }
            set {
                this.timeDepthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A mandatory value categorizing a log channel. The classification system used in WITSML is the one from the PWLS group.  NOTE: This should turn into an extensible enumeration before WITSML is released.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A mandatory value categorizing a log channel. The classification system used in W" +
            "ITSML is the one from the PWLS group.  NOTE: This should turn into an extensible" +
            " enumeration before WITSML is released.")]
        public string CurveClass {
            get {
                return this.curveClassField;
            }
            set {
                this.curveClassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The nominal run number for the channel. No precise meaning is declared for this attribute but it is so commonly used that it must be included.   The value here should match a bit run number for LWD data and a wireline run number for logging data.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The nominal run number for the channel. No precise meaning is declared for this a" +
            "ttribute but it is so commonly used that it must be included.   The value here s" +
            "hould match a bit run number for LWD data and a wireline run number for logging " +
            "data.")]
        public string RunNumber {
            get {
                return this.runNumberField;
            }
            set {
                this.runNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The nominal pass number for the channel. No precise meaning is declared for this attribute but it is so commonly used that it must be included.   The value here should match a wireline pass number for logging data.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The nominal pass number for the channel. No precise meaning is declared for this " +
            "attribute but it is so commonly used that it must be included.   The value here " +
            "should match a wireline pass number for logging data.")]
        public string PassNumber {
            get {
                return this.passNumberField;
            }
            set {
                this.passNumberField = value;
            }
        }
        
        /// <remarks/>
        public AbstractIndexValue StartIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
            }
        }
        
        /// <remarks/>
        public string EndIndex {
            get {
                return this.endIndexField;
            }
            set {
                this.endIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of the logging company.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of the logging company.")]
        public string LoggingCompanyName {
            get {
                return this.loggingCompanyNameField;
            }
            set {
                this.loggingCompanyNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The RP66 organization code assigned to a logging company. The list is available at http://www.energistics.org/geosciences/geology-standards/rp66-organization-codes</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The RP66 organization code assigned to a logging company. The list is available a" +
            "t http://www.energistics.org/geosciences/geology-standards/rp66-organization-cod" +
            "es")]
        public string LoggingCompanyCode {
            get {
                return this.loggingCompanyCodeField;
            }
            set {
                this.loggingCompanyCodeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of the logging tool as given by the logging contractor.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of the logging tool as given by the logging contractor.")]
        public string ToolName {
            get {
                return this.toolNameField;
            }
            set {
                this.toolNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A value categorizing a logging tool. The classification system used in WITSML is the one from the PWLS group.  NOTE: This should turn into an extensible enumeration before WITSML is released</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A value categorizing a logging tool. The classification system used in WITSML is " +
            "the one from the PWLS group.  NOTE: This should turn into an extensible enumerat" +
            "ion before WITSML is released")]
        public string ToolClass {
            get {
                return this.toolClassField;
            }
            set {
                this.toolClassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Indicates that the channel is derived from one or more other channels</summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the channel is derived from one or more other channels")]
        public ChannelDerivation Derivation {
            get {
                return this.derivationField;
            }
            set {
                this.derivationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DerivationSpecified {
            get {
                return this.derivationFieldSpecified;
            }
            set {
                this.derivationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public LoggingMethod LoggingMethod {
            get {
                return this.loggingMethodField;
            }
            set {
                this.loggingMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LoggingMethodSpecified {
            get {
                return this.loggingMethodFieldSpecified;
            }
            set {
                this.loggingMethodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The nominal hole size at the time the measurement tool was in the hole. The size is "nominal" to indicate that this is not the result of a caliper reading or other direct measurement of the hoe size, but is just a name used to refer to the diameter. This is normally the bit size.  In a case where there are more than one diameter hole being drilled at the same time (like where a reamer is behind the bit) this diameter is the one which was seen by the sensor which produced a particular log channel.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The nominal hole size at the time the measurement tool was in the hole. The size is ""nominal"" to indicate that this is not the result of a caliper reading or other direct measurement of the hoe size, but is just a name used to refer to the diameter. This is normally the bit size.  In a case where there are more than one diameter hole being drilled at the same time (like where a reamer is behind the bit) this diameter is the one which was seen by the sensor which produced a particular log channel.")]
        public LengthMeasureExt NominalHoleSize {
            get {
                return this.nominalHoleSizeField;
            }
            set {
                this.nominalHoleSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PointMetadata")]
        public PointMetadata[] PointMetadata {
            get {
                return this.pointMetadataField;
            }
            set {
                this.pointMetadataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DerivedFrom")]
        public DataObjectReference[] DerivedFrom {
            get {
                return this.derivedFromField;
            }
            set {
                this.derivedFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Index")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public ChannelIndex[] Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public AbstractObject Parent {
            get {
                return this.parentField;
            }
            set {
                this.parentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ChannelStatus {
        
        /// <remarks/>
        active,
        
        /// <remarks/>
        closed,
        
        /// <remarks/>
        inactive,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ChannelState {
        
        /// <remarks/>
        calculated,
        
        /// <remarks/>
        final,
        
        /// <remarks/>
        memory,
        
        /// <remarks/>
        processed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("real time")]
        realtime,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum ChannelDerivation {
        
        /// <remarks/>
        raw,
        
        /// <remarks/>
        simulated,
        
        /// <remarks/>
        spliced,
        
        /// <remarks/>
        sampled,
        
        /// <remarks/>
        model,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum LoggingMethod {
        
        /// <remarks/>
        Computed,
        
        /// <remarks/>
        LWD,
        
        /// <remarks/>
        Mixed,
        
        /// <remarks/>
        MWD,
        
        /// <remarks/>
        Surface,
        
        /// <remarks/>
        Wireline,
        
        /// <remarks/>
        Distributed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("CementJob", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_CementJob : AbstractObject {
        
        private CementJobType jobTypeField;
        
        private bool jobTypeFieldSpecified;
        
        private string jobConfigField;
        
        private string nameCementedStringField;
        
        private string nameWorkStringField;
        
        private bool offshoreJobField;
        
        private bool offshoreJobFieldSpecified;
        
        private LengthMeasure mdWaterField;
        
        private bool returnsToSeabedField;
        
        private bool returnsToSeabedFieldSpecified;
        
        private MeasuredDepthCoord mdPrevShoeField;
        
        private MeasuredDepthCoord mdHoleField;
        
        private WellVerticalDepthCoord tvdPrevShoeField;
        
        private MeasuredDepthCoord mdStringSetField;
        
        private WellVerticalDepthCoord tvdStringSetField;
        
        private string typePlugField;
        
        private string nameCementStringField;
        
        private string typeSqueezeField;
        
        private MeasuredDepthCoord mdSqueezeField;
        
        private string toolCompanyField;
        
        private string typeToolField;
        
        private bool coilTubingField;
        
        private bool coilTubingFieldSpecified;
        
        private CementJobReport jobReportField;
        
        private DataObjectReference referenceWellboreField;
        
        private DataObjectReference holeConfigField;
        
        private CementJobDesign designField;
        
        /// <remarks/>
        public CementJobType JobType {
            get {
                return this.jobTypeField;
            }
            set {
                this.jobTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JobTypeSpecified {
            get {
                return this.jobTypeFieldSpecified;
            }
            set {
                this.jobTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string JobConfig {
            get {
                return this.jobConfigField;
            }
            set {
                this.jobConfigField = value;
            }
        }
        
        /// <remarks/>
        public string NameCementedString {
            get {
                return this.nameCementedStringField;
            }
            set {
                this.nameCementedStringField = value;
            }
        }
        
        /// <remarks/>
        public string NameWorkString {
            get {
                return this.nameWorkStringField;
            }
            set {
                this.nameWorkStringField = value;
            }
        }
        
        /// <remarks/>
        public bool OffshoreJob {
            get {
                return this.offshoreJobField;
            }
            set {
                this.offshoreJobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffshoreJobSpecified {
            get {
                return this.offshoreJobFieldSpecified;
            }
            set {
                this.offshoreJobFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure MdWater {
            get {
                return this.mdWaterField;
            }
            set {
                this.mdWaterField = value;
            }
        }
        
        /// <remarks/>
        public bool ReturnsToSeabed {
            get {
                return this.returnsToSeabedField;
            }
            set {
                this.returnsToSeabedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReturnsToSeabedSpecified {
            get {
                return this.returnsToSeabedFieldSpecified;
            }
            set {
                this.returnsToSeabedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdPrevShoe {
            get {
                return this.mdPrevShoeField;
            }
            set {
                this.mdPrevShoeField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdHole {
            get {
                return this.mdHoleField;
            }
            set {
                this.mdHoleField = value;
            }
        }
        
        /// <remarks/>
        public WellVerticalDepthCoord TvdPrevShoe {
            get {
                return this.tvdPrevShoeField;
            }
            set {
                this.tvdPrevShoeField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdStringSet {
            get {
                return this.mdStringSetField;
            }
            set {
                this.mdStringSetField = value;
            }
        }
        
        /// <remarks/>
        public WellVerticalDepthCoord TvdStringSet {
            get {
                return this.tvdStringSetField;
            }
            set {
                this.tvdStringSetField = value;
            }
        }
        
        /// <remarks/>
        public string TypePlug {
            get {
                return this.typePlugField;
            }
            set {
                this.typePlugField = value;
            }
        }
        
        /// <remarks/>
        public string NameCementString {
            get {
                return this.nameCementStringField;
            }
            set {
                this.nameCementStringField = value;
            }
        }
        
        /// <remarks/>
        public string TypeSqueeze {
            get {
                return this.typeSqueezeField;
            }
            set {
                this.typeSqueezeField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdSqueeze {
            get {
                return this.mdSqueezeField;
            }
            set {
                this.mdSqueezeField = value;
            }
        }
        
        /// <remarks/>
        public string ToolCompany {
            get {
                return this.toolCompanyField;
            }
            set {
                this.toolCompanyField = value;
            }
        }
        
        /// <remarks/>
        public string TypeTool {
            get {
                return this.typeToolField;
            }
            set {
                this.typeToolField = value;
            }
        }
        
        /// <remarks/>
        public bool CoilTubing {
            get {
                return this.coilTubingField;
            }
            set {
                this.coilTubingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CoilTubingSpecified {
            get {
                return this.coilTubingFieldSpecified;
            }
            set {
                this.coilTubingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public CementJobReport JobReport {
            get {
                return this.jobReportField;
            }
            set {
                this.jobReportField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference ReferenceWellbore {
            get {
                return this.referenceWellboreField;
            }
            set {
                this.referenceWellboreField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference HoleConfig {
            get {
                return this.holeConfigField;
            }
            set {
                this.holeConfigField = value;
            }
        }
        
        /// <remarks/>
        public CementJobDesign Design {
            get {
                return this.designField;
            }
            set {
                this.designField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum CementJobType {
        
        /// <remarks/>
        primary,
        
        /// <remarks/>
        plug,
        
        /// <remarks/>
        squeeze,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("CementJobEvaluation", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_CementJobEvaluation : AbstractObject {
        
        private PressureMeasure presTestField;
        
        private TimeMeasure eTimTestField;
        
        private bool cementShoeCollarField;
        
        private bool cementShoeCollarFieldSpecified;
        
        private bool cetRunField;
        
        private bool cetRunFieldSpecified;
        
        private bool cetBondQualField;
        
        private bool cetBondQualFieldSpecified;
        
        private bool cblRunField;
        
        private bool cblRunFieldSpecified;
        
        private bool cblBondQualField;
        
        private bool cblBondQualFieldSpecified;
        
        private PressureMeasure cblPresField;
        
        private bool tempSurveyField;
        
        private bool tempSurveyFieldSpecified;
        
        private TimeMeasure eTimCementLogField;
        
        private ForcePerVolumeMeasure formPitField;
        
        private string toolCompanyPitField;
        
        private TimeMeasure eTimPitStartField;
        
        private MeasuredDepthCoord mdCementTopField;
        
        private string topCementMethodField;
        
        private bool tocOKField;
        
        private bool tocOKFieldSpecified;
        
        private string jobRatingField;
        
        private bool remedialCementField;
        
        private bool remedialCementFieldSpecified;
        
        private int numRemedialField;
        
        private bool numRemedialFieldSpecified;
        
        private string failureMethodField;
        
        private LengthMeasure linerTopField;
        
        private LengthMeasure linerLapField;
        
        private TimeMeasure eTimBeforeTestField;
        
        private string testNegativeToolField;
        
        private MassPerVolumeMeasure testNegativeEmwField;
        
        private string testPositiveToolField;
        
        private MassPerVolumeMeasure testPositiveEmwField;
        
        private bool cementFoundOnToolField;
        
        private bool cementFoundOnToolFieldSpecified;
        
        private MeasuredDepthCoord mdDVToolField;
        
        private DataObjectReference cementJobField;
        
        /// <remarks/>
        public PressureMeasure PresTest {
            get {
                return this.presTestField;
            }
            set {
                this.presTestField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimTest {
            get {
                return this.eTimTestField;
            }
            set {
                this.eTimTestField = value;
            }
        }
        
        /// <remarks/>
        public bool CementShoeCollar {
            get {
                return this.cementShoeCollarField;
            }
            set {
                this.cementShoeCollarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CementShoeCollarSpecified {
            get {
                return this.cementShoeCollarFieldSpecified;
            }
            set {
                this.cementShoeCollarFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool CetRun {
            get {
                return this.cetRunField;
            }
            set {
                this.cetRunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CetRunSpecified {
            get {
                return this.cetRunFieldSpecified;
            }
            set {
                this.cetRunFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool CetBondQual {
            get {
                return this.cetBondQualField;
            }
            set {
                this.cetBondQualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CetBondQualSpecified {
            get {
                return this.cetBondQualFieldSpecified;
            }
            set {
                this.cetBondQualFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool CblRun {
            get {
                return this.cblRunField;
            }
            set {
                this.cblRunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CblRunSpecified {
            get {
                return this.cblRunFieldSpecified;
            }
            set {
                this.cblRunFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool CblBondQual {
            get {
                return this.cblBondQualField;
            }
            set {
                this.cblBondQualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CblBondQualSpecified {
            get {
                return this.cblBondQualFieldSpecified;
            }
            set {
                this.cblBondQualFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PressureMeasure CblPres {
            get {
                return this.cblPresField;
            }
            set {
                this.cblPresField = value;
            }
        }
        
        /// <remarks/>
        public bool TempSurvey {
            get {
                return this.tempSurveyField;
            }
            set {
                this.tempSurveyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TempSurveySpecified {
            get {
                return this.tempSurveyFieldSpecified;
            }
            set {
                this.tempSurveyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimCementLog {
            get {
                return this.eTimCementLogField;
            }
            set {
                this.eTimCementLogField = value;
            }
        }
        
        /// <remarks/>
        public ForcePerVolumeMeasure FormPit {
            get {
                return this.formPitField;
            }
            set {
                this.formPitField = value;
            }
        }
        
        /// <remarks/>
        public string ToolCompanyPit {
            get {
                return this.toolCompanyPitField;
            }
            set {
                this.toolCompanyPitField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimPitStart {
            get {
                return this.eTimPitStartField;
            }
            set {
                this.eTimPitStartField = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdCementTop {
            get {
                return this.mdCementTopField;
            }
            set {
                this.mdCementTopField = value;
            }
        }
        
        /// <remarks/>
        public string TopCementMethod {
            get {
                return this.topCementMethodField;
            }
            set {
                this.topCementMethodField = value;
            }
        }
        
        /// <remarks/>
        public bool TocOK {
            get {
                return this.tocOKField;
            }
            set {
                this.tocOKField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TocOKSpecified {
            get {
                return this.tocOKFieldSpecified;
            }
            set {
                this.tocOKFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string JobRating {
            get {
                return this.jobRatingField;
            }
            set {
                this.jobRatingField = value;
            }
        }
        
        /// <remarks/>
        public bool RemedialCement {
            get {
                return this.remedialCementField;
            }
            set {
                this.remedialCementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RemedialCementSpecified {
            get {
                return this.remedialCementFieldSpecified;
            }
            set {
                this.remedialCementFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumRemedial {
            get {
                return this.numRemedialField;
            }
            set {
                this.numRemedialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumRemedialSpecified {
            get {
                return this.numRemedialFieldSpecified;
            }
            set {
                this.numRemedialFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string FailureMethod {
            get {
                return this.failureMethodField;
            }
            set {
                this.failureMethodField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure LinerTop {
            get {
                return this.linerTopField;
            }
            set {
                this.linerTopField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure LinerLap {
            get {
                return this.linerLapField;
            }
            set {
                this.linerLapField = value;
            }
        }
        
        /// <remarks/>
        public TimeMeasure ETimBeforeTest {
            get {
                return this.eTimBeforeTestField;
            }
            set {
                this.eTimBeforeTestField = value;
            }
        }
        
        /// <remarks/>
        public string TestNegativeTool {
            get {
                return this.testNegativeToolField;
            }
            set {
                this.testNegativeToolField = value;
            }
        }
        
        /// <remarks/>
        public MassPerVolumeMeasure TestNegativeEmw {
            get {
                return this.testNegativeEmwField;
            }
            set {
                this.testNegativeEmwField = value;
            }
        }
        
        /// <remarks/>
        public string TestPositiveTool {
            get {
                return this.testPositiveToolField;
            }
            set {
                this.testPositiveToolField = value;
            }
        }
        
        /// <remarks/>
        public MassPerVolumeMeasure TestPositiveEmw {
            get {
                return this.testPositiveEmwField;
            }
            set {
                this.testPositiveEmwField = value;
            }
        }
        
        /// <remarks/>
        public bool CementFoundOnTool {
            get {
                return this.cementFoundOnToolField;
            }
            set {
                this.cementFoundOnToolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CementFoundOnToolSpecified {
            get {
                return this.cementFoundOnToolFieldSpecified;
            }
            set {
                this.cementFoundOnToolFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public MeasuredDepthCoord MdDVTool {
            get {
                return this.mdDVToolField;
            }
            set {
                this.mdDVToolField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference CementJob {
            get {
                return this.cementJobField;
            }
            set {
                this.cementJobField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("WellboreGeometry", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_WellboreGeometry : AbstractObject {
        
        private MeasuredDepthCoord mdBaseField;
        
        private LengthMeasure gapAirField;
        
        private LengthMeasure depthWaterMeanField;
        
        private WellboreGeometrySection[] wellboreGeometrySectionField;
        
        private DataObjectReference wellboreField;
        
        private DataObjectReference[] bhaRunField;
        
        /// <remarks/>
        public MeasuredDepthCoord MdBase {
            get {
                return this.mdBaseField;
            }
            set {
                this.mdBaseField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure GapAir {
            get {
                return this.gapAirField;
            }
            set {
                this.gapAirField = value;
            }
        }
        
        /// <remarks/>
        public LengthMeasure DepthWaterMean {
            get {
                return this.depthWaterMeanField;
            }
            set {
                this.depthWaterMeanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("WellboreGeometrySection")]
        public WellboreGeometrySection[] WellboreGeometrySection {
            get {
                return this.wellboreGeometrySectionField;
            }
            set {
                this.wellboreGeometrySectionField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference Wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BhaRun")]
        public DataObjectReference[] BhaRun {
            get {
                return this.bhaRunField;
            }
            set {
                this.bhaRunField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("BhaRun", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_BhaRun : AbstractObject {
        
        private string dTimStartField;
        
        private string dTimStopField;
        
        private string dTimStartDrillingField;
        
        private string dTimStopDrillingField;
        
        private AnglePerLengthMeasure planDoglegField;
        
        private AnglePerLengthMeasure actDoglegField;
        
        private AnglePerLengthMeasure actDoglegMxField;
        
        private BhaStatus statusBhaField;
        
        private bool statusBhaFieldSpecified;
        
        private int numBitRunField;
        
        private bool numBitRunFieldSpecified;
        
        private int numStringRunField;
        
        private bool numStringRunFieldSpecified;
        
        private string reasonTripField;
        
        private string objectiveBhaField;
        
        private DrillingParams[] drillingParamsField;
        
        private DataObjectReference wellboreField;
        
        private DataObjectReference tubularField;
        
        /// <remarks/>
        /// <summary>Date and time that activities started.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time that activities started.")]
        public string DTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time that activities stopped.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time that activities stopped.")]
        public string DTimStop {
            get {
                return this.dTimStopField;
            }
            set {
                this.dTimStopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Start on bottom - date and time.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Start on bottom - date and time.")]
        public string DTimStartDrilling {
            get {
                return this.dTimStartDrillingField;
            }
            set {
                this.dTimStartDrillingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Start off bottom - date and time.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Start off bottom - date and time.")]
        public string DTimStopDrilling {
            get {
                return this.dTimStopDrillingField;
            }
            set {
                this.dTimStopDrillingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Planned dogleg severity.</summary>
        [System.ComponentModel.DescriptionAttribute("Planned dogleg severity.")]
        public AnglePerLengthMeasure PlanDogleg {
            get {
                return this.planDoglegField;
            }
            set {
                this.planDoglegField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Actual dogleg severity.</summary>
        [System.ComponentModel.DescriptionAttribute("Actual dogleg severity.")]
        public AnglePerLengthMeasure ActDogleg {
            get {
                return this.actDoglegField;
            }
            set {
                this.actDoglegField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Actual dogleg severity - Maximum.</summary>
        [System.ComponentModel.DescriptionAttribute("Actual dogleg severity - Maximum.")]
        public AnglePerLengthMeasure ActDoglegMx {
            get {
                return this.actDoglegMxField;
            }
            set {
                this.actDoglegMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bottom hole assembly status.</summary>
        [System.ComponentModel.DescriptionAttribute("Bottom hole assembly status.")]
        public BhaStatus StatusBha {
            get {
                return this.statusBhaField;
            }
            set {
                this.statusBhaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusBhaSpecified {
            get {
                return this.statusBhaFieldSpecified;
            }
            set {
                this.statusBhaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bit run number.</summary>
        [System.ComponentModel.DescriptionAttribute("Bit run number.")]
        public int NumBitRun {
            get {
                return this.numBitRunField;
            }
            set {
                this.numBitRunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumBitRunSpecified {
            get {
                return this.numBitRunFieldSpecified;
            }
            set {
                this.numBitRunFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The BHA (drilling string) run number.</summary>
        [System.ComponentModel.DescriptionAttribute("The BHA (drilling string) run number.")]
        public int NumStringRun {
            get {
                return this.numStringRunField;
            }
            set {
                this.numStringRunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumStringRunSpecified {
            get {
                return this.numStringRunFieldSpecified;
            }
            set {
                this.numStringRunFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reason for trip.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Reason for trip.")]
        public string ReasonTrip {
            get {
                return this.reasonTripField;
            }
            set {
                this.reasonTripField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Objective of bottom hole assembly.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.ComponentModel.DescriptionAttribute("Objective of bottom hole assembly.")]
        public string ObjectiveBha {
            get {
                return this.objectiveBhaField;
            }
            set {
                this.objectiveBhaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DrillingParams")]
        public DrillingParams[] DrillingParams {
            get {
                return this.drillingParamsField;
            }
            set {
                this.drillingParamsField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference Wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference Tubular {
            get {
                return this.tubularField;
            }
            set {
                this.tubularField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum BhaStatus {
        
        /// <remarks/>
        final,
        
        /// <remarks/>
        progress,
        
        /// <remarks/>
        plan,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("FluidsReport", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_FluidsReport : AbstractObject {
        
        private string dTimField;
        
        private MeasuredDepthCoord mdField;
        
        private WellVerticalDepthCoord tvdField;
        
        private int numReportField;
        
        private bool numReportFieldSpecified;
        
        private Fluid[] fluidField;
        
        private DataObjectReference referenceWellboreField;
        
        /// <remarks/>
        /// <summary>Date and time the information is related to.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time the information is related to.")]
        public string DTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Along hole measured depth of measurement from the drill datum.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Along hole measured depth of measurement from the drill datum.")]
        public MeasuredDepthCoord Md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Vertical depth of the measurements.</summary>
        [System.ComponentModel.DescriptionAttribute("Vertical depth of the measurements.")]
        public WellVerticalDepthCoord Tvd {
            get {
                return this.tvdField;
            }
            set {
                this.tvdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluids report number.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluids report number.")]
        public int NumReport {
            get {
                return this.numReportField;
            }
            set {
                this.numReportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumReportSpecified {
            get {
                return this.numReportFieldSpecified;
            }
            set {
                this.numReportFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Fluid")]
        public Fluid[] Fluid {
            get {
                return this.fluidField;
            }
            set {
                this.fluidField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference ReferenceWellbore {
            get {
                return this.referenceWellboreField;
            }
            set {
                this.referenceWellboreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("DrillReport", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_DrillReport : AbstractObject {
        
        private string dTimStartField;
        
        private string dTimEndField;
        
        private OpsReportVersion versionKindField;
        
        private bool versionKindFieldSpecified;
        
        private string createDateField;
        
        private WellDatum[] wellDatumField;
        
        private BitRecord[] bitRecordField;
        
        private DrillActivity[] drillActivityField;
        
        private DrillReportLogInfo[] logInfoField;
        
        private DrillReportCoreInfo[] coreInfoField;
        
        private DrillReportWellTestInfo[] wellTestInfoField;
        
        private DrillReportFormTestInfo[] formTestInfoField;
        
        private DrillReportLithShowInfo[] lithShowInfoField;
        
        private DrillReportEquipFailureInfo[] equipFailureInfoField;
        
        private DrillReportControlIncidentInfo[] controlIncidentInfoField;
        
        private DrillReportStratInfo[] stratInfoField;
        
        private DrillReportPerfInfo[] perfInfoField;
        
        private DrillReportGasReadingInfo[] gasReadingInfoField;
        
        private DataObjectReference referenceWellboreField;
        
        private ObjectAlias wellAliasField;
        
        private ObjectAlias[] wellboreAliasField;
        
        private DrillReportWellboreInfo wellboreInfoField;
        
        private DrillReportStatusInfo[] statusInfoField;
        
        private Fluid[] fluidField;
        
        private DrillReportPorePressure[] porePressureField;
        
        private TimestampedCommentString extendedReportField;
        
        private DrillReportSurveyStation[] surveyStationField;
        
        /// <remarks/>
        /// <summary>Date and time of the start of the reporting period.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time of the start of the reporting period.")]
        public string DTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time end of the reporting period. Report periods are commonly 24 hour periods.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time end of the reporting period. Report periods are commonly 24 hour pe" +
            "riods.")]
        public string DTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of report version. For example, a  preliminary version.</summary>
        [System.ComponentModel.DescriptionAttribute("The kind of report version. For example, a  preliminary version.")]
        public OpsReportVersion VersionKind {
            get {
                return this.versionKindField;
            }
            set {
                this.versionKindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionKindSpecified {
            get {
                return this.versionKindFieldSpecified;
            }
            set {
                this.versionKindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time of the report creation. A later timestamp indicates a newer version. In order to update values in a report a full  updated copy of the original report should be submitted.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("The date and time of the report creation. A later timestamp indicates a newer ver" +
            "sion. In order to update values in a report a full  updated copy of the original" +
            " report should be submitted.")]
        public string CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines a vertical datum used for  measured depths, vertical depths or elevations. This must be specified if one of the aforementioned coordinate values are included in the report. This only applies to this report and is generally a copy of the same information from the well object.</summary>
        [System.Xml.Serialization.XmlElementAttribute("WellDatum")]
        [System.ComponentModel.DescriptionAttribute(@"Defines a vertical datum used for  measured depths, vertical depths or elevations. This must be specified if one of the aforementioned coordinate values are included in the report. This only applies to this report and is generally a copy of the same information from the well object.")]
        public WellDatum[] WellDatum {
            get {
                return this.wellDatumField;
            }
            set {
                this.wellDatumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about a bit.</summary>
        [System.Xml.Serialization.XmlElementAttribute("BitRecord")]
        [System.ComponentModel.DescriptionAttribute("Information about a bit.")]
        public BitRecord[] BitRecord {
            get {
                return this.bitRecordField;
            }
            set {
                this.bitRecordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DrillActivity")]
        public DrillActivity[] DrillActivity {
            get {
                return this.drillActivityField;
            }
            set {
                this.drillActivityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LogInfo")]
        public DrillReportLogInfo[] LogInfo {
            get {
                return this.logInfoField;
            }
            set {
                this.logInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CoreInfo")]
        public DrillReportCoreInfo[] CoreInfo {
            get {
                return this.coreInfoField;
            }
            set {
                this.coreInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("WellTestInfo")]
        public DrillReportWellTestInfo[] WellTestInfo {
            get {
                return this.wellTestInfoField;
            }
            set {
                this.wellTestInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FormTestInfo")]
        public DrillReportFormTestInfo[] FormTestInfo {
            get {
                return this.formTestInfoField;
            }
            set {
                this.formTestInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LithShowInfo")]
        public DrillReportLithShowInfo[] LithShowInfo {
            get {
                return this.lithShowInfoField;
            }
            set {
                this.lithShowInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EquipFailureInfo")]
        public DrillReportEquipFailureInfo[] EquipFailureInfo {
            get {
                return this.equipFailureInfoField;
            }
            set {
                this.equipFailureInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ControlIncidentInfo")]
        public DrillReportControlIncidentInfo[] ControlIncidentInfo {
            get {
                return this.controlIncidentInfoField;
            }
            set {
                this.controlIncidentInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StratInfo")]
        public DrillReportStratInfo[] StratInfo {
            get {
                return this.stratInfoField;
            }
            set {
                this.stratInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PerfInfo")]
        public DrillReportPerfInfo[] PerfInfo {
            get {
                return this.perfInfoField;
            }
            set {
                this.perfInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GasReadingInfo")]
        public DrillReportGasReadingInfo[] GasReadingInfo {
            get {
                return this.gasReadingInfoField;
            }
            set {
                this.gasReadingInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference ReferenceWellbore {
            get {
                return this.referenceWellboreField;
            }
            set {
                this.referenceWellboreField = value;
            }
        }
        
        /// <remarks/>
        public ObjectAlias WellAlias {
            get {
                return this.wellAliasField;
            }
            set {
                this.wellAliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("WellboreAlias")]
        public ObjectAlias[] WellboreAlias {
            get {
                return this.wellboreAliasField;
            }
            set {
                this.wellboreAliasField = value;
            }
        }
        
        /// <remarks/>
        public DrillReportWellboreInfo WellboreInfo {
            get {
                return this.wellboreInfoField;
            }
            set {
                this.wellboreInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StatusInfo")]
        public DrillReportStatusInfo[] StatusInfo {
            get {
                return this.statusInfoField;
            }
            set {
                this.statusInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Fluid")]
        public Fluid[] Fluid {
            get {
                return this.fluidField;
            }
            set {
                this.fluidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PorePressure")]
        public DrillReportPorePressure[] PorePressure {
            get {
                return this.porePressureField;
            }
            set {
                this.porePressureField = value;
            }
        }
        
        /// <remarks/>
        public TimestampedCommentString ExtendedReport {
            get {
                return this.extendedReportField;
            }
            set {
                this.extendedReportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SurveyStation")]
        public DrillReportSurveyStation[] SurveyStation {
            get {
                return this.surveyStationField;
            }
            set {
                this.surveyStationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum OpsReportVersion {
        
        /// <remarks/>
        preliminary,
        
        /// <remarks/>
        normal,
        
        /// <remarks/>
        final,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("Tubular", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_Tubular : AbstractObject {
        
        private TubularAssembly typeTubularAssyField;
        
        private bool valveFloatField;
        
        private bool valveFloatFieldSpecified;
        
        private bool sourceNuclearField;
        
        private bool sourceNuclearFieldSpecified;
        
        private LengthMeasure diaHoleAssyField;
        
        private TubularComponent[] tubularComponentField;
        
        private DataObjectReference referenceWellboreField;
        
        /// <remarks/>
        /// <summary>Type of tubular assembly.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Type of tubular assembly.")]
        public TubularAssembly TypeTubularAssy {
            get {
                return this.typeTubularAssyField;
            }
            set {
                this.typeTubularAssyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is float valve present?  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is float valve present?  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool ValveFloat {
            get {
                return this.valveFloatField;
            }
            set {
                this.valveFloatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValveFloatSpecified {
            get {
                return this.valveFloatFieldSpecified;
            }
            set {
                this.valveFloatFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is nuclear tool present?  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is nuclear tool present?  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        public bool SourceNuclear {
            get {
                return this.sourceNuclearField;
            }
            set {
                this.sourceNuclearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceNuclearSpecified {
            get {
                return this.sourceNuclearFieldSpecified;
            }
            set {
                this.sourceNuclearFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum hole size generated by assembly.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum hole size generated by assembly.")]
        public LengthMeasure DiaHoleAssy {
            get {
                return this.diaHoleAssyField;
            }
            set {
                this.diaHoleAssyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TubularComponent")]
        public TubularComponent[] TubularComponent {
            get {
                return this.tubularComponentField;
            }
            set {
                this.tubularComponentField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference ReferenceWellbore {
            get {
                return this.referenceWellboreField;
            }
            set {
                this.referenceWellboreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum TubularAssembly {
        
        /// <remarks/>
        drilling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("directional drilling")]
        directionaldrilling,
        
        /// <remarks/>
        fishing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("condition mud")]
        conditionmud,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tubing conveyed logging")]
        tubingconveyedlogging,
        
        /// <remarks/>
        cementing,
        
        /// <remarks/>
        casing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("clean out")]
        cleanout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completion or testing")]
        completionortesting,
        
        /// <remarks/>
        coring,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hole opening or underreaming")]
        holeopeningorunderreaming,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("milling or dressing or cutting")]
        millingordressingorcutting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wiper or check or reaming")]
        wiperorcheckorreaming,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("Attachment", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_Attachment : AbstractObject {
        
        private string categoryField;
        
        private MeasuredDepthCoord mdField;
        
        private ExtensionNameValue[] paramField;
        
        private MeasuredDepthCoord mdBitField;
        
        private string fileNameField;
        
        private string fileTypeField;
        
        private byte[] contentField;
        
        private string subObjectReferenceField;
        
        private AbstractObject objectReferenceField;
        
        private DataObjectReference referenceWellboreField;
        
        /// <remarks/>
        /// <summary>This element is used to tell what the object is when you have multiple attachments of the same file type. E.g. if we have attached a picture of cuttings on a specific depth, one could like to tag it with *Category="CuttingsPicture"</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("This element is used to tell what the object is when you have multiple attachment" +
            "s of the same file type. E.g. if we have attached a picture of cuttings on a spe" +
            "cific depth, one could like to tag it with *Category=\"CuttingsPicture\"")]
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Along hole measured depth represented by the attachment.</summary>
        [System.ComponentModel.DescriptionAttribute("Along hole measured depth represented by the attachment.")]
        public MeasuredDepthCoord Md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Any extra numeric data. For this usage the name attribute MUST be specified because it represents the meaning of the data. While the index attribute is mandatory, it is only significant if the same name repeats.</summary>
        [System.Xml.Serialization.XmlElementAttribute("Param")]
        [System.ComponentModel.DescriptionAttribute("Any extra numeric data. For this usage the name attribute MUST be specified becau" +
            "se it represents the meaning of the data. While the index attribute is mandatory" +
            ", it is only significant if the same name repeats.")]
        public ExtensionNameValue[] Param {
            get {
                return this.paramField;
            }
            set {
                this.paramField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Along hole measured depth of the bit.</summary>
        [System.ComponentModel.DescriptionAttribute("Along hole measured depth of the bit.")]
        public MeasuredDepthCoord MdBit {
            get {
                return this.mdBitField;
            }
            set {
                this.mdBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A file name associated with the attachment. Note this is not a file path and should contain a name only.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A file name associated with the attachment. Note this is not a file path and shou" +
            "ld contain a name only.")]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The file type. This field SHOULD be a registered mime type as cataloged at http://www.iana.org/assignments/media-types/media-types.xhtml.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The file type. This field SHOULD be a registered mime type as cataloged at http:/" +
            "/www.iana.org/assignments/media-types/media-types.xhtml.")]
        public string FileType {
            get {
                return this.fileTypeField;
            }
            set {
                this.fileTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The actual attachment content.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The actual attachment content.")]
        public byte[] Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to an sub-object that is defined within the context of the object referenced by objectReference. This should only refer to recurring components of a growing object. The content is the Uid of the sub object.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A reference to an sub-object that is defined within the context of the object ref" +
            "erenced by objectReference. This should only refer to recurring components of a " +
            "growing object. The content is the Uid of the sub object.")]
        public string SubObjectReference {
            get {
                return this.subObjectReferenceField;
            }
            set {
                this.subObjectReferenceField = value;
            }
        }
        
        /// <remarks/>
        public AbstractObject ObjectReference {
            get {
                return this.objectReferenceField;
            }
            set {
                this.objectReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference ReferenceWellbore {
            get {
                return this.referenceWellboreField;
            }
            set {
                this.referenceWellboreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("Wellbore", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_Wellbore : AbstractObject {
        
        private string numberField;
        
        private string suffixAPIField;
        
        private string numGovtField;
        
        private WellStatus statusWellboreField;
        
        private bool statusWellboreFieldSpecified;
        
        private bool isActiveField;
        
        private bool isActiveFieldSpecified;
        
        private WellPurpose purposeWellboreField;
        
        private bool purposeWellboreFieldSpecified;
        
        private WellboreType typeWellboreField;
        
        private bool typeWellboreFieldSpecified;
        
        private WellboreShape shapeField;
        
        private bool shapeFieldSpecified;
        
        private string dTimKickoffField;
        
        private bool achievedTDField;
        
        private bool achievedTDFieldSpecified;
        
        private MeasuredDepthCoord mdField;
        
        private WellVerticalDepthCoord tvdField;
        
        private MeasuredDepthCoord mdBitField;
        
        private WellVerticalDepthCoord tvdBitField;
        
        private MeasuredDepthCoord mdKickoffField;
        
        private WellVerticalDepthCoord tvdKickoffField;
        
        private MeasuredDepthCoord mdPlannedField;
        
        private WellVerticalDepthCoord tvdPlannedField;
        
        private MeasuredDepthCoord mdSubSeaPlannedField;
        
        private WellVerticalDepthCoord tvdSubSeaPlannedField;
        
        private TimeMeasure dayTargetField;
        
        private DataObjectReference referenceWellField;
        
        private DataObjectReference parentWellboreField;
        
        /// <remarks/>
        /// <summary>Operator borehole number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Operator borehole number.")]
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>API suffix.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("API suffix.")]
        public string SuffixAPI {
            get {
                return this.suffixAPIField;
            }
            set {
                this.suffixAPIField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Government assigned number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Government assigned number.")]
        public string NumGovt {
            get {
                return this.numGovtField;
            }
            set {
                this.numGovtField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC wellbore status.</summary>
        [System.ComponentModel.DescriptionAttribute("POSC wellbore status.")]
        public WellStatus StatusWellbore {
            get {
                return this.statusWellboreField;
            }
            set {
                this.statusWellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusWellboreSpecified {
            get {
                return this.statusWellboreFieldSpecified;
            }
            set {
                this.statusWellboreFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True (="1" or "true") indicates that the wellbore is active. False (="0" or "false") indicates otherwise. It is the servers responsibility to  set this value based on its available internal data (e.g., what objects are changing).</summary>
        [System.ComponentModel.DescriptionAttribute("True (=\"1\" or \"true\") indicates that the wellbore is active. False (=\"0\" or \"fals" +
            "e\") indicates otherwise. It is the servers responsibility to  set this value bas" +
            "ed on its available internal data (e.g., what objects are changing).")]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsActiveSpecified {
            get {
                return this.isActiveFieldSpecified;
            }
            set {
                this.isActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC wellbore purpose.</summary>
        [System.ComponentModel.DescriptionAttribute("POSC wellbore purpose.")]
        public WellPurpose PurposeWellbore {
            get {
                return this.purposeWellboreField;
            }
            set {
                this.purposeWellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PurposeWellboreSpecified {
            get {
                return this.purposeWellboreFieldSpecified;
            }
            set {
                this.purposeWellboreFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of wellbore.")]
        public WellboreType TypeWellbore {
            get {
                return this.typeWellboreField;
            }
            set {
                this.typeWellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeWellboreSpecified {
            get {
                return this.typeWellboreFieldSpecified;
            }
            set {
                this.typeWellboreFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC wellbore trajectory shape.</summary>
        [System.ComponentModel.DescriptionAttribute("POSC wellbore trajectory shape.")]
        public WellboreShape Shape {
            get {
                return this.shapeField;
            }
            set {
                this.shapeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShapeSpecified {
            get {
                return this.shapeFieldSpecified;
            }
            set {
                this.shapeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of wellbore kickoff.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time of wellbore kickoff.")]
        public string DTimKickoff {
            get {
                return this.dTimKickoffField;
            }
            set {
                this.dTimKickoffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True ("true" of "1") indicates that the wellbore has  acheieved total depth. That is, drilling has completed. False ("false" or "0") indicates otherwise.  Not given indicates that it is not known whether total depth has been reached.</summary>
        [System.ComponentModel.DescriptionAttribute("True (\"true\" of \"1\") indicates that the wellbore has  acheieved total depth. That" +
            " is, drilling has completed. False (\"false\" or \"0\") indicates otherwise.  Not gi" +
            "ven indicates that it is not known whether total depth has been reached.")]
        public bool AchievedTD {
            get {
                return this.achievedTDField;
            }
            set {
                this.achievedTDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AchievedTDSpecified {
            get {
                return this.achievedTDFieldSpecified;
            }
            set {
                this.achievedTDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth of the borehole.  If status is plugged, indicates the maximum depth reached before plugging. It is recommended that this value be updated about every 10 minutes by an assigned  raw data provider at a site.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth of the borehole.  If status is plugged, indicates the maximum " +
            "depth reached before plugging. It is recommended that this value be updated abou" +
            "t every 10 minutes by an assigned  raw data provider at a site.")]
        public MeasuredDepthCoord Md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The  true vertical depth of the borehole.   If status is plugged, indicates the maximum depth reached before plugging.  It is recommended that this value be updated about every 10 minutes by an assigned  raw data provider at a site.</summary>
        [System.ComponentModel.DescriptionAttribute("The  true vertical depth of the borehole.   If status is plugged, indicates the m" +
            "aximum depth reached before plugging.  It is recommended that this value be upda" +
            "ted about every 10 minutes by an assigned  raw data provider at a site.")]
        public WellVerticalDepthCoord Tvd {
            get {
                return this.tvdField;
            }
            set {
                this.tvdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth of the bit.  If isActive=false then this value is not relevant. It is recommended that this value be updated about every 10 minutes by an assigned  raw data provider at a site.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth of the bit.  If isActive=false then this value is not relevant" +
            ". It is recommended that this value be updated about every 10 minutes by an assi" +
            "gned  raw data provider at a site.")]
        public MeasuredDepthCoord MdBit {
            get {
                return this.mdBitField;
            }
            set {
                this.mdBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The true vertical depth of the bit. If isActive=false then this value is not relevant. It is recommended that this value be updated about every 10 minutes by an assigned  raw data provider at a site.</summary>
        [System.ComponentModel.DescriptionAttribute("The true vertical depth of the bit. If isActive=false then this value is not rele" +
            "vant. It is recommended that this value be updated about every 10 minutes by an " +
            "assigned  raw data provider at a site.")]
        public WellVerticalDepthCoord TvdBit {
            get {
                return this.tvdBitField;
            }
            set {
                this.tvdBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Kickoff measured depth of the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("Kickoff measured depth of the wellbore.")]
        public MeasuredDepthCoord MdKickoff {
            get {
                return this.mdKickoffField;
            }
            set {
                this.mdKickoffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Kickoff true vertical depth of the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("Kickoff true vertical depth of the wellbore.")]
        public WellVerticalDepthCoord TvdKickoff {
            get {
                return this.tvdKickoffField;
            }
            set {
                this.tvdKickoffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Planned measured depth for the wellbore total depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Planned measured depth for the wellbore total depth.")]
        public MeasuredDepthCoord MdPlanned {
            get {
                return this.mdPlannedField;
            }
            set {
                this.mdPlannedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Planned true vertical depth for the wellbore total depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Planned true vertical depth for the wellbore total depth.")]
        public WellVerticalDepthCoord TvdPlanned {
            get {
                return this.tvdPlannedField;
            }
            set {
                this.tvdPlannedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Planned measured for the wellbore total depth - with respect to seabed.</summary>
        [System.ComponentModel.DescriptionAttribute("Planned measured for the wellbore total depth - with respect to seabed.")]
        public MeasuredDepthCoord MdSubSeaPlanned {
            get {
                return this.mdSubSeaPlannedField;
            }
            set {
                this.mdSubSeaPlannedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Planned true vertical depth for the wellbore total depth - with respect to seabed.</summary>
        [System.ComponentModel.DescriptionAttribute("Planned true vertical depth for the wellbore total depth - with respect to seabed" +
            ".")]
        public WellVerticalDepthCoord TvdSubSeaPlanned {
            get {
                return this.tvdSubSeaPlannedField;
            }
            set {
                this.tvdSubSeaPlannedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Target days for drilling wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("Target days for drilling wellbore.")]
        public TimeMeasure DayTarget {
            get {
                return this.dayTargetField;
            }
            set {
                this.dayTargetField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        public DataObjectReference ReferenceWell {
            get {
                return this.referenceWellField;
            }
            set {
                this.referenceWellField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference ParentWellbore {
            get {
                return this.parentWellboreField;
            }
            set {
                this.parentWellboreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum WellStatus {
        
        /// <remarks/>
        abandoned,
        
        /// <remarks/>
        active,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("active -- injecting")]
        activeinjecting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("active -- producing")]
        activeproducing,
        
        /// <remarks/>
        completed,
        
        /// <remarks/>
        drilling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("partially plugged")]
        partiallyplugged,
        
        /// <remarks/>
        permitted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plugged and abandoned")]
        pluggedandabandoned,
        
        /// <remarks/>
        proposed,
        
        /// <remarks/>
        sold,
        
        /// <remarks/>
        suspended,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("temporarily abandoned")]
        temporarilyabandoned,
        
        /// <remarks/>
        testing,
        
        /// <remarks/>
        tight,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("working over")]
        workingover,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum WellPurpose {
        
        /// <remarks/>
        appraisal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("appraisal -- confirmation appraisal")]
        appraisalconfirmationappraisal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("appraisal -- exploratory appraisal")]
        appraisalexploratoryappraisal,
        
        /// <remarks/>
        exploration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("exploration -- deeper-pool wildcat")]
        explorationdeeperpoolwildcat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("exploration -- new-field wildcat")]
        explorationnewfieldwildcat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("exploration -- new-pool wildcat")]
        explorationnewpoolwildcat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("exploration -- outpost wildcat")]
        explorationoutpostwildcat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("exploration -- shallower-pool wildcat")]
        explorationshallowerpoolwildcat,
        
        /// <remarks/>
        development,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("development -- infill development")]
        developmentinfilldevelopment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("development -- injector")]
        developmentinjector,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("development -- producer")]
        developmentproducer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fluid storage")]
        fluidstorage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fluid storage -- gas storage")]
        fluidstoragegasstorage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc")]
        generalsrvc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc -- borehole re-acquisition")]
        generalsrvcboreholereacquisition,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc -- observation")]
        generalsrvcobservation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc -- relief")]
        generalsrvcrelief,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc -- research")]
        generalsrvcresearch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc -- research -- drill test")]
        generalsrvcresearchdrilltest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc -- research -- strat test")]
        generalsrvcresearchstrattest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc -- waste disposal")]
        generalsrvcwastedisposal,
        
        /// <remarks/>
        mineral,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum WellboreShape {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("build and hold")]
        buildandhold,
        
        /// <remarks/>
        deviated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("double kickoff")]
        doublekickoff,
        
        /// <remarks/>
        horizontal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("S-shaped")]
        Sshaped,
        
        /// <remarks/>
        vertical,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    [System.Xml.Serialization.XmlRootAttribute("Well", Namespace="http://www.energistics.org/energyml/data/witsmlv2", IsNullable=false)]
    public partial class obj_Well : AbstractObject {
        
        private string nameLegalField;
        
        private string numLicenseField;
        
        private string numGovtField;
        
        private string dTimLicenseField;
        
        private string fieldField;
        
        private string countryField;
        
        private string stateField;
        
        private string countyField;
        
        private string regionField;
        
        private string districtField;
        
        private string blockField;
        
        private string timeZoneField;
        
        private string operatorField;
        
        private string operatorDivField;
        
        private string originalOperatorField;
        
        private DimensionlessMeasure pcInterestField;
        
        private string numAPIField;
        
        private WellStatus statusWellField;
        
        private bool statusWellFieldSpecified;
        
        private WellPurpose purposeWellField;
        
        private bool purposeWellFieldSpecified;
        
        private WellFluid fluidWellField;
        
        private bool fluidWellFieldSpecified;
        
        private WellDirection directionWellField;
        
        private bool directionWellFieldSpecified;
        
        private string dTimSpudField;
        
        private string dTimPaField;
        
        private LengthMeasure waterDepthField;
        
        private GeodeticWellLocation geographicLocationWGS84Field;
        
        private AbstractWellLocation[] wellLocationField;
        
        private PublicLandSurveySystem wellPublicLandSurveySystemLocationField;
        
        private ReferencePoint[] referencePointField;
        
        private WellElevationCoord wellheadElevationField;
        
        private WellDatum[] wellDatumField;
        
        private WellElevationCoord groundElevationField;
        
        /// <remarks/>
        /// <summary>Legal name of the well.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Legal name of the well.")]
        public string NameLegal {
            get {
                return this.nameLegalField;
            }
            set {
                this.nameLegalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>License number of the well.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("License number of the well.")]
        public string NumLicense {
            get {
                return this.numLicenseField;
            }
            set {
                this.numLicenseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Government assigned well number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Government assigned well number.")]
        public string NumGovt {
            get {
                return this.numGovtField;
            }
            set {
                this.numGovtField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time license  was issued.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time license  was issued.")]
        public string DTimLicense {
            get {
                return this.dTimLicenseField;
            }
            set {
                this.dTimLicenseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of the field in which the well is located.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of the field in which the well is located.")]
        public string Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Country in which well is located.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Country in which well is located.")]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>State or province in which well is located.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("State or province in which well is located.")]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>County in which the well is located.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("County in which the well is located.")]
        public string County {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Geo-political region.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Geo-political region.")]
        public string Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Geo-political district name.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Geo-political district name.")]
        public string District {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Block name in which well is located.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Block name in which well is located.")]
        public string Block {
            get {
                return this.blockField;
            }
            set {
                this.blockField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time zone in which well is located.   It is the deviation in hours and minutes from UTC. This should be the normal time zone at the well and not a seasonally  adjusted value such as daylight savings time.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[Z]|([\\-+](([01][0-9])|(2[0-3])):[0-5][0-9])")]
        [System.ComponentModel.DescriptionAttribute("The time zone in which well is located.   It is the deviation in hours and minute" +
            "s from UTC. This should be the normal time zone at the well and not a seasonally" +
            "  adjusted value such as daylight savings time.")]
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Operator company name.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Operator company name.")]
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Division of operator company.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Division of operator company.")]
        public string OperatorDiv {
            get {
                return this.operatorDivField;
            }
            set {
                this.operatorDivField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Original operator of the well. This may be different than the current operator.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Original operator of the well. This may be different than the current operator.")]
        public string OriginalOperator {
            get {
                return this.originalOperatorField;
            }
            set {
                this.originalOperatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Interest for Operator. Commonly in percent.</summary>
        [System.ComponentModel.DescriptionAttribute("Interest for Operator. Commonly in percent.")]
        public DimensionlessMeasure PcInterest {
            get {
                return this.pcInterestField;
            }
            set {
                this.pcInterestField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>American Petroleum Institute well number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("American Petroleum Institute well number.")]
        public string NumAPI {
            get {
                return this.numAPIField;
            }
            set {
                this.numAPIField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC Well status.</summary>
        [System.ComponentModel.DescriptionAttribute("POSC Well status.")]
        public WellStatus StatusWell {
            get {
                return this.statusWellField;
            }
            set {
                this.statusWellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusWellSpecified {
            get {
                return this.statusWellFieldSpecified;
            }
            set {
                this.statusWellFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC well purpose.</summary>
        [System.ComponentModel.DescriptionAttribute("POSC well purpose.")]
        public WellPurpose PurposeWell {
            get {
                return this.purposeWellField;
            }
            set {
                this.purposeWellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PurposeWellSpecified {
            get {
                return this.purposeWellFieldSpecified;
            }
            set {
                this.purposeWellFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC well fluid. The type of fluid being produced from or injected  into a well facility.</summary>
        [System.ComponentModel.DescriptionAttribute("POSC well fluid. The type of fluid being produced from or injected  into a well f" +
            "acility.")]
        public WellFluid FluidWell {
            get {
                return this.fluidWellField;
            }
            set {
                this.fluidWellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FluidWellSpecified {
            get {
                return this.fluidWellFieldSpecified;
            }
            set {
                this.fluidWellFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC well direction. The direction of flow of the fluids in a well facility (generally, injected or produced, or some combination).</summary>
        [System.ComponentModel.DescriptionAttribute("POSC well direction. The direction of flow of the fluids in a well facility (gene" +
            "rally, injected or produced, or some combination).")]
        public WellDirection DirectionWell {
            get {
                return this.directionWellField;
            }
            set {
                this.directionWellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DirectionWellSpecified {
            get {
                return this.directionWellFieldSpecified;
            }
            set {
                this.directionWellFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time at which well was spudded.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time at which well was spudded.")]
        public string DTimSpud {
            get {
                return this.dTimSpudField;
            }
            set {
                this.dTimSpudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time at which well was plugged and abandoned.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+T.+[Z+\\-].*")]
        [System.ComponentModel.DescriptionAttribute("Date and time at which well was plugged and abandoned.")]
        public string DTimPa {
            get {
                return this.dTimPaField;
            }
            set {
                this.dTimPaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Depth of water (not land rigs).</summary>
        [System.ComponentModel.DescriptionAttribute("Depth of water (not land rigs).")]
        public LengthMeasure WaterDepth {
            get {
                return this.waterDepthField;
            }
            set {
                this.waterDepthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The latitude (in coordinate1) and longitude (in coordinate2) of the well location in the WGS84 coordinate system (equivalent to EPSG:4326). Units are in decimal degrees.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The latitude (in coordinate1) and longitude (in coordinate2) of the well location" +
            " in the WGS84 coordinate system (equivalent to EPSG:4326). Units are in decimal " +
            "degrees.")]
        public GeodeticWellLocation GeographicLocationWGS84 {
            get {
                return this.geographicLocationWGS84Field;
            }
            set {
                this.geographicLocationWGS84Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("WellLocation")]
        public AbstractWellLocation[] WellLocation {
            get {
                return this.wellLocationField;
            }
            set {
                this.wellLocationField = value;
            }
        }
        
        /// <remarks/>
        public PublicLandSurveySystem WellPublicLandSurveySystemLocation {
            get {
                return this.wellPublicLandSurveySystemLocationField;
            }
            set {
                this.wellPublicLandSurveySystemLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ReferencePoint")]
        public ReferencePoint[] ReferencePoint {
            get {
                return this.referencePointField;
            }
            set {
                this.referencePointField = value;
            }
        }
        
        /// <remarks/>
        public WellElevationCoord WellheadElevation {
            get {
                return this.wellheadElevationField;
            }
            set {
                this.wellheadElevationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("WellDatum")]
        public WellDatum[] WellDatum {
            get {
                return this.wellDatumField;
            }
            set {
                this.wellDatumField = value;
            }
        }
        
        /// <remarks/>
        public WellElevationCoord GroundElevation {
            get {
                return this.groundElevationField;
            }
            set {
                this.groundElevationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum WellFluid {
        
        /// <remarks/>
        air,
        
        /// <remarks/>
        condensate,
        
        /// <remarks/>
        dry,
        
        /// <remarks/>
        gas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas-water")]
        gaswater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("non HC gas")]
        nonHCgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("non HC gas -- CO2")]
        nonHCgasCO2,
        
        /// <remarks/>
        oil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil-gas")]
        oilgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil-water")]
        oilwater,
        
        /// <remarks/>
        steam,
        
        /// <remarks/>
        water,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water -- brine")]
        waterbrine,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water -- fresh water")]
        waterfreshwater,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/witsmlv2")]
    public enum WellDirection {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("huff-n-puff")]
        huffnpuff,
        
        /// <remarks/>
        injector,
        
        /// <remarks/>
        producer,
        
        /// <remarks/>
        uncertain,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    [System.Xml.Serialization.XmlRootAttribute("DataAssuranceRecord", Namespace="http://www.energistics.org/energyml/data/commonv2", IsNullable=false)]
    public partial class obj_DataAssuranceRecord : AbstractObject {
        
        private string policyIdField;
        
        private string policyNameField;
        
        private string referencedElementNameField;
        
        private string referencedElementUidField;
        
        private string originField;
        
        private bool conformanceField;
        
        private string dateField;
        
        private string commentField;
        
        private IndexRange indexRangeField;
        
        private FailingRule[] failingRulesField;
        
        private DataObjectReference referencedDataField;
        
        /// <remarks/>
        public string PolicyId {
            get {
                return this.policyIdField;
            }
            set {
                this.policyIdField = value;
            }
        }
        
        /// <remarks/>
        public string PolicyName {
            get {
                return this.policyNameField;
            }
            set {
                this.policyNameField = value;
            }
        }
        
        /// <remarks/>
        public string ReferencedElementName {
            get {
                return this.referencedElementNameField;
            }
            set {
                this.referencedElementNameField = value;
            }
        }
        
        /// <remarks/>
        public string ReferencedElementUid {
            get {
                return this.referencedElementUidField;
            }
            set {
                this.referencedElementUidField = value;
            }
        }
        
        /// <remarks/>
        public string Origin {
            get {
                return this.originField;
            }
            set {
                this.originField = value;
            }
        }
        
        /// <remarks/>
        public bool Conformance {
            get {
                return this.conformanceField;
            }
            set {
                this.conformanceField = value;
            }
        }
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public IndexRange IndexRange {
            get {
                return this.indexRangeField;
            }
            set {
                this.indexRangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FailingRules")]
        public FailingRule[] FailingRules {
            get {
                return this.failingRulesField;
            }
            set {
                this.failingRulesField = value;
            }
        }
        
        /// <remarks/>
        public DataObjectReference ReferencedData {
            get {
                return this.referencedDataField;
            }
            set {
                this.referencedDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class VerticalCrs : AbstractObject {
        
        private VerticalDirection directionField;
        
        private AbstractVerticalCrs abstractVerticalCrsField;
        
        private string uomField;
        
        /// <remarks/>
        public VerticalDirection Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        public AbstractVerticalCrs AbstractVerticalCrs {
            get {
                return this.abstractVerticalCrsField;
            }
            set {
                this.abstractVerticalCrsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum VerticalDirection {
        
        /// <remarks/>
        up,
        
        /// <remarks/>
        down,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class GeodeticCrs : AbstractObject {
        
        private AbstractGeodeticCrs abstractGeodeticCrsField;
        
        /// <remarks/>
        public AbstractGeodeticCrs AbstractGeodeticCrs {
            get {
                return this.abstractGeodeticCrsField;
            }
            set {
                this.abstractGeodeticCrsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public partial class ProjectedCrs : AbstractObject {
        
        private AxisOrder2d axisOrderField;
        
        private AbstractProjectedCrs abstractProjectedCrsField;
        
        private string uomField;
        
        /// <remarks/>
        public AxisOrder2d AxisOrder {
            get {
                return this.axisOrderField;
            }
            set {
                this.axisOrderField = value;
            }
        }
        
        /// <remarks/>
        public AbstractProjectedCrs AbstractProjectedCrs {
            get {
                return this.abstractProjectedCrsField;
            }
            set {
                this.abstractProjectedCrsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    public enum AxisOrder2d {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("easting northing")]
        eastingnorthing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("northing easting")]
        northingeasting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("westing southing")]
        westingsouthing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("southing westing")]
        southingwesting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("northing westing")]
        northingwesting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("westing northing")]
        westingnorthing,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/energyml/data/commonv2")]
    [System.Xml.Serialization.XmlRootAttribute("EpcExternalPartReference", Namespace="http://www.energistics.org/energyml/data/commonv2", IsNullable=false)]
    public partial class obj_EpcExternalPartReference : AbstractObject {
        
        private string filenameField;
        
        private string mimeTypeField;
        
        /// <remarks/>
        public string Filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        public string MimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
            }
        }
    }
}
