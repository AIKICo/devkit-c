<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="http://www.energistics.org/energyml/data/witsmlv2" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:eml="http://www.energistics.org/energyml/data/commonv2" xmlns:witsml="http://www.energistics.org/energyml/data/witsmlv2" elementFormDefault="qualified" version="2.0">
	<!--														-->
	<xs:include schemaLocation="Wellbore.xsd"/>
	<!--														-->
	<xs:import namespace="http://www.energistics.org/energyml/data/commonv2" schemaLocation="../../../common/v2.1/xsd_schemas/EmlAllObjects.xsd"/>
	<xs:simpleType name="IndexDirection">
		<xs:restriction base="eml:TypeEnum">
			<xs:enumeration value="decreasing"/>
			<xs:enumeration value="increasing"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:group name="LogChannelMetadata">
		<xs:annotation>
			<xs:documentation>Common metadata across all channel objects</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ChannelState" type="witsml:ChannelState" minOccurs="0" maxOccurs="1"/>
			<xs:element name="TimeDepth" type="eml:String64" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Is this a time or depth log?</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurveClass" type="eml:String64" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>A mandatory value categorizing a log channel. The classification system used in WITSML is the one from the PWLS group.

NOTE: This should turn into an extensible enumeration before WITSML is released.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RunNumber" type="eml:String64" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The nominal run number for the channel. No precise meaning is declared for this attribute but it is so commonly used that it must be included. 

The value here should match a bit run number for LWD data and a wireline run number for logging data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PassNumber" type="eml:String64" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The nominal pass number for the channel. No precise meaning is declared for this attribute but it is so commonly used that it must be included. 

The value here should match a wireline pass number for logging data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StartIndex" type="witsml:AbstractIndexValue" minOccurs="0" maxOccurs="1"/>
			<xs:element name="EndIndex" type="witsml:AbstractIndexValue" minOccurs="0" maxOccurs="1"/>
			<xs:element name="LoggingCompanyName" type="eml:String64" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Name of the logging company.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LoggingCompanyCode" type="eml:String64" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The RP66 organization code assigned to a logging company. The list is available at http://www.energistics.org/geosciences/geology-standards/rp66-organization-codes </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolName" type="eml:String64" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Name of the logging tool as given by the logging contractor.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolClass" type="eml:String64" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>A value categorizing a logging tool. The classification system used in WITSML is the one from the PWLS group.

NOTE: This should turn into an extensible enumeration before WITSML is released</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Derivation" type="witsml:ChannelDerivation" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Indicates that the channel is derived from one or more other channels</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LoggingMethod" type="witsml:LoggingMethod" minOccurs="0" maxOccurs="1"/>
			<xs:element name="NominalHoleSize" type="eml:LengthMeasureExt" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The nominal hole size at the time the measurement tool was in the hole. The size is "nominal" to indicate that this is not the result of a caliper reading or other direct measurement of the hoe size, but is just a name used to refer to the diameter. This is normally the bit size.

In a case where there are more than one diameter hole being drilled at the same time (like where a reamer is behind the bit) this diameter is the one which was seen by the sensor which produced a particular log channel.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:element name="ChannelSet" type="witsml:ChannelSet" substitutionGroup="eml:AbstractDataObject"/>
	<xs:complexType name="ChannelSet">
		<xs:complexContent>
			<xs:extension base="eml:AbstractObject">
				<xs:sequence>
					<xs:element name="Index" type="witsml:ChannelIndex" minOccurs="1" maxOccurs="unbounded"/>
					<xs:element name="Channel" type="witsml:Channel" minOccurs="1" maxOccurs="unbounded"/>
					<xs:element name="Data" type="witsml:ChannelData" minOccurs="0" maxOccurs="1"/>
					<xs:group ref="witsml:LogChannelMetadata" minOccurs="1" maxOccurs="1"/>
					<xs:element name="DataContext" type="witsml:AbstractLogDataContext" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ChannelData">
		<xs:annotation>
			<xs:documentation>Contains the bulk data for the log, either as a base64-encoded string or as a reference to an external file.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Data" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The data blob in JSON form. This allows you to embed the bulk data in a single file with the xml, to avoid the issues that arise with splitting the data across multiple files.


BUSINESS RULE: Either this element or the FileUri element must be present</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FileUri" type="xs:anyURI" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The uri of a file containing the bulkdata. If this field is non-null, then the data field is ignored. For files written to disk, this should normally contain a simple file name in relative URI form. For instance, if an application writes a log file to disk, it might write the xml as abc.xml, and the bulk data abc.avro. In that case the value of this element would be './abc.avro'.


BUSINESS RULE: Either this element or the Data element must be present</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PointMetadata">
		<xs:annotation>
			<xs:documentation>The PointMetadata class is used to declare that data points in a specific WITSML log channel may contain value attributes (e.g., quality identifiers).. This declaration is independent from the possibility that ETP may have sent ValueAttributes in real time.

If a instance of PointMetadata is present for a Channel then the value for that point will be represented as an array in the bulk data string.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="eml:String64" minOccurs="1" maxOccurs="1"/>
			<xs:element name="EtpDataType" type="witsml:EtpDataType" minOccurs="1" maxOccurs="1"/>
			<xs:element name="Description" type="eml:String2000" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PassIndexedDepth">
		<xs:complexContent>
			<xs:extension base="witsml:AbstractIndexValue">
				<xs:sequence>
					<xs:element name="Pass" type="xs:int" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The pass number. Pass is incremented every time direction changes twice.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Direction" type="xs:int" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Direction. 0=down, 1=up (i.e. 0=increasing depth, 1=decreasing depth). Changes every time direction changes. When a log starts from the bottom, start with pass = 0, direction=1. Change the pass when you get to the top and start down again.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Depth" type="xs:float" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The measured depth of the point.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ChannelIndex">
		<xs:annotation>
			<xs:documentation>This is a read-only class which is the union of those channel indexes which are shared by all channels in the channel set.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="IndexType" type="witsml:ChannelIndexType" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The type of index (time, depth, etc)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Uom" type="eml:String64" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The units of the index. Must be one of the units allowed for the specified IndexType (i.e. time or distance).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Direction" type="witsml:IndexDirection" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The direction of the index, either increasing or decreasing. Index direction may not change within the life of a channel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Mnemonic" type="eml:String64" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The mnemonic for the index.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DatumReference" type="eml:String64" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>For depth indexes, this contains the uid of the datum, in the Channel's Well object, to which all of the index values are referenced.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="LoggingMethod">
		<xs:restriction base="eml:TypeEnum">
			<xs:enumeration value="computed"/>
			<xs:enumeration value="distributed"/>
			<xs:enumeration value="LWD"/>
			<xs:enumeration value="mixed"/>
			<xs:enumeration value="MWD"/>
			<xs:enumeration value="surface"/>
			<xs:enumeration value="wireline"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ChannelIndexType">
		<xs:restriction base="eml:TypeEnum">
			<xs:enumeration value="measured depth"/>
			<xs:enumeration value="true vertical depth"/>
			<xs:enumeration value="pass indexed depth">
				<xs:annotation>
					<xs:documentation>An index value that included Pass, Direction, and Depth value. This can only refer to measured depths. See the description of the</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="date time"/>
			<xs:enumeration value="elapsed time"/>
			<xs:enumeration value="temperature"/>
			<xs:enumeration value="pressure"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ChannelState">
		<xs:restriction base="eml:TypeEnum">
			<xs:enumeration value="calculated"/>
			<xs:enumeration value="final"/>
			<xs:enumeration value="memory"/>
			<xs:enumeration value="processed"/>
			<xs:enumeration value="real time"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="Log" type="witsml:Log" substitutionGroup="eml:AbstractDataObject"/>
	<xs:complexType name="Log">
		<xs:complexContent>
			<xs:extension base="eml:AbstractObject">
				<xs:sequence>
					<xs:group ref="witsml:LogChannelMetadata" minOccurs="1" maxOccurs="1"/>
					<xs:element name="Wellbore" type="eml:DataObjectReference" minOccurs="1" maxOccurs="1"/>
					<xs:element name="ChannelSet" type="witsml:ChannelSet" minOccurs="1" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AbstractIndexValue" abstract="true">
		<xs:sequence/>
	</xs:complexType>
	<xs:complexType name="TimeIndexValue">
		<xs:complexContent>
			<xs:extension base="witsml:AbstractIndexValue">
				<xs:sequence>
					<xs:element name="Time" type="eml:TimeStamp" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DepthIndexValue">
		<xs:complexContent>
			<xs:extension base="witsml:AbstractIndexValue">
				<xs:sequence>
					<xs:element name="Depth" type="xs:float" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="EtpDataType">
		<xs:restriction base="eml:TypeEnum">
			<xs:enumeration value="boolean"/>
			<xs:enumeration value="bytes"/>
			<xs:enumeration value="double"/>
			<xs:enumeration value="float"/>
			<xs:enumeration value="int"/>
			<xs:enumeration value="long"/>
			<xs:enumeration value="null"/>
			<xs:enumeration value="string"/>
			<xs:enumeration value="vector"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="Channel" type="witsml:Channel" substitutionGroup="eml:AbstractDataObject"/>
	<xs:complexType name="Channel">
		<xs:annotation>
			<xs:documentation>A channel object. Corresponds roughly to the LogCurveInfo structure in WITSML1411, and directly corresponds to the ChannelMetadataRecord structure in ETP. In historian terminology, a Channel corresponds directly to a tag.

Channels are the fundamental unit of organization for WITSML logs.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="eml:AbstractObject">
				<xs:sequence>
					<xs:element name="Mnemonic" type="eml:String64" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The mnemonic name for this channel. Mnemonics are not unique within a store.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DataType" type="witsml:EtpDataType" minOccurs="1" maxOccurs="1"/>
					<xs:element name="Uom" type="eml:String64" minOccurs="1" maxOccurs="1"/>
					<xs:element name="Status" type="witsml:ChannelStatus" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The status of a Channel with respect to creating new measurements. An active Channel is considered to by actively producing data points. An inactive Channel is known to be offline or not currently producing, but may begin producing again at some future point. A closed Channel will never produce points again. The rules for when a Channel is to be closed will vary some for different kinds of Channels. For instance, time-based surface Channels may remain open for the entire life of the drilling operation, whereas depth-based wireline Channels would be Closed at the end of the wireline job.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Source" type="eml:String64" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Source of the data in the channel. This would contain the contractor name.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Wellbore" type="eml:DataObjectReference" minOccurs="0" maxOccurs="1"/>
					<xs:element name="AxisDefinition" type="witsml:LogChannelAxis" minOccurs="0" maxOccurs="unbounded"/>
					<xs:group ref="witsml:LogChannelMetadata" minOccurs="1" maxOccurs="1"/>
					<xs:element name="PointMetadata" type="witsml:PointMetadata" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="DerivedFrom" type="eml:DataObjectReference" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="Index" type="witsml:ChannelIndex" minOccurs="1" maxOccurs="unbounded"/>
					<xs:element name="Parent" type="eml:AbstractObject" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AbstractLogDataContext" abstract="true">
		<xs:annotation>
			<xs:documentation>The LogDataContext defines a constraint against the data points in the log's channel. Each time the log is realized, only the data points satisfying this constraint will be included.</xs:documentation>
		</xs:annotation>
		<xs:sequence/>
	</xs:complexType>
	<xs:complexType name="IndexRangeContext">
		<xs:annotation>
			<xs:documentation>Describes the data context for a log in terms of a starting and ending index. When this context is used, each realization of the log will include all data points from the log's channel set that follow between the specified start and end index.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="witsml:AbstractLogDataContext">
				<xs:sequence>
					<xs:element name="StartIndex" type="witsml:AbstractIndexValue" minOccurs="1" maxOccurs="1"/>
					<xs:element name="EndIndex" type="witsml:AbstractIndexValue" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ObjectContext">
		<xs:annotation>
			<xs:documentation>The ObjectContext specifies the range of index values for a Log by reference to another object (or sub-object) which contains the index range as part of its data.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="witsml:AbstractLogDataContext">
				<xs:sequence>
					<xs:element name="ObjectReference" type="eml:DataObjectReference" minOccurs="1" maxOccurs="1"/>
					<xs:element name="Uid" type="eml:String64" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If the reference is to a sub object in a growing object  (e.g. a WbGeometry Section) then this must contain the uid of the growing part.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LogChannelAxis">
		<xs:annotation>
			<xs:documentation>Metadata by which the array structure of a compound value is defined. This defines one axis of an array type used in a Log Channel.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AxisStart" type="xs:double" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Value of the initial entry in the list of axis index values.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AxisSpacing" type="xs:double" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The increment to be used to fill out the list of the log channel axis index values.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AxisCount" type="eml:PositiveLong" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The count of elements along this axis of the array.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AxisName" type="eml:String64" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The name of the array axis.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AxisPropertyKind" type="eml:String64" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The property type by which the array axis is classified. Like "measured depth" or "elapsed time".</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AxisUom" type="eml:String64" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>A string representing the units of measure of the axis values.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="uid" use="optional" type="eml:String64"/>
	</xs:complexType>
	<xs:simpleType name="ChannelStatus">
		<xs:restriction base="eml:TypeEnum">
			<xs:enumeration value="active">
				<xs:annotation>
					<xs:documentation>Channel is actively producing data points.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="closed">
				<xs:annotation>
					<xs:documentation>Channel is closed and will never produce new data points.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="inactive">
				<xs:annotation>
					<xs:documentation>Channel is currently inactive, but may produce data points in the future.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="ChannelValueContext">
		<xs:annotation>
			<xs:documentation>This data context object describes the data for the log in terms of  the value of a given channel.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="witsml:AbstractLogDataContext">
				<xs:sequence>
					<xs:element name="ChannelReference" type="eml:DataObjectReference" minOccurs="1" maxOccurs="1"/>
					<xs:element name="DataValue" type="xs:string" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="ChannelDerivation">
		<xs:restriction base="eml:TypeEnum">
			<xs:enumeration value="raw">
				<xs:annotation>
					<xs:documentation>Channel is raw measured data, directly from sensors.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="simulated">
				<xs:annotation>
					<xs:documentation>Channel values are simulated.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="spliced">
				<xs:annotation>
					<xs:documentation>Channel values are derived by splicing values from two or more other channels.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="sampled">
				<xs:annotation>
					<xs:documentation>Channel values are derived by sampling values from one or more other channels.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="model">
				<xs:annotation>
					<xs:documentation>Channel values are based on some modeled results of values in another one or more channels.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!--														-->
	<!-- Energistics License Agreement
			This file is distributed under the Energistics Product License Agreement at
			http://www.energistics.org/product-license-agreement
			Use of this file constitutes agreement with the Energistics Product License Agreement.
			Copyright (c) 2016 Energistics. All rights reserved.
			Energistics, WITSML, PRODML and RESQML are trademarks or registered trademarks of Energistics.
			-->
	<!--														-->
	</xs:schema>
